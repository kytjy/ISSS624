---
title: "In-Class Exercise 5: Spatial Econometrics Interaction Modelling"
date: "16 December 2023"
date-modified: "last-modified"
editor: visual
toc-depth: 4
execute:
  freeze: auto
  echo: true #all the codes will appear
  eval: true #all the codes will run
  warning: false #dont display if there are any warnings
format: 
  html:
    code-fold: false
    code-overflow: scroll
    code-summary: "Show the code"
    code-line-numbers: true
---


# 1 Overview

# 2 Getting Started

To download the development version of **spflow** package

```{r}
devtools::install_github("LukeCe/spflow", force=TRUE)
```

```{r}
pacman::p_load(tmap, sf, spdep, sp, Matrix, 
               spflow, reshape2, knitr, tidyverse)
```



# 3 Data Preparation

Three data sets are required:
-   Spatial weights
-   tibble data.frame consisting of origin, destination, flows, and distances between O-D, and
-   tibble data.frame consisting of the explanatory variables.

:::panel-tabset

## Building Geographical Area


```{r}
mpsz <- st_read(dsn="data/geospatial",
                layer="MPSZ-2019") %>% 
  st_transform(crs=3414)
```

```{r}
mpsz$`BUSSTOP_COUNT` <-  lengths(
  st_intersects(
    mpsz, busstop
  )
)
```


## Preparing Spatial Weights


```{r}
#| eval: false
#centroids <-  suppressWarnings({
#  st_point_on_surface(st_geometry(mpsz_busstop))
#})

#mpsz_nb <- list(
#  "by_contiguity" = poly2nb(mps_busstop), # queens method by default
#  "by_distance" = dnearneigh(centroids,
#                             d1=0, d2=5000),
#  "by_knn" = knn2nb(knearneigh(centroids,3)) # 3 nearest neighbours
#)

```

```{r}
#| eval: false
mpsz_nb
```

By distance:
Avg = 49 = average distance (not # of neighbours)

## Preparing Flow Data



## From RDS

Let us retrieve the RDS files using the code chunk below:


```{r}
mpsz_flow <- read_rds("data/rds/mpsz_flow.rds")   ## Interaction of O-D with trips
mpsz_nb <- read_rds("data/rds/mpsz_nb.rds")   ## W = neighbour list
mpsz_var <- read_rds("data/rds/mpsz_var.rds")   ## Explanatory variables


#flwdata <- read_rds("data/rds/flow_data.rds")
#flwline <- read_rds("data/rds/flowLine.rds")
#od_data <- read_rds("data/rds/od_data.rds")
#odbus6_9 <- read_rds("data/rds/odbus6_9.rds")
#schs <- read_rds("data/rds/schools.rds")

```


:::


# 4 Creating `spflow_network-class` objects

`spflow_network-class`:
-   S4 class that contains all information on a spatial network which is composed by a set of nodes that are linked by some


```{r}
mpsz_net <- spflow_network(
  id_net = "sg", #can call anything
  node_neighborhood =
    nb2mat(mpsz_nb$by_contiguity),
  node_data = mpsz_var,
  node_key_column = "SZ_CODE"
)

mpsz_net
```


# 5 Creating Flow Network Pair


```{r}
mpsz_net_pairs <- spflow_network_pair(
  id_orig_net = "sg",
  id_dest_net = "sg",
  pair_data = mpsz_flow,
  orig_key_column = "ORIGIN_SZ",
  dest_key_column = "DESTIN_SZ")

mpsz_net_pairs
```

# 6 Combining Data


```{r}
mpsz_multi_net <-  spflow_network_multi(mpsz_net,
                                        mpsz_net_pairs)

mpsz_multi_net
```

mpsz_flow = 313 * 313 = 97969

# 7 Model Calibration

## 7.1 Multicollinearity

Can cause biasness in the model, esp with explanatory models.

Two uses: detect suitable explanatory variables & check for multicollinearity


```{r}
cor_formula <- log(1 + TRIPS) ~
  BUSSTOP_COUNT +
  AGE7_12 +
  AGE13_24 +
  AGE25_64 +
  SCHOOL_COUNT +
  BUSINESS_COUNT +
  RETAILS_COUNT +
  FINSERV_COUNT +
  P_(log(DISTANCE+1)) # impedance eg cost, time or distance to take from 1 point to another

cor_mat <- pair_cor(
  mpsz_multi_net,
  spflow_formula = cor_formula,
  add_lags_x = FALSE # excludes neighbourhood bc cor_mat alr has neighbours
)

colnames(cor_mat) <- paste0(
  substr(
    colnames(cor_mat),1,3
  ),"..."
)

cor_image(cor_mat)
```

## 7.2 Base Model


```{r}
base_model <- spflow(
  spflow_formula = log(1+ TRIPS)~
    O_(BUSSTOP_COUNT +
         AGE25_64) +
    D_(SCHOOL_COUNT +
         BUSINESS_COUNT +
         RETAILS_COUNT +
         FINSERV_COUNT) +
    P_(log(DISTANCE + 1)),
  spflow_networks = mpsz_multi_net # contains neighbour, flow, variables
)

base_model
```


Output: 
MLE = maximum likelihood (model 9)
rho = all statistically significant
school = statistically significant at immediate subzone, but school_lag1 = not significant. Means neighour school does not affect trips
finserv/busstops/population = immediate subzone and neighbours are all statistically significant
Contributions of the variables are not the same




# 8 Residual Diagnostics


```{r}
old_par <-  par(mfrow = c(1,3),
                mar=c(2,2,2,2))

spflow_moran_plots(base_model)

```

```{r}
corr_residual <- pair_cor(base_model)
colnames(corr_residual) <- substr(colnames(corr_residual),1,3)
cor_image(corr_residual)
```

Residuals of destination, origin, and intrazonal.

# 9. Model Control

## Model 8

```{r}
spflow_formula <- log(1+TRIPS) ~
 O_(BUSSTOP_COUNT +
         AGE25_64) +
    D_(SCHOOL_COUNT +
         BUSINESS_COUNT +
         RETAILS_COUNT +
         FINSERV_COUNT) +
    P_(log(DISTANCE + 1))

model_control <-  spflow_control( ## Define how to control the model
  estimation_method = "mle",
  model = "model_8"
)

mle_model8 <- spflow(
  spflow_formula,
  spflow_networks = mpsz_multi_net,
  estimation_control = model_control)

mle_model8
```





## Model 1

```{r}
model_control <-  spflow_control( ## Define how to control the model
  estimation_method = "mle",
  model = "model_1"
)

mle_model1 <- spflow(
  spflow_formula,
  spflow_networks = mpsz_multi_net,
  estimation_control = model_control)

mle_model1
```

