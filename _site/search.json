[
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3.html",
    "href": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3.html",
    "title": "Hands-on Exercise 3: Processing and Visualising Flow Data",
    "section": "",
    "text": "Spatial interaction describe quatitatively the flow of people, material, or information between locations in geographical space.\nConditions for Spatial Flows\nThree interdependent conditions are necessary for a spatial interaction to occur:\n\nFeatures\n\n\nLocations: A movement is occurring between a location of origin and a location of destination (i=origin; j =destination)\nCentroid: Abstraction of the attributes of a zone at a point\nFlows: Expressed by a valued vector Tij representing an interaction between locations i and j\nVectors: A vector Tij links two centroids and has a value assigned to it (50) which can represents movements\n\n\n\nIn this hands-on exercise, we will learn how to build an OD matrix by using Passenger Volume by Origin Destination Bus Stops data set downloaded from LTA DataMall. By the end of this hands-on exercise, we will be able:\n\nto import and extract OD data for a selected time interval,\nto import and save geospatial data (i.e. bus stops and mpsz) into sf tibble data frame objects,\nto populate planning subzone code into bus stops sf tibble data frame,\nto construct desire lines geospatial data from the OD data, and\nto visualise passenger volume by origin and destination bus stops by using the desire lines data.\n\n\n\n\n\npacman::p_load(tmap, sf, DT, stplanr,\n               performance,\n               ggpubr, tidyverse)\n\n\ntmap for creating thematic maps; useful for static and interactive maps.\nsf for importing, integrating, processing and transforming geospatial data.\nDT for interactive data tables\nstplanr for sustainable transport planning; provides functions and tools for analysis and visualisation of transport projects\nperformance for model performance measurement\nggpubr for visualisation\ntidyverse for importing, integrating, wrangling and visualising data.\n\n\n\n\n\nImporting OD dataExtracting study data\n\n\nNote: Using October 2023 data because Postman API couldn’t find Oct 2022 data, maybe too long ago :(\n\nodbus &lt;- read_csv(\"data/aspatial/origin_destination_bus_202310.csv\")\n\n\nglimpse(odbus)\n\nRows: 5,694,297\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-10\", \"2023-10\", \"2023-10\", \"2023-10\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKENDS/HOLIDAY\", \"WEEKDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       &lt;dbl&gt; 16, 16, 14, 14, 17, 17, 17, 7, 14, 14, 10, 20, 20,…\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;chr&gt; \"04168\", \"04168\", \"80119\", \"80119\", \"44069\", \"2028…\n$ DESTINATION_PT_CODE &lt;chr&gt; \"10051\", \"10051\", \"90079\", \"90079\", \"17229\", \"2014…\n$ TOTAL_TRIPS         &lt;dbl&gt; 3, 5, 3, 5, 4, 1, 24, 2, 1, 7, 3, 2, 5, 1, 1, 1, 1…\n\n\nodbus tibble data frame shows that the values in ORIGIN_PT_CODE and DESTINATON_PT_CODE are in numeric data type. Hence, the code chunk below is used to convert these data values into character data type.\n\nodbus$ORIGIN_PT_CODE &lt;- as.factor(odbus$ORIGIN_PT_CODE)\nodbus$DESTINATION_PT_CODE &lt;- as.factor(odbus$DESTINATION_PT_CODE) \n\nRecheck to confirm that the 2 variables have indeed been updated:\n\nglimpse(odbus)\n\nRows: 5,694,297\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-10\", \"2023-10\", \"2023-10\", \"2023-10\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKENDS/HOLIDAY\", \"WEEKDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       &lt;dbl&gt; 16, 16, 14, 14, 17, 17, 17, 7, 14, 14, 10, 20, 20,…\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;fct&gt; 04168, 04168, 80119, 80119, 44069, 20281, 20281, 1…\n$ DESTINATION_PT_CODE &lt;fct&gt; 10051, 10051, 90079, 90079, 17229, 20141, 20141, 1…\n$ TOTAL_TRIPS         &lt;dbl&gt; 3, 5, 3, 5, 4, 1, 24, 2, 1, 7, 3, 2, 5, 1, 1, 1, 1…\n\n\n\n\nFor our study, we will extract commuting flows on weekday and between 6 and 9 o’clock.\n\nodbus6_9 &lt;- odbus %&gt;%\n  filter(DAY_TYPE == \"WEEKDAY\") %&gt;%\n  filter(TIME_PER_HOUR &gt;= 6 &\n           TIME_PER_HOUR &lt;= 9) %&gt;%\n  group_by(ORIGIN_PT_CODE,\n           DESTINATION_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n\ndatatable allows for interactive tables:\n\n\nShow the code\ndatatable(\n  odbus6_9,\n  filter='top')\n\n\n\n\n\n\n\nWe will save the output in rds format for future use, and reimport the saved rds file into R environment:\n\nwrite_rds(odbus6_9, \"data/rds/odbus6_9.rds\")\nodbus6_9 &lt;- read_rds(\"data/rds/odbus6_9.rds\")\n\n\n\n\n\n\n\nTwo geospatial data will be used. They are:\n\nBusStop: This data provides the location of bus stop as at last quarter of 2022.\nMPSZ-2019: This data provides the sub-zone boundary of URA Master Plan 2019.\n\nBoth data sets are in ESRI shapefile format.\n\nImporting geospatial dataGeospatial data wrangling\n\n\n\n\nNote that there are repeated bus stop ids , however they have different bus stop roof ids and geometry values.\n\nbusstop &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"BusStop\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `BusStop' from data source \n  `C:\\kytjy\\ISSS624\\Hands-on_Ex\\Hands-on_Ex3\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\n\nduplicate &lt;- busstop %&gt;%\n  group_by(BUS_STOP_N) %&gt;%\n  filter(n() &gt; 1) %&gt;%\n  ungroup()\n\nduplicate\n\nSimple feature collection with 32 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 13488.02 ymin: 32594.17 xmax: 44144.57 ymax: 47934\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 32 × 4\n   BUS_STOP_N BUS_ROOF_N LOC_DESC                       geometry\n   &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;                       &lt;POINT [m]&gt;\n 1 58031      UNK        OPP CANBERRA DR      (27089.69 47570.9)\n 2 62251      B03        Bef Blk 471B        (35500.54 39943.41)\n 3 47201      UNK        &lt;NA&gt;                (22616.75 47793.68)\n 4 58031      UNK        OPP CANBERRA DR     (27111.07 47517.77)\n 5 22501      B02        Blk 662A             (13489.09 35536.4)\n 6 82221      B01        BLK 3A               (35323.6 33257.05)\n 7 68091      B01        AFT BAKER ST        (32164.11 42695.98)\n 8 43709      B06        BLK 644              (18963.42 36762.8)\n 9 97079      B14        OPP ST. JOHN'S CRES (44144.57 38980.25)\n10 82221      B01        Blk 3A              (35308.74 33335.17)\n# ℹ 22 more rows\n\n\nThere are duplicated bus stop numbers, but with different roof IDs and geometry. Some of them could be temporary bus stops within the month?\n\n\n\n\nst_read() function of sf package is used to import the shapefile into R as sf data frame.\nst_transform() function of sf package is used to transform the projection to crs 3414.\n\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"MPSZ-2019\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `MPSZ-2019' from data source \n  `C:\\kytjy\\ISSS624\\Hands-on_Ex\\Hands-on_Ex3\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\nmpsz\n\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n                 SUBZONE_N SUBZONE_C       PLN_AREA_N PLN_AREA_C       REGION_N\n1              MARINA EAST    MESZ01      MARINA EAST         ME CENTRAL REGION\n2         INSTITUTION HILL    RVSZ05     RIVER VALLEY         RV CENTRAL REGION\n3           ROBERTSON QUAY    SRSZ01  SINGAPORE RIVER         SR CENTRAL REGION\n4  JURONG ISLAND AND BUKOM    WISZ01  WESTERN ISLANDS         WI    WEST REGION\n5             FORT CANNING    MUSZ02           MUSEUM         MU CENTRAL REGION\n6         MARINA EAST (MP)    MPSZ05    MARINE PARADE         MP CENTRAL REGION\n7                   SUDONG    WISZ03  WESTERN ISLANDS         WI    WEST REGION\n8                  SEMAKAU    WISZ02  WESTERN ISLANDS         WI    WEST REGION\n9           SOUTHERN GROUP    SISZ02 SOUTHERN ISLANDS         SI CENTRAL REGION\n10                 SENTOSA    SISZ01 SOUTHERN ISLANDS         SI CENTRAL REGION\n   REGION_C                       geometry\n1        CR MULTIPOLYGON (((33222.98 29...\n2        CR MULTIPOLYGON (((28481.45 30...\n3        CR MULTIPOLYGON (((28087.34 30...\n4        WR MULTIPOLYGON (((14557.7 304...\n5        CR MULTIPOLYGON (((29542.53 31...\n6        CR MULTIPOLYGON (((35279.55 30...\n7        WR MULTIPOLYGON (((15772.59 21...\n8        WR MULTIPOLYGON (((19843.41 21...\n9        CR MULTIPOLYGON (((30870.53 22...\n10       CR MULTIPOLYGON (((26879.04 26...\n\n\n\nsummary(mpsz)\n\n  SUBZONE_N          SUBZONE_C          PLN_AREA_N         PLN_AREA_C       \n Length:332         Length:332         Length:332         Length:332        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n   REGION_N           REGION_C                  geometry  \n Length:332         Length:332         MULTIPOLYGON :332  \n Class :character   Class :character   epsg:3414    :  0  \n Mode  :character   Mode  :character   +proj=tmer...:  0  \n\nunique(mpsz$PLN_AREA_N)\n\n [1] \"MARINA EAST\"             \"RIVER VALLEY\"           \n [3] \"SINGAPORE RIVER\"         \"WESTERN ISLANDS\"        \n [5] \"MUSEUM\"                  \"MARINE PARADE\"          \n [7] \"SOUTHERN ISLANDS\"        \"BUKIT MERAH\"            \n [9] \"DOWNTOWN CORE\"           \"STRAITS VIEW\"           \n[11] \"QUEENSTOWN\"              \"OUTRAM\"                 \n[13] \"MARINA SOUTH\"            \"ROCHOR\"                 \n[15] \"KALLANG\"                 \"TANGLIN\"                \n[17] \"NEWTON\"                  \"CLEMENTI\"               \n[19] \"BEDOK\"                   \"PIONEER\"                \n[21] \"JURONG EAST\"             \"ORCHARD\"                \n[23] \"GEYLANG\"                 \"BOON LAY\"               \n[25] \"BUKIT TIMAH\"             \"NOVENA\"                 \n[27] \"TOA PAYOH\"               \"TUAS\"                   \n[29] \"JURONG WEST\"             \"SERANGOON\"              \n[31] \"BISHAN\"                  \"TAMPINES\"               \n[33] \"BUKIT BATOK\"             \"HOUGANG\"                \n[35] \"CHANGI BAY\"              \"PAYA LEBAR\"             \n[37] \"ANG MO KIO\"              \"PASIR RIS\"              \n[39] \"BUKIT PANJANG\"           \"TENGAH\"                 \n[41] \"SELETAR\"                 \"SUNGEI KADUT\"           \n[43] \"YISHUN\"                  \"MANDAI\"                 \n[45] \"PUNGGOL\"                 \"CHOA CHU KANG\"          \n[47] \"SENGKANG\"                \"CHANGI\"                 \n[49] \"CENTRAL WATER CATCHMENT\" \"SEMBAWANG\"              \n[51] \"WESTERN WATER CATCHMENT\" \"WOODLANDS\"              \n[53] \"NORTH-EASTERN ISLANDS\"   \"SIMPANG\"                \n[55] \"LIM CHU KANG\"           \n\nunique(mpsz$REGION_N)\n\n[1] \"CENTRAL REGION\"    \"WEST REGION\"       \"EAST REGION\"      \n[4] \"NORTH-EAST REGION\" \"NORTH REGION\"     \n\n\nObservations: 332 subzones, 5 regions\n\nmpsz &lt;- write_rds(mpsz, \"data/rds/mpsz.rds\")\n\n\n\n\n\n\n\nbusstop_mpsz &lt;- st_intersection(busstop, mpsz) %&gt;%\n  select(BUS_STOP_N, SUBZONE_C) %&gt;%\n  st_drop_geometry()\n\nObservations: Number of bus stop dropped from 5161 (busstop) to 5156 (busstop_mpsz) due to the 5 busstops outside MPSZ boundary (ie in Malaysia).\n\n\nShow the code\ndatatable(busstop_mpsz, \n          options = list(pageLength = 5))\n\n\n\n\n\n\n\nSave the output in rds format for future use:\n\nwrite_rds(busstop_mpsz, \"data/rds/busstop_mpsz.rds\")  \n\n\n\n\n\nod_data &lt;- left_join(odbus6_9 , busstop_mpsz,\n            by = c(\"ORIGIN_PT_CODE\" = \"BUS_STOP_N\")) %&gt;%\n  rename(ORIGIN_BS = ORIGIN_PT_CODE,\n         ORIGIN_SZ = SUBZONE_C,\n         DESTIN_BS = DESTINATION_PT_CODE)\n\nBefore: 242,208 After: 242,944\n\n\n\nCheck for duplicates to prevent double counting:\n\nduplicate2 &lt;- od_data %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nduplicate2\n\n# A tibble: 1,186 × 4\n   ORIGIN_BS DESTIN_BS TRIPS ORIGIN_SZ\n   &lt;chr&gt;     &lt;fct&gt;     &lt;dbl&gt; &lt;chr&gt;    \n 1 11009     01341         1 QTSZ01   \n 2 11009     01341         1 QTSZ01   \n 3 11009     01411         4 QTSZ01   \n 4 11009     01411         4 QTSZ01   \n 5 11009     01421        17 QTSZ01   \n 6 11009     01421        17 QTSZ01   \n 7 11009     01511        19 QTSZ01   \n 8 11009     01511        19 QTSZ01   \n 9 11009     01521         2 QTSZ01   \n10 11009     01521         2 QTSZ01   \n# ℹ 1,176 more rows\n\n\nIf duplicated records are found, the code chunk below will be used to retain the unique records.\n\nod_data &lt;- unique(od_data)\n\nBefore: 242,944 After: 242,351\n\n\n\n\nod_data &lt;- left_join(od_data , busstop_mpsz,\n            by = c(\"DESTIN_BS\" = \"BUS_STOP_N\")) \n\nBefore: 242,351 After: 243,263\n\nduplicate3 &lt;- od_data %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nduplicate3\n\n# A tibble: 1,350 × 5\n   ORIGIN_BS DESTIN_BS TRIPS ORIGIN_SZ SUBZONE_C\n   &lt;chr&gt;     &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;    \n 1 01013     51071         2 RCSZ10    CCSZ01   \n 2 01013     51071         2 RCSZ10    CCSZ01   \n 3 01112     51071        66 RCSZ10    CCSZ01   \n 4 01112     51071        66 RCSZ10    CCSZ01   \n 5 01112     53041         4 RCSZ10    BSSZ01   \n 6 01112     53041         4 RCSZ10    BSSZ01   \n 7 01121     51071         8 RCSZ04    CCSZ01   \n 8 01121     51071         8 RCSZ04    CCSZ01   \n 9 01121     82221         1 RCSZ04    GLSZ05   \n10 01121     82221         1 RCSZ04    GLSZ05   \n# ℹ 1,340 more rows\n\n\nRetain unique records:\n\nod_data &lt;- unique(od_data)\n\nBefore: 243,263 After: 242,588\n\n\n\n\nod_data &lt;- od_data %&gt;%\n  # Rename column for better clarity\n  rename(DESTIN_SZ = SUBZONE_C) %&gt;%\n  # Remove NAs (where there are missing subzones due to time diff between busstop & ridership info)\n  drop_na() %&gt;% \n  # Group and summarise number of trips at each O/D level \n  group_by(ORIGIN_SZ, DESTIN_SZ) %&gt;%\n  summarise(MORNING_PEAK = sum(TRIPS))\n\nod_data\n\n# A tibble: 21,079 × 3\n# Groups:   ORIGIN_SZ [310]\n   ORIGIN_SZ DESTIN_SZ MORNING_PEAK\n   &lt;chr&gt;     &lt;chr&gt;            &lt;dbl&gt;\n 1 AMSZ01    AMSZ01            2694\n 2 AMSZ01    AMSZ02           10591\n 3 AMSZ01    AMSZ03           14980\n 4 AMSZ01    AMSZ04            3106\n 5 AMSZ01    AMSZ05            7734\n 6 AMSZ01    AMSZ06            2306\n 7 AMSZ01    AMSZ07            1824\n 8 AMSZ01    AMSZ08            2734\n 9 AMSZ01    AMSZ09            2300\n10 AMSZ01    AMSZ10             164\n# ℹ 21,069 more rows\n\n\nBefore: 242,588 After: 21,079\nSave the output in rds format for future use, and reimport into R environment:\n\nwrite_rds(od_data, \"data/rds/od_data.rds\")\nod_data &lt;- read_rds(\"data/rds/od_data.rds\")\n\n\n\n\n\n\n\n\nIn this section, we learn how to prepare a desired line by using stplanr package.\n\nRemove intra-zonal flowsCreate desired linesVisualise desired lines\n\n\nWe will not plot the intra-zonal flows, i.e. where the origin and destination are the same (eg origin = AMSZ01 and destination = AMSZ01)\nThe code chunk below will be used to remove intra-zonal flows.\n\nod_data1 &lt;- od_data[od_data$ORIGIN_SZ!=od_data$DESTIN_SZ,]\n\nBefore: 21,079 After: 20,787\n\n\n\n\n\n\nNote\n\n\n\nThe comma , after the condition is significant. In R’s data frame syntax, the format for subsetting is [rows, columns]. When you place a condition before the comma, it applies to rows. The comma itself then implies that you’re not applying any specific filter to the columns – meaning you want all columns.\n\n\n\n\n\nflowLine &lt;- od2line(flow = od_data1, \n                    zones = mpsz,\n                    zone_code = \"SUBZONE_C\")\n\nflowLine\n\nSimple feature collection with 20787 features and 3 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 5105.594 ymin: 25813.33 xmax: 49483.22 ymax: 49552.79\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n   ORIGIN_SZ DESTIN_SZ MORNING_PEAK                       geometry\n1     AMSZ01    AMSZ02        10591 LINESTRING (29501.77 39419....\n2     AMSZ01    AMSZ03        14980 LINESTRING (29501.77 39419....\n3     AMSZ01    AMSZ04         3106 LINESTRING (29501.77 39419....\n4     AMSZ01    AMSZ05         7734 LINESTRING (29501.77 39419....\n5     AMSZ01    AMSZ06         2306 LINESTRING (29501.77 39419....\n6     AMSZ01    AMSZ07         1824 LINESTRING (29501.77 39419....\n7     AMSZ01    AMSZ08         2734 LINESTRING (29501.77 39419....\n8     AMSZ01    AMSZ09         2300 LINESTRING (29501.77 39419....\n9     AMSZ01    AMSZ10          164 LINESTRING (29501.77 39419....\n10    AMSZ01    AMSZ11          932 LINESTRING (29501.77 39419....\n\n\n\n\n\n\n\n\nArguments of od2line\n\n\n\n\n\n\nflow: data frame representing origin-destination data. The first two columns of this data frame should correspond to the first column of the data in the zones. Thus in cents_sf(), the first column is geo_code. This corresponds to the first two columns of flow().\nzones: spatial object representing origins (and destinations if no separate destinations object is provided) of travel.\ndestinations: spatial object representing destinations of travel flows.\nzone_code: name of the variable in zones containing the ids of the zone. By default this is the first column names in the zones.\norigin_code: Name of the variable in flow containing the ids of the zone of origin. By default this is the first column name in the flow input dataset.\ndest_code: name of the variable in flow containing the ids of the zone of destination. By default this is the second column name in the flow input dataset or the first column name in the destinations if that is set.\nzone_code_d: Name of the variable in destinations containing the ids of the zone. By default this is the first column names in the destinations.\nsilent: TRUE by default, setting it to TRUE will show you the matching columns\n\n\n\n\n\n\n\n\n\n\n\n\nArguments of tm_lines\n\n\n\n\n\ntm_lines\ncol: color of the lines. Either a color value or a data variable name.\nlwd: line width. Either a numeric value or a data variable.\nalpha: transparency number between 0 (totally transparent) and 1 (not transparent).\nscale: line width multiplier number.\nn: preferred number of color scale classes. Only applicable when lwd is the name of a numeric variable.\n\n\n\nWhen the flow data are very messy and highly skewed like the one shown above, it is wiser to focus on selected flows.\nEg: flow &gt;= 5000:\n\ntmap_mode('view')\ntmap_options(check.and.fix = TRUE)\n\ntm_shape(mpsz) +\n  tm_polygons() +\nflowLine %&gt;%  \n  filter(MORNING_PEAK &gt;= 5000) %&gt;%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3.html#task",
    "href": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3.html#task",
    "title": "Hands-on Exercise 3: Processing and Visualising Flow Data",
    "section": "",
    "text": "In this hands-on exercise, we will learn how to build an OD matrix by using Passenger Volume by Origin Destination Bus Stops data set downloaded from LTA DataMall. By the end of this hands-on exercise, we will be able:\n\nto import and extract OD data for a selected time interval,\nto import and save geospatial data (i.e. bus stops and mpsz) into sf tibble data frame objects,\nto populate planning subzone code into bus stops sf tibble data frame,\nto construct desire lines geospatial data from the OD data, and\nto visualise passenger volume by origin and destination bus stops by using the desire lines data."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3.html#loading-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3.html#loading-r-packages",
    "title": "Hands-on Exercise 3: Processing and Visualising Flow Data",
    "section": "",
    "text": "pacman::p_load(tmap, sf, DT, stplanr,\n               performance,\n               ggpubr, tidyverse)\n\n\ntmap for creating thematic maps; useful for static and interactive maps.\nsf for importing, integrating, processing and transforming geospatial data.\nDT for interactive data tables\nstplanr for sustainable transport planning; provides functions and tools for analysis and visualisation of transport projects\nperformance for model performance measurement\nggpubr for visualisation\ntidyverse for importing, integrating, wrangling and visualising data."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3.html#preparing-flow-data",
    "href": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3.html#preparing-flow-data",
    "title": "Hands-on Exercise 3: Processing and Visualising Flow Data",
    "section": "",
    "text": "Importing OD dataExtracting study data\n\n\nNote: Using October 2023 data because Postman API couldn’t find Oct 2022 data, maybe too long ago :(\n\nodbus &lt;- read_csv(\"data/aspatial/origin_destination_bus_202310.csv\")\n\n\nglimpse(odbus)\n\nRows: 5,694,297\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-10\", \"2023-10\", \"2023-10\", \"2023-10\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKENDS/HOLIDAY\", \"WEEKDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       &lt;dbl&gt; 16, 16, 14, 14, 17, 17, 17, 7, 14, 14, 10, 20, 20,…\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;chr&gt; \"04168\", \"04168\", \"80119\", \"80119\", \"44069\", \"2028…\n$ DESTINATION_PT_CODE &lt;chr&gt; \"10051\", \"10051\", \"90079\", \"90079\", \"17229\", \"2014…\n$ TOTAL_TRIPS         &lt;dbl&gt; 3, 5, 3, 5, 4, 1, 24, 2, 1, 7, 3, 2, 5, 1, 1, 1, 1…\n\n\nodbus tibble data frame shows that the values in ORIGIN_PT_CODE and DESTINATON_PT_CODE are in numeric data type. Hence, the code chunk below is used to convert these data values into character data type.\n\nodbus$ORIGIN_PT_CODE &lt;- as.factor(odbus$ORIGIN_PT_CODE)\nodbus$DESTINATION_PT_CODE &lt;- as.factor(odbus$DESTINATION_PT_CODE) \n\nRecheck to confirm that the 2 variables have indeed been updated:\n\nglimpse(odbus)\n\nRows: 5,694,297\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-10\", \"2023-10\", \"2023-10\", \"2023-10\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKENDS/HOLIDAY\", \"WEEKDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       &lt;dbl&gt; 16, 16, 14, 14, 17, 17, 17, 7, 14, 14, 10, 20, 20,…\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;fct&gt; 04168, 04168, 80119, 80119, 44069, 20281, 20281, 1…\n$ DESTINATION_PT_CODE &lt;fct&gt; 10051, 10051, 90079, 90079, 17229, 20141, 20141, 1…\n$ TOTAL_TRIPS         &lt;dbl&gt; 3, 5, 3, 5, 4, 1, 24, 2, 1, 7, 3, 2, 5, 1, 1, 1, 1…\n\n\n\n\nFor our study, we will extract commuting flows on weekday and between 6 and 9 o’clock.\n\nodbus6_9 &lt;- odbus %&gt;%\n  filter(DAY_TYPE == \"WEEKDAY\") %&gt;%\n  filter(TIME_PER_HOUR &gt;= 6 &\n           TIME_PER_HOUR &lt;= 9) %&gt;%\n  group_by(ORIGIN_PT_CODE,\n           DESTINATION_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n\ndatatable allows for interactive tables:\n\n\nShow the code\ndatatable(\n  odbus6_9,\n  filter='top')\n\n\n\n\n\n\n\nWe will save the output in rds format for future use, and reimport the saved rds file into R environment:\n\nwrite_rds(odbus6_9, \"data/rds/odbus6_9.rds\")\nodbus6_9 &lt;- read_rds(\"data/rds/odbus6_9.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3.html#working-with-geospatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3.html#working-with-geospatial-data",
    "title": "Hands-on Exercise 3: Processing and Visualising Flow Data",
    "section": "",
    "text": "Two geospatial data will be used. They are:\n\nBusStop: This data provides the location of bus stop as at last quarter of 2022.\nMPSZ-2019: This data provides the sub-zone boundary of URA Master Plan 2019.\n\nBoth data sets are in ESRI shapefile format.\n\nImporting geospatial dataGeospatial data wrangling\n\n\n\n\nNote that there are repeated bus stop ids , however they have different bus stop roof ids and geometry values.\n\nbusstop &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"BusStop\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `BusStop' from data source \n  `C:\\kytjy\\ISSS624\\Hands-on_Ex\\Hands-on_Ex3\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\n\nduplicate &lt;- busstop %&gt;%\n  group_by(BUS_STOP_N) %&gt;%\n  filter(n() &gt; 1) %&gt;%\n  ungroup()\n\nduplicate\n\nSimple feature collection with 32 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 13488.02 ymin: 32594.17 xmax: 44144.57 ymax: 47934\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 32 × 4\n   BUS_STOP_N BUS_ROOF_N LOC_DESC                       geometry\n   &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;                       &lt;POINT [m]&gt;\n 1 58031      UNK        OPP CANBERRA DR      (27089.69 47570.9)\n 2 62251      B03        Bef Blk 471B        (35500.54 39943.41)\n 3 47201      UNK        &lt;NA&gt;                (22616.75 47793.68)\n 4 58031      UNK        OPP CANBERRA DR     (27111.07 47517.77)\n 5 22501      B02        Blk 662A             (13489.09 35536.4)\n 6 82221      B01        BLK 3A               (35323.6 33257.05)\n 7 68091      B01        AFT BAKER ST        (32164.11 42695.98)\n 8 43709      B06        BLK 644              (18963.42 36762.8)\n 9 97079      B14        OPP ST. JOHN'S CRES (44144.57 38980.25)\n10 82221      B01        Blk 3A              (35308.74 33335.17)\n# ℹ 22 more rows\n\n\nThere are duplicated bus stop numbers, but with different roof IDs and geometry. Some of them could be temporary bus stops within the month?\n\n\n\n\nst_read() function of sf package is used to import the shapefile into R as sf data frame.\nst_transform() function of sf package is used to transform the projection to crs 3414.\n\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"MPSZ-2019\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `MPSZ-2019' from data source \n  `C:\\kytjy\\ISSS624\\Hands-on_Ex\\Hands-on_Ex3\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\nmpsz\n\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n                 SUBZONE_N SUBZONE_C       PLN_AREA_N PLN_AREA_C       REGION_N\n1              MARINA EAST    MESZ01      MARINA EAST         ME CENTRAL REGION\n2         INSTITUTION HILL    RVSZ05     RIVER VALLEY         RV CENTRAL REGION\n3           ROBERTSON QUAY    SRSZ01  SINGAPORE RIVER         SR CENTRAL REGION\n4  JURONG ISLAND AND BUKOM    WISZ01  WESTERN ISLANDS         WI    WEST REGION\n5             FORT CANNING    MUSZ02           MUSEUM         MU CENTRAL REGION\n6         MARINA EAST (MP)    MPSZ05    MARINE PARADE         MP CENTRAL REGION\n7                   SUDONG    WISZ03  WESTERN ISLANDS         WI    WEST REGION\n8                  SEMAKAU    WISZ02  WESTERN ISLANDS         WI    WEST REGION\n9           SOUTHERN GROUP    SISZ02 SOUTHERN ISLANDS         SI CENTRAL REGION\n10                 SENTOSA    SISZ01 SOUTHERN ISLANDS         SI CENTRAL REGION\n   REGION_C                       geometry\n1        CR MULTIPOLYGON (((33222.98 29...\n2        CR MULTIPOLYGON (((28481.45 30...\n3        CR MULTIPOLYGON (((28087.34 30...\n4        WR MULTIPOLYGON (((14557.7 304...\n5        CR MULTIPOLYGON (((29542.53 31...\n6        CR MULTIPOLYGON (((35279.55 30...\n7        WR MULTIPOLYGON (((15772.59 21...\n8        WR MULTIPOLYGON (((19843.41 21...\n9        CR MULTIPOLYGON (((30870.53 22...\n10       CR MULTIPOLYGON (((26879.04 26...\n\n\n\nsummary(mpsz)\n\n  SUBZONE_N          SUBZONE_C          PLN_AREA_N         PLN_AREA_C       \n Length:332         Length:332         Length:332         Length:332        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n   REGION_N           REGION_C                  geometry  \n Length:332         Length:332         MULTIPOLYGON :332  \n Class :character   Class :character   epsg:3414    :  0  \n Mode  :character   Mode  :character   +proj=tmer...:  0  \n\nunique(mpsz$PLN_AREA_N)\n\n [1] \"MARINA EAST\"             \"RIVER VALLEY\"           \n [3] \"SINGAPORE RIVER\"         \"WESTERN ISLANDS\"        \n [5] \"MUSEUM\"                  \"MARINE PARADE\"          \n [7] \"SOUTHERN ISLANDS\"        \"BUKIT MERAH\"            \n [9] \"DOWNTOWN CORE\"           \"STRAITS VIEW\"           \n[11] \"QUEENSTOWN\"              \"OUTRAM\"                 \n[13] \"MARINA SOUTH\"            \"ROCHOR\"                 \n[15] \"KALLANG\"                 \"TANGLIN\"                \n[17] \"NEWTON\"                  \"CLEMENTI\"               \n[19] \"BEDOK\"                   \"PIONEER\"                \n[21] \"JURONG EAST\"             \"ORCHARD\"                \n[23] \"GEYLANG\"                 \"BOON LAY\"               \n[25] \"BUKIT TIMAH\"             \"NOVENA\"                 \n[27] \"TOA PAYOH\"               \"TUAS\"                   \n[29] \"JURONG WEST\"             \"SERANGOON\"              \n[31] \"BISHAN\"                  \"TAMPINES\"               \n[33] \"BUKIT BATOK\"             \"HOUGANG\"                \n[35] \"CHANGI BAY\"              \"PAYA LEBAR\"             \n[37] \"ANG MO KIO\"              \"PASIR RIS\"              \n[39] \"BUKIT PANJANG\"           \"TENGAH\"                 \n[41] \"SELETAR\"                 \"SUNGEI KADUT\"           \n[43] \"YISHUN\"                  \"MANDAI\"                 \n[45] \"PUNGGOL\"                 \"CHOA CHU KANG\"          \n[47] \"SENGKANG\"                \"CHANGI\"                 \n[49] \"CENTRAL WATER CATCHMENT\" \"SEMBAWANG\"              \n[51] \"WESTERN WATER CATCHMENT\" \"WOODLANDS\"              \n[53] \"NORTH-EASTERN ISLANDS\"   \"SIMPANG\"                \n[55] \"LIM CHU KANG\"           \n\nunique(mpsz$REGION_N)\n\n[1] \"CENTRAL REGION\"    \"WEST REGION\"       \"EAST REGION\"      \n[4] \"NORTH-EAST REGION\" \"NORTH REGION\"     \n\n\nObservations: 332 subzones, 5 regions\n\nmpsz &lt;- write_rds(mpsz, \"data/rds/mpsz.rds\")\n\n\n\n\n\n\n\nbusstop_mpsz &lt;- st_intersection(busstop, mpsz) %&gt;%\n  select(BUS_STOP_N, SUBZONE_C) %&gt;%\n  st_drop_geometry()\n\nObservations: Number of bus stop dropped from 5161 (busstop) to 5156 (busstop_mpsz) due to the 5 busstops outside MPSZ boundary (ie in Malaysia).\n\n\nShow the code\ndatatable(busstop_mpsz, \n          options = list(pageLength = 5))\n\n\n\n\n\n\n\nSave the output in rds format for future use:\n\nwrite_rds(busstop_mpsz, \"data/rds/busstop_mpsz.rds\")  \n\n\n\n\n\nod_data &lt;- left_join(odbus6_9 , busstop_mpsz,\n            by = c(\"ORIGIN_PT_CODE\" = \"BUS_STOP_N\")) %&gt;%\n  rename(ORIGIN_BS = ORIGIN_PT_CODE,\n         ORIGIN_SZ = SUBZONE_C,\n         DESTIN_BS = DESTINATION_PT_CODE)\n\nBefore: 242,208 After: 242,944\n\n\n\nCheck for duplicates to prevent double counting:\n\nduplicate2 &lt;- od_data %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nduplicate2\n\n# A tibble: 1,186 × 4\n   ORIGIN_BS DESTIN_BS TRIPS ORIGIN_SZ\n   &lt;chr&gt;     &lt;fct&gt;     &lt;dbl&gt; &lt;chr&gt;    \n 1 11009     01341         1 QTSZ01   \n 2 11009     01341         1 QTSZ01   \n 3 11009     01411         4 QTSZ01   \n 4 11009     01411         4 QTSZ01   \n 5 11009     01421        17 QTSZ01   \n 6 11009     01421        17 QTSZ01   \n 7 11009     01511        19 QTSZ01   \n 8 11009     01511        19 QTSZ01   \n 9 11009     01521         2 QTSZ01   \n10 11009     01521         2 QTSZ01   \n# ℹ 1,176 more rows\n\n\nIf duplicated records are found, the code chunk below will be used to retain the unique records.\n\nod_data &lt;- unique(od_data)\n\nBefore: 242,944 After: 242,351\n\n\n\n\nod_data &lt;- left_join(od_data , busstop_mpsz,\n            by = c(\"DESTIN_BS\" = \"BUS_STOP_N\")) \n\nBefore: 242,351 After: 243,263\n\nduplicate3 &lt;- od_data %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nduplicate3\n\n# A tibble: 1,350 × 5\n   ORIGIN_BS DESTIN_BS TRIPS ORIGIN_SZ SUBZONE_C\n   &lt;chr&gt;     &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;    \n 1 01013     51071         2 RCSZ10    CCSZ01   \n 2 01013     51071         2 RCSZ10    CCSZ01   \n 3 01112     51071        66 RCSZ10    CCSZ01   \n 4 01112     51071        66 RCSZ10    CCSZ01   \n 5 01112     53041         4 RCSZ10    BSSZ01   \n 6 01112     53041         4 RCSZ10    BSSZ01   \n 7 01121     51071         8 RCSZ04    CCSZ01   \n 8 01121     51071         8 RCSZ04    CCSZ01   \n 9 01121     82221         1 RCSZ04    GLSZ05   \n10 01121     82221         1 RCSZ04    GLSZ05   \n# ℹ 1,340 more rows\n\n\nRetain unique records:\n\nod_data &lt;- unique(od_data)\n\nBefore: 243,263 After: 242,588\n\n\n\n\nod_data &lt;- od_data %&gt;%\n  # Rename column for better clarity\n  rename(DESTIN_SZ = SUBZONE_C) %&gt;%\n  # Remove NAs (where there are missing subzones due to time diff between busstop & ridership info)\n  drop_na() %&gt;% \n  # Group and summarise number of trips at each O/D level \n  group_by(ORIGIN_SZ, DESTIN_SZ) %&gt;%\n  summarise(MORNING_PEAK = sum(TRIPS))\n\nod_data\n\n# A tibble: 21,079 × 3\n# Groups:   ORIGIN_SZ [310]\n   ORIGIN_SZ DESTIN_SZ MORNING_PEAK\n   &lt;chr&gt;     &lt;chr&gt;            &lt;dbl&gt;\n 1 AMSZ01    AMSZ01            2694\n 2 AMSZ01    AMSZ02           10591\n 3 AMSZ01    AMSZ03           14980\n 4 AMSZ01    AMSZ04            3106\n 5 AMSZ01    AMSZ05            7734\n 6 AMSZ01    AMSZ06            2306\n 7 AMSZ01    AMSZ07            1824\n 8 AMSZ01    AMSZ08            2734\n 9 AMSZ01    AMSZ09            2300\n10 AMSZ01    AMSZ10             164\n# ℹ 21,069 more rows\n\n\nBefore: 242,588 After: 21,079\nSave the output in rds format for future use, and reimport into R environment:\n\nwrite_rds(od_data, \"data/rds/od_data.rds\")\nod_data &lt;- read_rds(\"data/rds/od_data.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3.html#visualising-spatial-interaction",
    "href": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3.html#visualising-spatial-interaction",
    "title": "Hands-on Exercise 3: Processing and Visualising Flow Data",
    "section": "",
    "text": "In this section, we learn how to prepare a desired line by using stplanr package.\n\nRemove intra-zonal flowsCreate desired linesVisualise desired lines\n\n\nWe will not plot the intra-zonal flows, i.e. where the origin and destination are the same (eg origin = AMSZ01 and destination = AMSZ01)\nThe code chunk below will be used to remove intra-zonal flows.\n\nod_data1 &lt;- od_data[od_data$ORIGIN_SZ!=od_data$DESTIN_SZ,]\n\nBefore: 21,079 After: 20,787\n\n\n\n\n\n\nNote\n\n\n\nThe comma , after the condition is significant. In R’s data frame syntax, the format for subsetting is [rows, columns]. When you place a condition before the comma, it applies to rows. The comma itself then implies that you’re not applying any specific filter to the columns – meaning you want all columns.\n\n\n\n\n\nflowLine &lt;- od2line(flow = od_data1, \n                    zones = mpsz,\n                    zone_code = \"SUBZONE_C\")\n\nflowLine\n\nSimple feature collection with 20787 features and 3 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 5105.594 ymin: 25813.33 xmax: 49483.22 ymax: 49552.79\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n   ORIGIN_SZ DESTIN_SZ MORNING_PEAK                       geometry\n1     AMSZ01    AMSZ02        10591 LINESTRING (29501.77 39419....\n2     AMSZ01    AMSZ03        14980 LINESTRING (29501.77 39419....\n3     AMSZ01    AMSZ04         3106 LINESTRING (29501.77 39419....\n4     AMSZ01    AMSZ05         7734 LINESTRING (29501.77 39419....\n5     AMSZ01    AMSZ06         2306 LINESTRING (29501.77 39419....\n6     AMSZ01    AMSZ07         1824 LINESTRING (29501.77 39419....\n7     AMSZ01    AMSZ08         2734 LINESTRING (29501.77 39419....\n8     AMSZ01    AMSZ09         2300 LINESTRING (29501.77 39419....\n9     AMSZ01    AMSZ10          164 LINESTRING (29501.77 39419....\n10    AMSZ01    AMSZ11          932 LINESTRING (29501.77 39419....\n\n\n\n\n\n\n\n\nArguments of od2line\n\n\n\n\n\n\nflow: data frame representing origin-destination data. The first two columns of this data frame should correspond to the first column of the data in the zones. Thus in cents_sf(), the first column is geo_code. This corresponds to the first two columns of flow().\nzones: spatial object representing origins (and destinations if no separate destinations object is provided) of travel.\ndestinations: spatial object representing destinations of travel flows.\nzone_code: name of the variable in zones containing the ids of the zone. By default this is the first column names in the zones.\norigin_code: Name of the variable in flow containing the ids of the zone of origin. By default this is the first column name in the flow input dataset.\ndest_code: name of the variable in flow containing the ids of the zone of destination. By default this is the second column name in the flow input dataset or the first column name in the destinations if that is set.\nzone_code_d: Name of the variable in destinations containing the ids of the zone. By default this is the first column names in the destinations.\nsilent: TRUE by default, setting it to TRUE will show you the matching columns\n\n\n\n\n\n\n\n\n\n\n\n\nArguments of tm_lines\n\n\n\n\n\ntm_lines\ncol: color of the lines. Either a color value or a data variable name.\nlwd: line width. Either a numeric value or a data variable.\nalpha: transparency number between 0 (totally transparent) and 1 (not transparent).\nscale: line width multiplier number.\nn: preferred number of color scale classes. Only applicable when lwd is the name of a numeric variable.\n\n\n\nWhen the flow data are very messy and highly skewed like the one shown above, it is wiser to focus on selected flows.\nEg: flow &gt;= 5000:\n\ntmap_mode('view')\ntmap_options(check.and.fix = TRUE)\n\ntm_shape(mpsz) +\n  tm_polygons() +\nflowLine %&gt;%  \n  filter(MORNING_PEAK &gt;= 5000) %&gt;%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.3)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome!",
    "section": "",
    "text": "In this webpage, I am going to share with you my learning journey of geospatial analytics. Join me in my adventure :)\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/THE1.html",
    "href": "Take-Home_Ex/Take-Home_Ex1/THE1.html",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "",
    "text": "As urban infrastructures, including public transportation systems like buses, taxis, mass rapid transit, public utilities, and roads, become increasingly digitised, the data generated becomes a valuable resource for tracking the movements of people and vehicles over space and time. This transformation has been facilitated by pervasive computing technologies such as Global Positioning System (GPS) and Radio Frequency Identification (RFID) tags on vehicles. An example of this is the collection of data on bus routes and ridership, amassed from the use of smart cards and GPS devices available on public buses.\nThe data collected from these sources is likely to contain valuable patterns that offer insights into various aspects of human movement and behavior within a city. Analyzing and comparing these patterns can provide a deeper understanding of urban mobility. Such insights can be instrumental in improving urban management and can also serve as valuable information for both public and private sector stakeholders involved in urban transportation services. This information can aid them in making informed decisions and gaining a competitive edge in their respective domains.\n\n\n\n\nAimTasks\n\n\nThe objective of this study is to utilize appropriate Local Indicators of Spatial Association (LISA) techniques to reveal spatial mobility patterns among public bus passengers in Singapore.\n\n\nThis will include the following tasks:\n\nGeovisualisation and Analysis:\n\nCompute the passenger trips generated by origin at the hexagon level\nDisplay the geographical distribution of the passenger trips\nExplore spatial patterns revealed by the geovisualisation\n\n\n\n\n\nPeak hour period\nBus tap on time\n\n\n\n\nWeekday morning peak\n6am to 9am\n\n\nWeekday afternoon peak\n5pm to 8pm\n\n\nWeekend/holiday morning peak\n11am to 2pm\n\n\nWeekend/holiday evening peak\n4pm to 7pm\n\n\n\n\nLocal Indicators of Spatial Association (LISA) Analysis\n\nCompute LISA of the passenger trips generate by origin\nDisplay and draw statistical conclusions of LISA maps"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/THE1.html#background",
    "href": "Take-Home_Ex/Take-Home_Ex1/THE1.html#background",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "",
    "text": "As urban infrastructures, including public transportation systems like buses, taxis, mass rapid transit, public utilities, and roads, become increasingly digitised, the data generated becomes a valuable resource for tracking the movements of people and vehicles over space and time. This transformation has been facilitated by pervasive computing technologies such as Global Positioning System (GPS) and Radio Frequency Identification (RFID) tags on vehicles. An example of this is the collection of data on bus routes and ridership, amassed from the use of smart cards and GPS devices available on public buses.\nThe data collected from these sources is likely to contain valuable patterns that offer insights into various aspects of human movement and behavior within a city. Analyzing and comparing these patterns can provide a deeper understanding of urban mobility. Such insights can be instrumental in improving urban management and can also serve as valuable information for both public and private sector stakeholders involved in urban transportation services. This information can aid them in making informed decisions and gaining a competitive edge in their respective domains."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/THE1.html#objectives",
    "href": "Take-Home_Ex/Take-Home_Ex1/THE1.html#objectives",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "",
    "text": "AimTasks\n\n\nThe objective of this study is to utilize appropriate Local Indicators of Spatial Association (LISA) techniques to reveal spatial mobility patterns among public bus passengers in Singapore.\n\n\nThis will include the following tasks:\n\nGeovisualisation and Analysis:\n\nCompute the passenger trips generated by origin at the hexagon level\nDisplay the geographical distribution of the passenger trips\nExplore spatial patterns revealed by the geovisualisation\n\n\n\n\n\nPeak hour period\nBus tap on time\n\n\n\n\nWeekday morning peak\n6am to 9am\n\n\nWeekday afternoon peak\n5pm to 8pm\n\n\nWeekend/holiday morning peak\n11am to 2pm\n\n\nWeekend/holiday evening peak\n4pm to 7pm\n\n\n\n\nLocal Indicators of Spatial Association (LISA) Analysis\n\nCompute LISA of the passenger trips generate by origin\nDisplay and draw statistical conclusions of LISA maps"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/THE1.html#the-data",
    "href": "Take-Home_Ex/Take-Home_Ex1/THE1.html#the-data",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "3.1 The Data",
    "text": "3.1 The Data\nThe following data are used for this study:\n\nAspatial:\n\nPassenger Volume by Origin Destination Bus Stops for August 2023, downloaded from LTA DataMall using API.\n\nGeospatial\n\nBus Stop Location from LTA DataMall. It provides information about all the bus stops currently being serviced by buses, including the bus stop code (identifier) and location coordinates.\nhexagon, a hexagon layer of 250m to replace the relative coarse and irregular Master Plan 2019 Planning Sub-zone GIS data set of URA."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/THE1.html#import-preparation",
    "href": "Take-Home_Ex/Take-Home_Ex1/THE1.html#import-preparation",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "3.2 Import & Preparation",
    "text": "3.2 Import & Preparation\n\n3.2.1 Aspatial\n\n3.2.1.1 Import into R\nWe will be importing the Passenger Volume by Origin Destination Bus Stops dataset for August 2023, downloaded from LTA DataMall by using read_csv() or readr package.\n\nodbus08 &lt;- read_csv(\"data/aspatial/origin_destination_bus_202308.csv\")\n\n\n\n3.2.1.2 Data Exploration\n(a) Attributes\nglimpse() of the dplyr package allows us to see all columns and their data type in the data frame.\n\nglimpse(odbus08)\n\nRows: 5,709,512\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-08\", \"2023-08\", \"2023-08\", \"2023-08\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKDAY\", \"WEEKENDS/HOLIDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       &lt;dbl&gt; 16, 16, 14, 14, 17, 17, 17, 17, 7, 17, 14, 10, 10,…\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;chr&gt; \"04168\", \"04168\", \"80119\", \"80119\", \"44069\", \"4406…\n$ DESTINATION_PT_CODE &lt;chr&gt; \"10051\", \"10051\", \"90079\", \"90079\", \"17229\", \"1722…\n$ TOTAL_TRIPS         &lt;dbl&gt; 7, 2, 3, 10, 5, 4, 3, 22, 3, 3, 7, 1, 3, 1, 3, 1, …\n\n\nInsights:\n\nThere are 7 variables in the odbus08 tibble data, they are:\n\nYEAR_MONTH: Month in which data is collected\nDAY_TYPE: Weekdays or weekends/holidays\nTIME_PER_HOUR: Hour which the passenger trip is based on, in intervals from 0 to 23 hours\nPT_TYPE: Type of public transport, i.e. bus\nORIGIN_PT_CODE: Origin bus stop ID\nDESTINATION_PT_CODE: Destination bus stop ID\nTOTAL_TRIPS: Number of trips\n\nWe also note that values in ORIGIN_PT_CODE and DESTINATON_PT_CODE are in numeric data type. These should be in factor data type for further processing and georeferencing.\n\n(b) Unique Bus Stops\nn_distinct() of the dplyr package allows us to count the unique originating bus stops in the data set.\n\nn_distinct(odbus08$ORIGIN_PT_CODE)\n\n[1] 5067\n\n\nThe results reveal that there are 5067 distinct origin bus stops based on August 2023 passenger data.\n\n\n3.2.1.3 Data Wrangling\n(a) Convert Data Type\nas.factor() can be used to convert the variables ORIGIN_PT_CODE and DESTINATON_PT_CODE from numeric to categorical data type. We use glimpse() again to check the results.\n\nodbus08$ORIGIN_PT_CODE &lt;- as.factor(odbus08$ORIGIN_PT_CODE)\nodbus08$DESTINATION_PT_CODE &lt;- as.factor(odbus08$DESTINATION_PT_CODE)\n\nglimpse(odbus08)\n\nRows: 5,709,512\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-08\", \"2023-08\", \"2023-08\", \"2023-08\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKDAY\", \"WEEKENDS/HOLIDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       &lt;dbl&gt; 16, 16, 14, 14, 17, 17, 17, 17, 7, 17, 14, 10, 10,…\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;fct&gt; 04168, 04168, 80119, 80119, 44069, 44069, 20281, 2…\n$ DESTINATION_PT_CODE &lt;fct&gt; 10051, 10051, 90079, 90079, 17229, 17229, 20141, 2…\n$ TOTAL_TRIPS         &lt;dbl&gt; 7, 2, 3, 10, 5, 4, 3, 22, 3, 3, 7, 1, 3, 1, 3, 1, …\n\n\nNote that both of them are in factor data type now.\n(b) Duplicates Check\nBefore moving on to the next step, it is a good practice for us to check for duplicated records to prevent double counting of passenger trips.\nThe code chunk below identifies all rows in the odbus08 dataframe that have an exact duplicate (i.e., another row with the same values in all columns) using group_by_all().\n\nduplicate &lt;- odbus08 %&gt;% \n  group_by_all() %&gt;% \n  filter(n()&gt;1) %&gt;% \n  ungroup()\n  \nduplicate\n\n# A tibble: 0 × 7\n# ℹ 7 variables: YEAR_MONTH &lt;chr&gt;, DAY_TYPE &lt;chr&gt;, TIME_PER_HOUR &lt;dbl&gt;,\n#   PT_TYPE &lt;chr&gt;, ORIGIN_PT_CODE &lt;fct&gt;, DESTINATION_PT_CODE &lt;fct&gt;,\n#   TOTAL_TRIPS &lt;dbl&gt;\n\n\nResults confirm that there are no duplicated records found.\n(c) Extracting the Study Data\nIn our study, we would like to know patterns for 4 peak hour periods. Therefore, we can create a new variable period using the ifelse() that states whether an observation occurred during peak period using the code chunk below.\n\npeak &lt;- odbus08 %&gt;%\n  # Weekday morning peak\n  mutate(period= ifelse(DAY_TYPE==\"WEEKDAY\" & (TIME_PER_HOUR &gt;= 6 & TIME_PER_HOUR &lt;= 9), \"WDM\", \n                        # Weekday afternoon peak\n                        ifelse(DAY_TYPE==\"WEEKDAY\" & (TIME_PER_HOUR &gt;= 17 & TIME_PER_HOUR &lt;= 20), \"WDA\", \n                               # Weekend/holiday morning peak\n                               ifelse(DAY_TYPE==\"WEEKENDS/HOLIDAY\" & (TIME_PER_HOUR &gt;= 11 & TIME_PER_HOUR &lt;= 14), \"WEM\",\n                                      # Weekend/holiday evening peak\n                                      ifelse(DAY_TYPE==\"WEEKENDS/HOLIDAY\" & (TIME_PER_HOUR &gt;= 16 & TIME_PER_HOUR &lt;= 19), \"WEE\",\n                                             # Return off-peak if neither of the peak hour periods\n                                             \"Off-peak\")))))\n\nWe can then filter for peak-period data using the newly created period column and aggregate the total trips for each origin bus stop during peak period.\n\npeakperiods &lt;- peak %&gt;% \n  # filter helps to keep records that occurred during period periods\n  filter(period !=\"Off-peak\") %&gt;% \n  # aggregate the total passenger trips for each origin bus stop\n  group_by(period, ORIGIN_PT_CODE) %&gt;% \n  summarise(TRIPS=sum(TOTAL_TRIPS))\n\nLet’s visualise the proportions of passenger volumes for each peak period.\n\n\nShow the code\nfreq&lt;- ggplot(data=peakperiods, \n       aes(x=period,y=TRIPS))+\n  geom_bar(stat=\"identity\") +\n  theme(legend.position=\"none\")+\n  labs(title = \"Frequency of Trip for each Peak Period for August 2023\",\n      x = \"Peak Period\",\n      y = \"Frequency\")\n\nfreq + scale_y_continuous(labels=label_comma()) + scale_x_discrete(labels=c(\"WDA\"=\"Weekday Afternoon\", \"WDM\"= \"Weekday Morning\", \"WEE\"= \"Weekend Evening\", \"WEM\"= \"Weekend Morning\"))\n\n\n\n\n\nWe can see that passenger volume on weekdays are much higher than over the weekends/holidays for the month of August.\nTranspose each peak period period as a columns using pivot_wider() of tidyr package will allow us to create further variables at a bus stop level. We replace NA values with 0 to reflect when there are no traffic for certain periods.\n\npeakperiods_wide &lt;- pivot_wider(peakperiods, \n                                names_from = \"period\", \n                                values_from = \"TRIPS\")\n\npeakperiods_wide[\"WDA\"][is.na(peakperiods_wide[\"WDA\"])] &lt;- 0\npeakperiods_wide[\"WDM\"][is.na(peakperiods_wide[\"WDM\"])] &lt;- 0\npeakperiods_wide[\"WEE\"][is.na(peakperiods_wide[\"WEE\"])] &lt;- 0\npeakperiods_wide[\"WEM\"][is.na(peakperiods_wide[\"WEM\"])] &lt;- 0\n\nEach peak period has its own column, as seen using the glimpse() function of dplyr.\n\nglimpse(peakperiods_wide)\n\nRows: 5,067\nColumns: 5\n$ ORIGIN_PT_CODE &lt;fct&gt; 01012, 01013, 01019, 01029, 01039, 01059, 01109, 01112,…\n$ WDA            &lt;dbl&gt; 8448, 7328, 3608, 9317, 12937, 2133, 322, 45010, 27233,…\n$ WDM            &lt;dbl&gt; 1973, 952, 1789, 2561, 2938, 1651, 161, 8492, 9015, 424…\n$ WEE            &lt;dbl&gt; 3208, 2796, 1623, 4244, 7403, 1190, 88, 21706, 11927, 6…\n$ WEM            &lt;dbl&gt; 2273, 1697, 1511, 3272, 5424, 1062, 89, 14964, 8278, 61…\n\n\n\n\n\n3.2.2 Geospatial\n\n3.2.2.1 Import into R\n(a) Bus Stop Shapefile\nIn this section, we import BusStop shapefile into RStudio using st_read() function of sf package. This data provides the locations of all bus stops as at Q2 of 2023. crs = 3414 ensures coordinate reference system (CRS) is 3414, which is the EPSG code for the SVY21 projection used in Singapore.\n\nbusstop &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"BusStop\") %&gt;% \n  st_transform(crs = 3414)\n\nReading layer `BusStop' from data source \n  `C:\\kytjy\\ISSS624\\Take-Home_Ex\\Take-Home_Ex1\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\nThe imported shape file is simple features object of sf. From the output, we can see that there are 5161 points with 3 fields, and confirm that the datum SVY21 is correct.\nRecall that there are 5067 origin bus stops from the peakperiods_wide table, compared to the 5161 bus stops from LTA’s BusStop shape file. This could be due to timing difference – LTA’s BusStop shapefile is as of July 2023, while peakperiod is based on Aug 2023.\nqtm() of tmap allows us to quickly map the points to visualise the results.\n\nqtm(busstop)\n\n\n\n\nNote that there are 5 bus stops located outside Singapore, they are bus stops 46239, 46609, 47701, 46211, and 46219.\n(b) Hexagon Layer\nA hexagonal grid is used to replace the relative coarse and irregular Master Plan 2019 Planning Sub-zone GIS data set of URA. Hexagons have a number of advantages over these other shapes:\n\n\n\n\n\n\nWhy hexagons?\n\n\n\n\n\n\nThe distance between the centroid of a hexagon to all neighboring centroids is the same in all directions.\nThe lack of acute angles in a regular hexagon means that no areas of the shape are outliers in any direction.\nAll neighboring hexagons have the same spatial relationship with the central hexagon, making spatial querying and joining a more straightforward process.\nUnlike square-based grids, the geometry of hexagons are well-structured to represent curves of geographic features which are rarely perpendicular in shape, such as rivers and roads.\nThe “softer” shape of a hexagon compared to a square means it performs better at representing gradual spatial changes.\n\n\n\n\n\nStep 1: Create Hexagonal GridsStep 2: Convert to sf and count gridsStep 3: Remove grids with no bus stopsStep 4: Check & Visualise\n\n\nWe first create a hexagonal grid layer of 250m (refers to the perpendicular distance between the centre of the hexagon and its edges) with st_make_grid, and st_sf to convert the grid into an sf object with the codes below.\n\n\n\n\n\n\nst_make_grid Arguments\n\n\n\n\n\nst_make_grid function is used to create a grid over a spatial object. It takes 4 arguments, they are:\n\nx: sf object; the input spatial data\ncellsize: for hexagonal cells the distance between opposite edges in the unit of the crs the spatial data is using. In this case, we take cellsize to be 250m * 2 = 500m\n\n\n\nwhat: character; one of: \"polygons\", \"corners\", or \"centers\"\nsquare: indicates whether you are a square grid (TRUE) or hexagon grid (FALSE)\n\n\n\n\n\narea_hexagon_grid = st_make_grid(busstop, 500, what = \"polygons\", square = FALSE)\n\n\n\nNext, st_sf converts the grid created to sf object while lengths() of Base R is used to calculate the number of grids created.\n\n# Converts grid to sf\nhexagon_grid_sf = st_sf(area_hexagon_grid) %&gt;%\n  # Assign unique ID to each grid\n  mutate(grid_id = 1:length(lengths(area_hexagon_grid)))\n\n\n\nWe count the number of bus stops in each grid and keep grids with bus stops using the code chunks below.\nst_intersects is used to identify the bus stops falling inside each hexagon, while lengths returns the number of bus stops inside each hexagon.\n\n# Create a column containing the count of bus stops in each grid\nhexagon_grid_sf$busstops = lengths(st_intersects(hexagon_grid_sf, busstop))\n\n# Remove if no bus stop in side that grid, ie only keep hexagons with bus stops\nhexagon_w_busstops = filter(hexagon_grid_sf, busstops &gt; 0)\n\n\n\nLet’s confirm that all bus stops have been accounted for in our hexagon layer by totalling the number of bus stop in all the hexagons. We use sum() to perform this.\n\nsum(hexagon_w_busstops$busstops)\n\n[1] 5161\n\n\nThis is in line with the 5161 points of the busstop shapefile.\nLastly, using tm_shape of tmap, we can quickly visualise the results of the hexagon grids we have created.\n\n\nShow the code\ntmap_mode (\"plot\")\ntm_shape(hexagon_w_busstops)+\n  tm_fill(\n    col = \"busstops\",\n    palette = \"Blues\",\n    style = \"cont\",\n    title = \"Number of Bus Stops\",\n    id = \"grid_id\",\n    showNA = FALSE,\n    alpha = 0.6,\n    popup.format = list(\n      grid_id = list(format = \"f\", digits = 0)\n    )\n  )+\n  tm_borders(col = \"grey40\", lwd = 0.7)\n\n\n\n\n\n\n\n\n\n\n3.2.2.2 Geospatial Data Wrangling\n(a) Combining Busstop and hexagon layer\nCode chunk below populates the grid ID (i.e. grid_id) of hexagon_w_busstops sf data frame into busstop sf data frame using the following functions:\n\nst_intersection() is used to perform point and polygon overly and the output will be in point sf object.\nselect() of dplyr package is then use to retain preferred variables from the data frames.\nst_stop_geometry() removes the geometry data to manipulate it like a regular dataframe using tidyr and dplyr functions\n\n\nbs_wgrids &lt;- st_intersection(busstop, hexagon_w_busstops) %&gt;% \n  select(BUS_STOP_N,BUS_ROOF_N,LOC_DESC, grid_id) %&gt;% \n  st_drop_geometry\n\nBefore we proceed, let’s perform a duplicates check on bs_wgrids.\n\nduplicate2 &lt;- bs_wgrids %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nduplicate2\n\n# A tibble: 8 × 4\n  BUS_STOP_N BUS_ROOF_N LOC_DESC             grid_id\n  &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;                  &lt;int&gt;\n1 43709      B06        BLK 644                 1904\n2 43709      B06        BLK 644                 1904\n3 58031      UNK        OPP CANBERRA DR         2939\n4 58031      UNK        OPP CANBERRA DR         2939\n5 51071      B21        MACRITCHIE RESERVOIR    3081\n6 51071      B21        MACRITCHIE RESERVOIR    3081\n7 97079      B14        OPP ST. JOHN'S CRES     5037\n8 97079      B14        OPP ST. JOHN'S CRES     5037\n\n\nResults displayed 4 seemingly genuine duplicated records, with same bus stop number, roof, and location description. We remove these to prevent double-counting.\nThe code chunk below helps retain unique records.\n\nbs_wgrids &lt;- unique(bs_wgrids)\n\n(b) Populate PeakPeriods with Grid Details\nWe can now append the grid ID from bs_wgrids data frame onto peakperiods_wide data frame using left_join. Recall we previously identified 5 bus stops outside Singapore, filter() allows us to exclude the 5 outside Singapore. LOC_DESC = first(LOC_DESC) geta the first location description for each grid_id group, this allows us to have a rough reference of the name of the bus stop when visualising later. sum() totals up the passenger trips at the hexagonal level. Lastly, we retain only the grids with passenger trip records and bus stop information.\n\norigin_grid &lt;- left_join(peakperiods_wide, bs_wgrids,\n            by = c(\"ORIGIN_PT_CODE\" = \"BUS_STOP_N\")) %&gt;% \n  rename(ORIGIN_BS = ORIGIN_PT_CODE) %&gt;% \n  filter(!ORIGIN_BS %in% c(46239, 46609, 47701, 46211, 46219)) %&gt;%  # retains SG bus stops \n  group_by(grid_id) %&gt;% \n  summarise(\n    LOC_DESC = first(LOC_DESC),\n    WDA = sum(WDA),\n    WDM = sum(WDM),\n    WEM = sum(WEM),\n    WEE = sum(WEE)\n  ) %&gt;% \n  filter(!is.na(grid_id))\n\n# View results\nglimpse(origin_grid)\n\nRows: 1,503\nColumns: 6\n$ grid_id  &lt;int&gt; 34, 65, 99, 127, 129, 130, 131, 159, 160, 161, 163, 190, 191,…\n$ LOC_DESC &lt;chr&gt; \"AFT TUAS STH BLVD\", \"BEF TUAS STH AVE 14\", \"YONG NAM\", \"OPP …\n$ WDA      &lt;dbl&gt; 417, 110, 249, 1810, 2985, 220, 325, 318, 196, 2633, 173, 555…\n$ WDM      &lt;dbl&gt; 62, 50, 44, 155, 1201, 73, 82, 59, 123, 773, 407, 183, 168, 2…\n$ WEM      &lt;dbl&gt; 5, 24, 27, 148, 512, 75, 43, 23, 39, 556, 47, 76, 58, 1377, 3…\n$ WEE      &lt;dbl&gt; 65, 26, 54, 303, 637, 35, 49, 43, 141, 981, 162, 124, 79, 138…\n\n\n\n\n3.2.2.3 Variable Transformation\nLet’s visualise the distribution of passenger trips using a histogram with the ggplot2 package.\n\n\nShow the code\n# Weekday Morning\n# Extract column\ndistWDM &lt;- origin_grid$WDM\n# Calculate mean \ndistWDM_mean &lt;- mean(distWDM)\n\nplot_distWDM &lt;- ggplot(\n    data = data.frame(distWDM),\n    aes(x = distWDM)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"black\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distWDM_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 55000, \n    y = 1200,\n    label = paste(\"Mean =\", round(distWDM_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekday Morning Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  ) +\n  scale_x_continuous(labels = label_number(), n.breaks=8)\n\n# Weekday Afternoon\n# Extract column\ndistWDA &lt;- origin_grid$WDA\n# Calculate mean \ndistWDA_mean &lt;- mean(distWDA)\n\nplot_distWDA &lt;- ggplot(\n    data = data.frame(distWDA),\n    aes(x = distWDA)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"black\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distWDA_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 140000, \n    y = 1200,\n    label = paste(\"Mean =\", round(distWDA_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekday Afternoon Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  ) +\n  scale_x_continuous(labels = label_number(), n.breaks=8)\n\n# Weekend Morning\n# Extract column\ndistWEM &lt;- origin_grid$WEM\n# Calculate mean \ndistWEM_mean &lt;- mean(distWEM)\n\nplot_distWEM &lt;- ggplot(\n    data = data.frame(distWEM),\n    aes(x = distWEM)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"black\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distWEM_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 33000, \n    y = 1200,\n    label = paste(\"Mean =\", round(distWEM_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekdend/Holiday Morning Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  ) +\n  scale_x_continuous(labels = label_number(), n.breaks=8)\n\n# Weekend Evening\n# Extract column\ndistWEE &lt;- origin_grid$WEE\n# Calculate mean \ndistWEE_mean &lt;- mean(distWEE)\n\nplot_distWEE &lt;- ggplot(\n    data = data.frame(distWEE),\n    aes(x = distWEE)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"black\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distWEE_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 39000, \n    y = 1200, \n    label = paste(\"Mean =\", round(distWEE_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekend/Holiday Evening Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  ) +\n  scale_x_continuous(labels = label_number(), n.breaks=8)\n\n(plot_distWDM | plot_distWDA)/\n(plot_distWEM | plot_distWEE)\n\n\n\n\n\nThe distribution of passenger trips for the 4 peak periods at a hexagon level appear to be highly skewed to the right. Rescaling our data using log transformation can greatly reduce the skewness and make patterns more evident for analysis.\nifelse() in the code chunk below checks for 0 values and performs log-transformation if the value is non-zero. This is crucial because log of 0 is undefined.\n\norigin_grid_wider &lt;- origin_grid %&gt;% \n  mutate(logWDM = ifelse(WDM == 0, 0, log(WDM)),\n         logWDA = ifelse(WDA == 0, 0, log(WDA)),\n         logWEM = ifelse(WEM == 0, 0, log(WEM)),\n         logWEE = ifelse(WEE == 0, 0, log(WEE)))\n\nLet’s visualise the distribution of the 4 peak periods again.\n\n\nShow the code\n# Weekday Morning\n# Extract column\ndistlogWDM &lt;- origin_grid_wider$logWDM\n# Calculate mean \ndistlogWDM_mean &lt;- mean(distlogWDM)\n\nplot_distlogWDM &lt;- ggplot(\n    data = data.frame(distlogWDM),\n    aes(x = distlogWDM)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"#34414E\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distlogWDM_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 12, \n    y = 300,\n    label = paste(\"Mean =\", round(distlogWDM_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekday Morning Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  ) \n\n# Weekday Afternoon\n# Extract column\ndistlogWDA &lt;- origin_grid_wider$logWDA\n# Calculate mean \ndistlogWDA_mean &lt;- mean(distlogWDA)\n\nplot_distlogWDA &lt;- ggplot(\n    data = data.frame(distlogWDA),\n    aes(x = distlogWDA)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"#34414E\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distlogWDA_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 12, \n    y = 300,\n    label = paste(\"Mean =\", round(distlogWDA_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekday Afternoon Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  )\n\n# Weekend Morning\n# Extract column\ndistlogWEM &lt;- origin_grid_wider$logWEM\n# Calculate mean \ndistlogWEM_mean &lt;- mean(distlogWEM)\n\nplot_distlogWEM &lt;- ggplot(\n    data = data.frame(distlogWEM),\n    aes(x = distlogWEM)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"#34414E\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distlogWEM_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 10, \n    y = 300,\n    label = paste(\"Mean =\", round(distlogWEM_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekdend/Holiday Morning Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  ) \n\n# Weekend Evening\n# Extract column\ndistlogWEE &lt;- origin_grid_wider$logWEE\n# Calculate mean \ndistlogWEE_mean &lt;- mean(distlogWEE)\n\nplot_distlogWEE &lt;- ggplot(\n    data = data.frame(distlogWEE),\n    aes(x = distlogWEE)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"#34414E\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distlogWEE_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 10, \n    y = 300, \n    label = paste(\"Mean =\", round(distlogWEE_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekend/Holiday Evening Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  ) \n\n(plot_distlogWDM | plot_distlogWDA)/\n(plot_distlogWEM | plot_distlogWEE)\n\n\n\n\n\n\n\n3.2.2.4 Retrieve Geometry\nNow, we can finally add in the geometry for each hexagon grid using an inner_join() between hexagon_w_busstops (geospatial data) and origin_grid_wider (aspatial data). This ensures that only common grids in the two data sets are retained.\n\norigin_gridwgeom &lt;- inner_join(hexagon_w_busstops,\n                               origin_grid_wider, \n                           by = \"grid_id\")\n\n\n\n\n\n\n\nImportant\n\n\n\nIn order to retain the geospatial properties, the left data frame must the sf data.frame (i.e. hexagon_w_busstop)."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/THE1.html#aspatial",
    "href": "Take-Home_Ex/Take-Home_Ex1/THE1.html#aspatial",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "3.2.1 Aspatial",
    "text": "3.2.1 Aspatial\n\nImport into RData ExplorationData Wrangling\n\n\nWe will be importing the Passenger Volume by Origin Destination Bus Stops dataset for August 2023, downloaded from LTA DataMall by using read_csv() or readr package.\n\nodbus08 &lt;- read_csv(\"data/aspatial/origin_destination_bus_202308.csv\")\n\n\n\n\n(a) Attributes\nglimpse() of the dplyr package allows us to see all columns and their data type in the data frame.\n\nglimpse(odbus08)\n\nRows: 5,709,512\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-08\", \"2023-08\", \"2023-08\", \"2023-08\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKDAY\", \"WEEKENDS/HOLIDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       &lt;dbl&gt; 16, 16, 14, 14, 17, 17, 17, 17, 7, 17, 14, 10, 10,…\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;chr&gt; \"04168\", \"04168\", \"80119\", \"80119\", \"44069\", \"4406…\n$ DESTINATION_PT_CODE &lt;chr&gt; \"10051\", \"10051\", \"90079\", \"90079\", \"17229\", \"1722…\n$ TOTAL_TRIPS         &lt;dbl&gt; 7, 2, 3, 10, 5, 4, 3, 22, 3, 3, 7, 1, 3, 1, 3, 1, …\n\n\nInsights:\n\nThere are 7 variables in the odbus08 tibble data, they are:\n\nYEAR_MONTH: Month in which data is collected\nDAY_TYPE: Weekdays or weekends/holidays\nTIME_PER_HOUR: Hour which the passenger trip is based on, in intervals from 0 to 23 hours\nPT_TYPE: Type of public transport, i.e. bus\nORIGIN_PT_CODE: Origin bus stop ID\nDESTINATION_PT_CODE: Destination bus stop ID\nTOTAL_TRIPS: Number of trips\n\nWe also note that values in ORIGIN_PT_CODE and DESTINATON_PT_CODE are in numeric data type. These should be in factor data type for further processing and georeferencing.\n\n\n\n(b) Unique Bus Stops\nn_distinct() of the dplyr package allows us to count the unique originating bus stops in the data set.\n\nn_distinct(odbus08$ORIGIN_PT_CODE)\n\n[1] 5067\n\n\nThe results reveal that there are 5067 distinct origin bus stops.\n\n\n\n\n(a) Convert Data Type\nas.factor() can be used to convert the variables ORIGIN_PT_CODE and DESTINATON_PT_CODE from numeric to categorical data type. We use glimpse() again to check the results.\n\nodbus08$ORIGIN_PT_CODE &lt;- as.factor(odbus08$ORIGIN_PT_CODE)\nodbus08$DESTINATION_PT_CODE &lt;- as.factor(odbus08$DESTINATION_PT_CODE)\n\nglimpse(odbus08)\n\nRows: 5,709,512\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-08\", \"2023-08\", \"2023-08\", \"2023-08\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKDAY\", \"WEEKENDS/HOLIDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       &lt;dbl&gt; 16, 16, 14, 14, 17, 17, 17, 17, 7, 17, 14, 10, 10,…\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;fct&gt; 04168, 04168, 80119, 80119, 44069, 44069, 20281, 2…\n$ DESTINATION_PT_CODE &lt;fct&gt; 10051, 10051, 90079, 90079, 17229, 17229, 20141, 2…\n$ TOTAL_TRIPS         &lt;dbl&gt; 7, 2, 3, 10, 5, 4, 3, 22, 3, 3, 7, 1, 3, 1, 3, 1, …\n\n\nNote that both of them are in factor data type now.\n\n\n(b) Duplicates Check\nBefore moving on to the next step, it is a good practice for us to check for duplicated records to prevent double counting of passenger trips.\n\nduplicate &lt;- odbus08 %&gt;% \n  group_by_all() %&gt;% \n  filter(n()&gt;1) %&gt;% \n  ungroup()\n  \nduplicate\n\n# A tibble: 0 × 7\n# ℹ 7 variables: YEAR_MONTH &lt;chr&gt;, DAY_TYPE &lt;chr&gt;, TIME_PER_HOUR &lt;dbl&gt;,\n#   PT_TYPE &lt;chr&gt;, ORIGIN_PT_CODE &lt;fct&gt;, DESTINATION_PT_CODE &lt;fct&gt;,\n#   TOTAL_TRIPS &lt;dbl&gt;\n\n\nResults confirm that there are no duplicated records found.\n\n\n(c) Extracting the Study Data\nIn our study, we would like to know patterns for 4 peak hour periods. Therefore, we can create a new variable period using the ifelse() that states whether an observation occurred during peak period using the code chunk below.\n\npeak &lt;- odbus08 %&gt;%\n  # Weekday morning peak\n  mutate(period= ifelse(DAY_TYPE==\"WEEKDAY\" & (TIME_PER_HOUR &gt;= 6 & TIME_PER_HOUR &lt;= 9), \"WDM\", \n                        # Weekday afternoon peak\n                        ifelse(DAY_TYPE==\"WEEKDAY\" & (TIME_PER_HOUR &gt;= 17 & TIME_PER_HOUR &lt;= 20), \"WDA\", \n                               # Weekend/holiday morning peak\n                               ifelse(DAY_TYPE==\"WEEKENDS/HOLIDAY\" & (TIME_PER_HOUR &gt;= 11 & TIME_PER_HOUR &lt;= 14), \"WEM\",\n                                      # Weekend/holiday evening peak\n                                      ifelse(DAY_TYPE==\"WEEKENDS/HOLIDAY\" & (TIME_PER_HOUR &gt;= 16 & TIME_PER_HOUR &lt;= 19), \"WEE\",\n                                             # Return off-peak if neither of the peak hour periods\n                                             \"Off-peak\")))))\n\nWe can then filter for peak-period data using the newly created period column and aggregate the total trips for each origin bus stop during peak period.\n\npeakperiods &lt;- peak %&gt;% \n  # filter helps to keep records that occurred during period periods\n  filter(period !=\"Off-peak\") %&gt;% \n  # aggregate the total passenger trips for each origin bus stop\n  group_by(period, ORIGIN_PT_CODE) %&gt;% \n  summarise(TRIPS=sum(TOTAL_TRIPS))\n\nLet’s visualise the proportions of passenger volumes for each peak period.\n\n\nShow the code\nfreq&lt;- ggplot(data=peakperiods, \n       aes(x=period,y=TRIPS))+\n  geom_bar(stat=\"identity\") +\n  theme(legend.position=\"none\")+\n  labs(title = \"Frequency of Trip for each Peak Period\",\n      x = \"Peak Period\",\n      y = \"Frequency\")\n\nfreq + scale_y_continuous(labels=label_comma()) + scale_x_discrete(labels=c(\"WDA\"=\"Weekday Afternoon\", \"WDM\"= \"Weekday Morning\", \"WEE\"= \"Weekend Evening\", \"WEM\"= \"Weekend Morning\"))\n\n\n\n\n\nWe can see that passenger volume on weekdays are much higher than over the weekends/holidays.\nTranspose each peak period period as a columns using pivot_wider() of tidyr package will allow us to create further variables at a bus stop level. We replace NA values with 0 to reflect when there are no traffic for certain periods.\n\npeakperiods_wide &lt;- pivot_wider(peakperiods, \n                                names_from = \"period\", \n                                values_from = \"TRIPS\")\n\npeakperiods_wide[\"WDA\"][is.na(peakperiods_wide[\"WDA\"])] &lt;- 0\npeakperiods_wide[\"WDM\"][is.na(peakperiods_wide[\"WDM\"])] &lt;- 0\npeakperiods_wide[\"WEE\"][is.na(peakperiods_wide[\"WEE\"])] &lt;- 0\npeakperiods_wide[\"WEM\"][is.na(peakperiods_wide[\"WEM\"])] &lt;- 0\n\nglimpse(peakperiods_wide)\n\nRows: 5,067\nColumns: 5\n$ ORIGIN_PT_CODE &lt;fct&gt; 01012, 01013, 01019, 01029, 01039, 01059, 01109, 01112,…\n$ WDA            &lt;dbl&gt; 8448, 7328, 3608, 9317, 12937, 2133, 322, 45010, 27233,…\n$ WDM            &lt;dbl&gt; 1973, 952, 1789, 2561, 2938, 1651, 161, 8492, 9015, 424…\n$ WEE            &lt;dbl&gt; 3208, 2796, 1623, 4244, 7403, 1190, 88, 21706, 11927, 6…\n$ WEM            &lt;dbl&gt; 2273, 1697, 1511, 3272, 5424, 1062, 89, 14964, 8278, 61…\n\n\n\n\n\n\n\n3.2.2 Geospatial\n\nImport into RGeospatial Data Wrangling3.2.3 Variable Transformation3.2.4 Retrieve Geometry\n\n\n\n(a) Bus Stop Shapefile\nIn this section, we import BusStop shapefile into RStudio using st_read() function of sf package. This data provides the locations of all bus stops as at Q2 of 2023. crs = 3414 ensures coordinate reference system (CRS) is 3414, which is the EPSG code for the SVY21 projection used in Singapore.\n\nbusstop &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"BusStop\") %&gt;% \n  st_transform(crs = 3414)\n\nReading layer `BusStop' from data source \n  `C:\\kytjy\\ISSS624\\Take-Home_Ex\\Take-Home_Ex1\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\nThe imported shape file is simple features object of sf. From the output, we can see that there are 5161 points with 3 fields, and confirm that the datum SVY21 is correct.\nRecall that there are 5067 origin bus stops from the peakperiods_wider table, compared to the 5161 bus stops from LTA’s BusStop shape file. This could be due to timing difference – LTA’s BusStop shapefile is as of July 2023, while peakperiod is based on Aug 2023.\n\nmapview::mapview(busstop)\n\n\n\n\n\n\nNote that there are 5 bus stops located outside Singapore, they are bus stops 46239, 46609, 47701, 46211, and 46219.\n\n\n(b) Hexagon Layer\nA hexagonal grid is used to replace the relative coarse and irregular Master Plan 2019 Planning Sub-zone GIS data set of URA. Hexagons have a number of advantages over these other shapes:\n\n\n\n\n\n\nWhy hexagons?\n\n\n\n\n\n\nThe distance between the centroid of a hexagon to all neighboring centroids is the same in all directions.\nThe lack of acute angles in a regular hexagon means that no areas of the shape are outliers in any direction.\nAll neighboring hexagons have the same spatial relationship with the central hexagon, making spatial querying and joining a more straightforward process.\nUnlike square-based grids, the geometry of hexagons are well-structured to represent curves of geographic features which are rarely perpendicular in shape, such as rivers and roads.\nThe “softer” shape of a hexagon compared to a square means it performs better at representing gradual spatial changes.\n\n\n\n\n\nStep 1: Create Hexagonal GridsStep 2: Convert to sf and count gridsStep 3: Remove grids with no bus stopsStep 4: Check & Visualise\n\n\nWe first create a hexagonal grid layer of 250m (refers to the perpendicular distance between the centre of the hexagon and its edges) with st_make_grid, and st_sf to convert the grid into an sf object with the codes below.\n\n\n\n\n\n\nst_make_grid Arguments\n\n\n\n\n\nst_make_grid function is used to create a grid over a spatial object. It takes 4 arguments, they are:\n\nx: sf object; the input spatial data\ncellsize: for hexagonal cells the distance between opposite edges in the unit of the crs the spatial data is using. In this case, we take cellsize to be 250m * 2 = 500m\n\n\n\nwhat: character; one of: \"polygons\", \"corners\", or \"centers\"\nsquare: indicates whether you are a square grid (TRUE) or hexagon grid (FALSE)\n\n\n\n\n\narea_hexagon_grid = st_make_grid(busstop, 500, what = \"polygons\", square = FALSE)\n\n\n\nNext, st_sf converts the grid created to sf object while lengths() of Base R is used to calculate the number of grids created.\n\n# Converts grid to sf\nhexagon_grid_sf = st_sf(area_hexagon_grid) %&gt;%\n  # Assign unique ID to each grid\n  mutate(grid_id = 1:length(lengths(area_hexagon_grid)))\n\n\n\nWe count the number of bus stops in each grid and keep grids with bus stops using the code chunks below.\n\n# Create a column containing the count of bus stops in each grid\nhexagon_grid_sf$busstops = lengths(st_intersects(hexagon_grid_sf, busstop))\n\n# Remove if no bus stop in side that grid, ie only keep hexagons with bus stops\nhexagon_w_busstops = filter(hexagon_grid_sf, busstops &gt; 0)\n\n\n\nLet’s confirm that all bus stops have been accounted for in our hexagon layer.\n\nsum(hexagon_w_busstops$busstops)\n\n[1] 5161\n\n\nThis is in line with the 5161 points of the busstop shapefile.\nLastly, using tm_shape of tmap, we can quickly visualise the results of the hexagon grids we have created.\n\n\nShow the code\ntmap_mode (\"plot\")\ntm_shape(hexagon_w_busstops)+\n  tm_fill(\n    col = \"busstops\",\n    palette = \"Blues\",\n    style = \"cont\",\n    title = \"Number of Bus Stops\",\n    id = \"grid_id\",\n    showNA = FALSE,\n    alpha = 0.6,\n    popup.format = list(\n      grid_id = list(format = \"f\", digits = 0)\n    )\n  )+\n  tm_borders(col = \"grey40\", lwd = 0.7)\n\n\n\n\n\n\n\n\n\n\n\n\n(a) Combining Busstop and hexagon layer\nCode chunk below populates the grid ID (i.e. grid_id) of hexagon_w_busstops sf data frame into busstop sf data frame.\n\nbs_wgrids &lt;- st_intersection(busstop, hexagon_w_busstops) %&gt;% \n  select(BUS_STOP_N,BUS_ROOF_N,LOC_DESC, grid_id) %&gt;% \n  st_drop_geometry\n\n\n\n\n\n\n\nNote\n\n\n\n\nst_intersection() is used to perform point and polygon overly and the output will be in point sf object.\nselect() of dplyr package is then use to retain only BUS_STOP_N and SUBZONE_C in the busstop_mpsz sf data frame.\nst_stop_geometry() removes the geometry data to manipulate it like a regular dataframe using tidyr and dplyr functions\n\n\n\nBefore we proceed, let’s perform a duplicates check on bs_wgrids.\n\nduplicate2 &lt;- bs_wgrids %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nduplicate2\n\n# A tibble: 8 × 4\n  BUS_STOP_N BUS_ROOF_N LOC_DESC             grid_id\n  &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;                  &lt;int&gt;\n1 43709      B06        BLK 644                 1904\n2 43709      B06        BLK 644                 1904\n3 58031      UNK        OPP CANBERRA DR         2939\n4 58031      UNK        OPP CANBERRA DR         2939\n5 51071      B21        MACRITCHIE RESERVOIR    3081\n6 51071      B21        MACRITCHIE RESERVOIR    3081\n7 97079      B14        OPP ST. JOHN'S CRES     5037\n8 97079      B14        OPP ST. JOHN'S CRES     5037\n\n\nResults displayed 4 seemingly genuine duplicated records, with same bus stop number, roof, and location description. We remove these to prevent double-counting.\nThe code chunk below helps retain unique records.\n\nbs_wgrids &lt;- unique(bs_wgrids)\n\n\n\n(b) Populate PeakPeriods with Grid Details\nWe can now append the grid ID from bs_wgrids data frame onto peakperiods_wide data frame using left_join. Recall we previously identified 5 bus stops outside Singapore, filter() allows us to exclude the 5 outside Singapore. LOC_DESC = first(LOC_DESC) geta the first location description for each grid_id group, this allows us to have a rough reference of the name of the bus stop when visualising later.\n\norigin_grid &lt;- left_join(peakperiods_wide, bs_wgrids,\n            by = c(\"ORIGIN_PT_CODE\" = \"BUS_STOP_N\")) %&gt;% \n  rename(ORIGIN_BS = ORIGIN_PT_CODE) %&gt;% \n  filter(!ORIGIN_BS %in% c(46239, 46609, 47701, 46211, 46219)) %&gt;%  # retains SG bus stops \n  group_by(grid_id) %&gt;% \n  summarise(\n    LOC_DESC = first(LOC_DESC),\n    WDA = sum(WDA),\n    WDM = sum(WDM),\n    WEM = sum(WEM),\n    WEE = sum(WEE)\n  ) %&gt;% \n  filter(!is.na(grid_id))\n\nglimpse(origin_grid)\n\nRows: 1,503\nColumns: 6\n$ grid_id  &lt;int&gt; 34, 65, 99, 127, 129, 130, 131, 159, 160, 161, 163, 190, 191,…\n$ LOC_DESC &lt;chr&gt; \"AFT TUAS STH BLVD\", \"BEF TUAS STH AVE 14\", \"YONG NAM\", \"OPP …\n$ WDA      &lt;dbl&gt; 417, 110, 249, 1810, 2985, 220, 325, 318, 196, 2633, 173, 555…\n$ WDM      &lt;dbl&gt; 62, 50, 44, 155, 1201, 73, 82, 59, 123, 773, 407, 183, 168, 2…\n$ WEM      &lt;dbl&gt; 5, 24, 27, 148, 512, 75, 43, 23, 39, 556, 47, 76, 58, 1377, 3…\n$ WEE      &lt;dbl&gt; 65, 26, 54, 303, 637, 35, 49, 43, 141, 981, 162, 124, 79, 138…\n\n\n\n\n\n\n\nShow the code\n# Weekday Morning\n# Extract column\ndistWDM &lt;- origin_grid$WDM\n# Calculate mean \ndistWDM_mean &lt;- mean(distWDM)\n\nplot_distWDM &lt;- ggplot(\n    data = data.frame(distWDM),\n    aes(x = distWDM)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"black\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distWDM_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 55000, \n    y = 1200,\n    label = paste(\"Mean =\", round(distWDM_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekday Morning Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  ) +\n  scale_x_continuous(labels = label_number(), n.breaks=8)\n\n# Weekday Afternoon\n# Extract column\ndistWDA &lt;- origin_grid$WDA\n# Calculate mean \ndistWDA_mean &lt;- mean(distWDA)\n\nplot_distWDA &lt;- ggplot(\n    data = data.frame(distWDA),\n    aes(x = distWDA)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"black\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distWDA_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 140000, \n    y = 1200,\n    label = paste(\"Mean =\", round(distWDA_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekday Afternoon Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  ) +\n  scale_x_continuous(labels = label_number(), n.breaks=8)\n\n# Weekend Morning\n# Extract column\ndistWEM &lt;- origin_grid$WEM\n# Calculate mean \ndistWEM_mean &lt;- mean(distWEM)\n\nplot_distWEM &lt;- ggplot(\n    data = data.frame(distWEM),\n    aes(x = distWEM)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"black\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distWEM_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 33000, \n    y = 1200,\n    label = paste(\"Mean =\", round(distWEM_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekdend/Holiday Morning Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  ) +\n  scale_x_continuous(labels = label_number(), n.breaks=8)\n\n# Weekend Evening\n# Extract column\ndistWEE &lt;- origin_grid$WEE\n# Calculate mean \ndistWEE_mean &lt;- mean(distWEE)\n\nplot_distWEE &lt;- ggplot(\n    data = data.frame(distWEE),\n    aes(x = distWEE)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"black\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distWEE_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 39000, \n    y = 1200, \n    label = paste(\"Mean =\", round(distWEE_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekend/Holiday Evening Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  ) +\n  scale_x_continuous(labels = label_number(), n.breaks=8)\n\n(plot_distWDM | plot_distWDA)/\n(plot_distWEM | plot_distWEE)\n\n\n\n\n\nThe distribution of passenger trips for the 4 peak periods at a hexagon level appear to be highly skewed to the right. Rescaling our data using log transformation can greatly reduce the skewness.\n\norigin_grid_wider &lt;- origin_grid %&gt;% \n  mutate(logWDM = ifelse(WDM == 0, 0, log(WDM)),\n         logWDA = ifelse(WDA == 0, 0, log(WDA)),\n         logWEM = ifelse(WEM == 0, 0, log(WEM)),\n         logWEE = ifelse(WEE == 0, 0, log(WEE)))\n\nLet’s visualise the distribution of the 4 peak periods again.\n\n\nShow the code\n# Weekday Morning\n# Extract column\ndistlogWDM &lt;- origin_grid_wider$logWDM\n# Calculate mean \ndistlogWDM_mean &lt;- mean(distlogWDM)\n\nplot_distlogWDM &lt;- ggplot(\n    data = data.frame(distlogWDM),\n    aes(x = distlogWDM)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"#34414E\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distlogWDM_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 12, \n    y = 300,\n    label = paste(\"Mean =\", round(distlogWDM_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekday Morning Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  ) \n\n# Weekday Afternoon\n# Extract column\ndistlogWDA &lt;- origin_grid_wider$logWDA\n# Calculate mean \ndistlogWDA_mean &lt;- mean(distlogWDA)\n\nplot_distlogWDA &lt;- ggplot(\n    data = data.frame(distlogWDA),\n    aes(x = distlogWDA)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"#34414E\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distlogWDA_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 12, \n    y = 300,\n    label = paste(\"Mean =\", round(distlogWDA_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekday Afternoon Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  )\n\n# Weekend Morning\n# Extract column\ndistlogWEM &lt;- origin_grid_wider$logWEM\n# Calculate mean \ndistlogWEM_mean &lt;- mean(distlogWEM)\n\nplot_distlogWEM &lt;- ggplot(\n    data = data.frame(distlogWEM),\n    aes(x = distlogWEM)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"#34414E\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distlogWEM_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 10, \n    y = 300,\n    label = paste(\"Mean =\", round(distlogWEM_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekdend/Holiday Morning Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  ) \n\n# Weekend Evening\n# Extract column\ndistlogWEE &lt;- origin_grid_wider$logWEE\n# Calculate mean \ndistlogWEE_mean &lt;- mean(distlogWEE)\n\nplot_distlogWEE &lt;- ggplot(\n    data = data.frame(distlogWEE),\n    aes(x = distlogWEE)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"#34414E\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distlogWEE_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 10, \n    y = 300, \n    label = paste(\"Mean =\", round(distlogWEE_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekend/Holiday Evening Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  ) \n\n(plot_distlogWDM | plot_distlogWDA)/\n(plot_distlogWEM | plot_distlogWEE)\n\n\n\n\n\n\n\n\norigin_gridwgeom &lt;- inner_join(hexagon_w_busstops,\n                               origin_grid_wider, \n                           by = \"grid_id\")\n\n\n\n\n\n\n\nImportant\n\n\n\nIn order to retain the geospatial properties, the left data frame must the sf data.frame (i.e. hexagon_w_busstop)."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/THE1.html#import-into-r",
    "href": "Take-Home_Ex/Take-Home_Ex1/THE1.html#import-into-r",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "Import into R",
    "text": "Import into R\nWe will be importing the Passenger Volume by Origin Destination Bus Stops dataset from August to October 2023, downloaded from LTA DataMall by using read_csv() or readr package.\n\nodbus08 &lt;- read_csv(\"data/aspatial/origin_destination_bus_202308.csv\")\n#odbus09 &lt;- read_csv(\"data/aspatial/origin_destination_bus_202309.csv\")\n#odbus10 &lt;- read_csv(\"data/aspatial/origin_destination_bus_202310.csv\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/THE1.html#data-exploration",
    "href": "Take-Home_Ex/Take-Home_Ex1/THE1.html#data-exploration",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "Data Exploration",
    "text": "Data Exploration\n\n(a) Attributes\nglimpse() of the dplyr package allows us to see all columns and their data type in the data frame.\n\nglimpse(odbus08)\n\nRows: 5,709,512\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-08\", \"2023-08\", \"2023-08\", \"2023-08\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKDAY\", \"WEEKENDS/HOLIDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       &lt;dbl&gt; 16, 16, 14, 14, 17, 17, 17, 17, 7, 17, 14, 10, 10,…\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;chr&gt; \"04168\", \"04168\", \"80119\", \"80119\", \"44069\", \"4406…\n$ DESTINATION_PT_CODE &lt;chr&gt; \"10051\", \"10051\", \"90079\", \"90079\", \"17229\", \"1722…\n$ TOTAL_TRIPS         &lt;dbl&gt; 7, 2, 3, 10, 5, 4, 3, 22, 3, 3, 7, 1, 3, 1, 3, 1, …\n\n#glimpse(odbus09)\n#glimpse(odbus10)\n\nInsights:\n\nThere are 7 variables in the odbus08 tibble data, they are:\n\nYEAR_MONTH: Month in which data is collected\nDAY_TYPE: Weekdays or weekends/holidays\nTIME_PER_HOUR: Hour which the passenger trip is based on, in intervals from 0 to 23 hours\nPT_TYPE: Type of public transport, i.e. bus\nORIGIN_PT_CODE: Origin bus stop ID\nDESTINATION_PT_CODE: Destination bus stop ID\nTOTAL_TRIPS: Number of trips\n\nWe also note that values in ORIGIN_PT_CODE and DESTINATON_PT_CODE are in numeric data type.\n\n\n\n(b) Unique Bus Stops\nn_distinct() of the dplyr package allows us to count the unique bus stops in the data set.\n\nn_distinct(odbus08$ORIGIN_PT_CODE)\n\n[1] 5067\n\n\nThe results reveal that there are 5067 distinct origin bus stops."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/THE1.html#data-wrangling",
    "href": "Take-Home_Ex/Take-Home_Ex1/THE1.html#data-wrangling",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "Data Wrangling",
    "text": "Data Wrangling\n\n(a) Convert Data Type\nas.factor() can be used to convert the variables ORIGIN_PT_CODE and DESTINATON_PT_CODE from numeric to categorical data type. We use glimpse() again to check the results.\n\nodbus08$ORIGIN_PT_CODE &lt;- as.factor(odbus08$ORIGIN_PT_CODE)\nodbus08$DESTINATION_PT_CODE &lt;- as.factor(odbus08$DESTINATION_PT_CODE)\n\nglimpse(odbus08)\n\nRows: 5,709,512\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-08\", \"2023-08\", \"2023-08\", \"2023-08\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKDAY\", \"WEEKENDS/HOLIDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       &lt;dbl&gt; 16, 16, 14, 14, 17, 17, 17, 17, 7, 17, 14, 10, 10,…\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;fct&gt; 04168, 04168, 80119, 80119, 44069, 44069, 20281, 2…\n$ DESTINATION_PT_CODE &lt;fct&gt; 10051, 10051, 90079, 90079, 17229, 17229, 20141, 2…\n$ TOTAL_TRIPS         &lt;dbl&gt; 7, 2, 3, 10, 5, 4, 3, 22, 3, 3, 7, 1, 3, 1, 3, 1, …\n\n\nNote that both of them are in factor data type now.\n\n\n(b) Duplicates Check\nBefore moving on to the next step, it is a good practice for us to check for duplicated records to prevent double counting of passenger trips.\n\nduplicate &lt;- odbus08 %&gt;% \n  group_by_all() %&gt;% \n  filter(n()&gt;1) %&gt;% \n  ungroup()\n  \nduplicate\n\n# A tibble: 0 × 7\n# ℹ 7 variables: YEAR_MONTH &lt;chr&gt;, DAY_TYPE &lt;chr&gt;, TIME_PER_HOUR &lt;dbl&gt;,\n#   PT_TYPE &lt;chr&gt;, ORIGIN_PT_CODE &lt;fct&gt;, DESTINATION_PT_CODE &lt;fct&gt;,\n#   TOTAL_TRIPS &lt;dbl&gt;\n\n\nResults confirm that there are no duplicated records found.\n\n\n(c) Extracting the Study Data\nIn our study, we would like to know patterns for 4 peak hour periods. Therefore, we can create a new variable period using the ifelse() that states whether an observation occurred during peak period using the code chunk below.\n\npeak &lt;- odbus08 %&gt;%\n  # Weekday morning peak\n  mutate(period= ifelse(DAY_TYPE==\"WEEKDAY\" & (TIME_PER_HOUR &gt;= 6 & TIME_PER_HOUR &lt;= 9), \"WDM\", \n                        # Weekday afternoon peak\n                        ifelse(DAY_TYPE==\"WEEKDAY\" & (TIME_PER_HOUR &gt;= 17 & TIME_PER_HOUR &lt;= 20), \"WDA\", \n                               # Weekend/holiday morning peak\n                               ifelse(DAY_TYPE==\"WEEKENDS/HOLIDAY\" & (TIME_PER_HOUR &gt;= 11 & TIME_PER_HOUR &lt;= 14), \"WEM\",\n                                      # Weekend/holiday evening peak\n                                      ifelse(DAY_TYPE==\"WEEKENDS/HOLIDAY\" & (TIME_PER_HOUR &gt;= 16 & TIME_PER_HOUR &lt;= 19), \"WEE\",\n                                             # Return off-peak if neither of the peak hour periods\n                                             \"Off-peak\")))))\n\nWe can then filter for peak-period data using the newly created period column and aggregate the total trips for each origin bus stop during peak period.\n\npeakperiods &lt;- peak %&gt;% \n  # filter helps to keep records that occurred during period periods\n  filter(period !=\"Off-peak\") %&gt;% \n  # aggregate the total passenger trips for each origin bus stop\n  group_by(period, ORIGIN_PT_CODE) %&gt;% \n  summarise(TRIPS=sum(TOTAL_TRIPS))\n\nLet’s visualise the proportions of passenger volumes for each peak period.\n\n\nShow the code\nfreq&lt;- ggplot(data=peakperiods, \n       aes(x=period,y=TRIPS))+\n  geom_bar(stat=\"identity\") +\n  theme(legend.position=\"none\")+\n  labs(title = \"Frequency of Trip for each Peak Period\",\n      x = \"Peak Period\",\n      y = \"Frequency\")\n\nfreq + scale_y_continuous(labels=label_comma())\n\n\n\n\n\nWe can see that passenger volume on weekdays are much higher than over the weekends/holidays.\nTranspose each peak period period as a columns using pivot_wider() of tidyr package will allow us to create further variables at a bus stop level. We replace NA values with 0 to reflect when there are no traffic for certain periods.\n\npeakperiods_wide &lt;- pivot_wider(peakperiods, \n                                names_from = \"period\", \n                                values_from = \"TRIPS\")\n\npeakperiods_wide[\"WDA\"][is.na(peakperiods_wide[\"WDA\"])] &lt;- 0\npeakperiods_wide[\"WDM\"][is.na(peakperiods_wide[\"WDM\"])] &lt;- 0\npeakperiods_wide[\"WEE\"][is.na(peakperiods_wide[\"WEE\"])] &lt;- 0\npeakperiods_wide[\"WEM\"][is.na(peakperiods_wide[\"WEM\"])] &lt;- 0\n\nglimpse(peakperiods_wide)\n\nRows: 5,067\nColumns: 5\n$ ORIGIN_PT_CODE &lt;fct&gt; 01012, 01013, 01019, 01029, 01039, 01059, 01109, 01112,…\n$ WDA            &lt;dbl&gt; 8448, 7328, 3608, 9317, 12937, 2133, 322, 45010, 27233,…\n$ WDM            &lt;dbl&gt; 1973, 952, 1789, 2561, 2938, 1651, 161, 8492, 9015, 424…\n$ WEE            &lt;dbl&gt; 3208, 2796, 1623, 4244, 7403, 1190, 88, 21706, 11927, 6…\n$ WEM            &lt;dbl&gt; 2273, 1697, 1511, 3272, 5424, 1062, 89, 14964, 8278, 61…\n\n\nNotice that there are 5067 unique origin bus stops.\n\n\n(d) Variable Transformation\n\n\nShow the code\n# Extract column\ndistWDM &lt;- peakperiods_wide$WDM\n# Calculate mean \ndistWDM_mean &lt;- mean(distWDM)\n\nplot_distWDM &lt;- ggplot(\n    data = data.frame(distWDM),\n    aes(x = distWDM)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"black\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distWDM_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 80000, \n    y = 2000,\n    label = paste(\"Mean =\", round(distWDM_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekday Morning Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  ) +\n  scale_x_continuous(labels = label_number(), n.breaks=8)\n\n# Extract column\ndistWDA &lt;- peakperiods_wide$WDA\n# Calculate mean \ndistWDA_mean &lt;- mean(distWDA)\n\nplot_distWDA &lt;- ggplot(\n    data = data.frame(distWDA),\n    aes(x = distWDA)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"black\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distWDA_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 110000, \n    y = 2000,\n    label = paste(\"Mean =\", round(distWDA_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekday Afternoon Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  ) +\n  scale_x_continuous(labels = label_number(), n.breaks=8)\n\n# Extract column\ndistWEM &lt;- peakperiods_wide$WEM\n# Calculate mean \ndistWEM_mean &lt;- mean(distWEM)\n\nplot_distWEM &lt;- ggplot(\n    data = data.frame(distWEM),\n    aes(x = distWEM)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"black\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distWEM_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 23000, \n    y = 2000,\n    label = paste(\"Mean =\", round(distWEM_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekdend/Holiday Morning Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  ) +\n  scale_x_continuous(labels = label_number(), n.breaks=8)\n\n# Extract column\ndistWEE &lt;- peakperiods_wide$WEE\n# Calculate mean \ndistWEE_mean &lt;- mean(distWEE)\n\nplot_distWEE &lt;- ggplot(\n    data = data.frame(distWEE),\n    aes(x = distWEE)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"black\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distWEE_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 29000, \n    y = 2000, \n    label = paste(\"Mean =\", round(distWEE_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekend/Holiday Evening Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  ) +\n  scale_x_continuous(labels = label_number(), n.breaks=8)\n\n(plot_distWDM | plot_distWDA)/\n(plot_distWEM | plot_distWEE)\n\n\n\n\n\nThe distribution of passenger trips for the 4 peak periods appear to be highly skewed to the right. Rescaling our data using log transformation can greatly reduce the skewness.\n\npeakperiods_wider &lt;- peakperiods_wide %&gt;% \n  mutate(logWDM = ifelse(WDM == 0, 0, log(WDM)),\n         logWDA = ifelse(WDA == 0, 0, log(WDA)),\n         logWEM = ifelse(WEM == 0, 0, log(WEM)),\n         logWEE = ifelse(WEE == 0, 0, log(WEE)))\n\nLet’s visualise the distribution of the 4 peak periods again.\n\n\nShow the code\n# Extract column\ndistlogWDM &lt;- peakperiods_wider$logWDM\n# Calculate mean \ndistlogWDM_mean &lt;- mean(distlogWDM)\n\nplot_distlogWDM &lt;- ggplot(\n    data = data.frame(distlogWDM),\n    aes(x = distlogWDM)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"#34414E\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distlogWDM_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 10, \n    y = 1000,\n    label = paste(\"Mean =\", round(distlogWDM_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekday Morning Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  ) \n\n# Extract column\ndistlogWDA &lt;- peakperiods_wider$logWDA\n# Calculate mean \ndistlogWDA_mean &lt;- mean(distlogWDA)\n\nplot_distlogWDA &lt;- ggplot(\n    data = data.frame(distlogWDA),\n    aes(x = distlogWDA)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"#34414E\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distlogWDA_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 10, \n    y = 1000,\n    label = paste(\"Mean =\", round(distlogWDA_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekday Afternoon Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  )\n\n# Extract column\ndistlogWEM &lt;- peakperiods_wider$logWEM\n# Calculate mean \ndistlogWEM_mean &lt;- mean(distlogWEM)\n\nplot_distlogWEM &lt;- ggplot(\n    data = data.frame(distlogWEM),\n    aes(x = distlogWEM)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"#34414E\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distlogWEM_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 10, \n    y = 1000,\n    label = paste(\"Mean =\", round(distlogWEM_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekdend/Holiday Morning Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  ) \n\n# Extract column\ndistlogWEE &lt;- peakperiods_wider$logWEE\n# Calculate mean \ndistlogWEE_mean &lt;- mean(distlogWEE)\n\nplot_distlogWEE &lt;- ggplot(\n    data = data.frame(distlogWEE),\n    aes(x = distlogWEE)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"#34414E\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distlogWEE_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 10, \n    y = 1000, \n    label = paste(\"Mean =\", round(distlogWEE_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekend/Holiday Evening Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  ) \n\n(plot_distlogWDM | plot_distlogWDA)/\n(plot_distlogWEM | plot_distlogWEE)\n\n\n\n\n\n\n\n3.2.2 Geospatial\n\nImport into RGeospatial Data Wrangling\n\n\n\n(a) Bus Stop Shapefile\nIn this section, we import BusStop shapefile into RStudio using st_read() function of sf package. This data provides the locations of all bus stops as at Q2 of 2023. crs = 3414 ensures coordinate reference system (CRS) is 3414, which is the EPSG code for the SVY21 projection used in Singapore.\n\nbusstop &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"BusStop\") %&gt;% \n  st_transform(crs = 3414)\n\nReading layer `BusStop' from data source \n  `C:\\kytjy\\ISSS624\\Take-Home_Ex\\Take-Home_Ex1\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\nThe imported shape file is simple features object of sf. From the output, we can see that there are 5161 points with 3 fields, and confirm that the datum SVY21 is correct.\nRecall that there are 5067 origin bus stops from the peakperiods_wider table, compared to the 5161 bus stops from LTA’s BusStop shape file. This could be due to timing difference – LTA’s BusStop shapefile is as of July 2023, while peakperiod is based on Aug 2023.\n\nmapview::mapview(busstop)\n\n\n\n\n\n\nNote that there are 5 bus stops located outside Singapore, they are bus stops 46239, 46609, 47701, 46211, and 46219.\n\n\n(b) Hexagon Layer\nA hexagonal grid is used to replace the relative coarse and irregular Master Plan 2019 Planning Sub-zone GIS data set of URA. Hexagons have a number of advantages over these other shapes:\n\n\n\n\n\n\nWhy hexagons?\n\n\n\n\n\n\nThe distance between the centroid of a hexagon to all neighboring centroids is the same in all directions.\nThe lack of acute angles in a regular hexagon means that no areas of the shape are outliers in any direction.\nAll neighboring hexagons have the same spatial relationship with the central hexagon, making spatial querying and joining a more straightforward process.\nUnlike square-based grids, the geometry of hexagons are well-structured to represent curves of geographic features which are rarely perpendicular in shape, such as rivers and roads.\nThe “softer” shape of a hexagon compared to a square means it performs better at representing gradual spatial changes.\n\n\n\n\n\nStep 1: Create Hexagonal GridsStep 2: Convert to sf and count gridsStep 3: Remove grids with no bus stopsStep 4: Check & Visualise\n\n\nWe first create a hexagonal grid layer of 250m (refers to the perpendicular distance between the centre of the hexagon and its edges) with st_make_grid, and st_sf to convert the grid into an sf object with the codes below.\n\n\n\n\n\n\nst_make_grid Arguments\n\n\n\n\n\nst_make_grid function is used to create a grid over a spatial object. It takes 4 arguments, they are:\n\nx: sf object; the input spatial data\ncellsize: for hexagonal cells the distance between opposite edges in the unit of the crs the spatial data is using. In this case, we take cellsize to be 250m * 2 = 500m\n\n\n\nwhat: character; one of: \"polygons\", \"corners\", or \"centers\"\nsquare: indicates whether you are a square grid (TRUE) or hexagon grid (FALSE)\n\n\n\n\n\narea_hexagon_grid = st_make_grid(busstop, 500, what = \"polygons\", square = FALSE)\n\n\n\nNext, st_sf converts the grid created to sf object while lengths() of Base R is used to calculate the number of grids created.\n\n# Converts grid to sf\nhexagon_grid_sf = st_sf(area_hexagon_grid) %&gt;%\n  # Assign unique ID to each grid\n  mutate(grid_id = 1:length(lengths(area_hexagon_grid)))\n\n\n\nWe count the number of bus stops in each grid and keep grids with bus stops using the code chunks below.\n\n# Create a column containing the count of bus stops in each grid\nhexagon_grid_sf$busstops = lengths(st_intersects(hexagon_grid_sf, busstop))\n\n# Remove if no bus stop in side that grid, ie only keep hexagons with bus stops\nhexagon_w_busstops = filter(hexagon_grid_sf, busstops &gt; 0)\n\n\n\nLet’s confirm that all bus stops have been accounted for in our hexagon layer.\n\nsum(hexagon_w_busstops$busstops)\n\n[1] 5161\n\n\nThis is in line with the 5161 points of the busstop shapefile.\nLastly, using tm_shape of tmap, we can quickly visualise the results of the hexagon grids we have created.\n\n\nShow the code\ntmap_mode (\"view\")\nhex &lt;- tm_shape(hexagon_w_busstops)+\n  tm_fill(\n    col = \"busstops\",\n    palette = \"Blues\",\n    style = \"cont\",\n    title = \"Number of Bus Stops\",\n    id = \"grid_id\",\n    showNA = FALSE,\n    alpha = 0.6,\n    popup.format = list(\n      grid_id = list(format = \"f\", digits = 0)\n    )\n  )+\n  tm_borders(col = \"grey40\", lwd = 0.7)\nhex\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(a) Combining Busstop and hexagon layer\nCode chunk below populates the grid ID (i.e. grid_id) of hexagon_w_busstops sf data frame into busstop sf data frame.\n\nbs_wgrids &lt;- st_intersection(busstop, hexagon_w_busstops) %&gt;% \n  select(BUS_STOP_N,BUS_ROOF_N,LOC_DESC, grid_id, busstops) %&gt;% \n  st_drop_geometry\n\n\n\n\n\n\n\nNote\n\n\n\n\nst_intersection() is used to perform point and polygon overly and the output will be in point sf object.\nselect() of dplyr package is then use to retain only BUS_STOP_N and SUBZONE_C in the busstop_mpsz sf data frame.\nst_stop_geometry() removes the geometry data to manipulate it like a regular dataframe using tidyr and dplyr functions\n\n\n\nBefore we proceed, let’s perform a duplicates check on bs_wgrids.\n\nduplicate2 &lt;- bs_wgrids %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nduplicate2\n\n# A tibble: 8 × 5\n  BUS_STOP_N BUS_ROOF_N LOC_DESC             grid_id busstops\n  &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;                  &lt;int&gt;    &lt;int&gt;\n1 43709      B06        BLK 644                 1904        7\n2 43709      B06        BLK 644                 1904        7\n3 58031      UNK        OPP CANBERRA DR         2939        7\n4 58031      UNK        OPP CANBERRA DR         2939        7\n5 51071      B21        MACRITCHIE RESERVOIR    3081        6\n6 51071      B21        MACRITCHIE RESERVOIR    3081        6\n7 97079      B14        OPP ST. JOHN'S CRES     5037        5\n8 97079      B14        OPP ST. JOHN'S CRES     5037        5\n\n\nResults displayed 4 genuine duplicated records. We remove these to prevent double-counting.\nThe code chunk below helps retain unique records.\n\nbs_wgrids &lt;- unique(bs_wgrids)\n\n\n\n(c) Populate PeakPeriods with Grid Details\nWe can now append the grid ID from bs_wgrids data frame onto peakperiods_wide data frame. Recall we previously identified 5 bus stops outside Singapore, filter() allows us to exclude the 5 outside Singapore.\n\norigin_grid &lt;- left_join(peakperiods_wider, bs_wgrids,\n            by = c(\"ORIGIN_PT_CODE\" = \"BUS_STOP_N\")) %&gt;% \n  rename(ORIGIN_BS = ORIGIN_PT_CODE) %&gt;% \n  group_by(grid_id) %&gt;% \n  # retains SG bus stops\n  filter(!ORIGIN_BS %in% c(46239, 46609, 47701, 46211, 46219))\n\nglimpse(origin_grid)\n\nRows: 5,076\nColumns: 13\nGroups: grid_id [1,504]\n$ ORIGIN_BS  &lt;chr&gt; \"01012\", \"01013\", \"01019\", \"01029\", \"01039\", \"01059\", \"0110…\n$ WDA        &lt;dbl&gt; 8448, 7328, 3608, 9317, 12937, 2133, 322, 45010, 27233, 932…\n$ WDM        &lt;dbl&gt; 1973, 952, 1789, 2561, 2938, 1651, 161, 8492, 9015, 4240, 5…\n$ WEE        &lt;dbl&gt; 3208, 2796, 1623, 4244, 7403, 1190, 88, 21706, 11927, 6221,…\n$ WEM        &lt;dbl&gt; 2273, 1697, 1511, 3272, 5424, 1062, 89, 14964, 8278, 6198, …\n$ logWDM     &lt;dbl&gt; 7.587311, 6.858565, 7.489412, 7.848153, 7.985484, 7.409136,…\n$ logWDA     &lt;dbl&gt; 9.041685, 8.899458, 8.190909, 9.139596, 9.467847, 7.665285,…\n$ logWEM     &lt;dbl&gt; 7.728856, 7.436617, 7.320527, 8.093157, 8.598589, 6.967909,…\n$ logWEE     &lt;dbl&gt; 8.073403, 7.935945, 7.392032, 8.353261, 8.909641, 7.081709,…\n$ BUS_ROOF_N &lt;chr&gt; \"B03\", \"B05\", \"B04\", \"B07\", \"B09\", \"B08\", \"TMNL\", \"B07\", \"B…\n$ LOC_DESC   &lt;chr&gt; \"HOTEL GRAND PACIFIC\", \"ST JOSEPH'S CH\", \"BRAS BASAH CPLX\",…\n$ grid_id    &lt;int&gt; 3292, 3292, 3292, 3323, 3354, 3324, 3324, 3292, 3324, 3292,…\n$ busstops   &lt;int&gt; 8, 8, 8, 7, 8, 7, 7, 8, 7, 8, 7, 7, 8, 7, 7, 7, 7, 7, 7, 7,…\n\n\n\n\n(d) Retrieve Geometry\n\norigin_gridwgeom &lt;- inner_join(hexagon_w_busstops,\n                               origin_grid, \n                           by = \"grid_id\")\n\n\n\n\n\n\n\nImportant\n\n\n\nIn order to retain the geospatial properties, the left data frame must the sf data.frame (i.e. hexagon_w_busstop)."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/THE1.html#data-classification",
    "href": "Take-Home_Ex/Take-Home_Ex1/THE1.html#data-classification",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "4.1 Data Classification",
    "text": "4.1 Data Classification\nDifferent classification schemes highlight areas with the highest and/or lowest values, while others create classes that result in a more uniform distribution of colors. When data is sharply skewed or has extreme outliers, it’s important to consider whether the goal is to emphasize those areas or to achieve a more even distribution of colors and sizes.\nThe main methods of data classification are:\n\nQuantile: each class contains an equal number of features. It assigns the same number of data values to each class. There are no empty classes or classes with too few or too many values\nJenks/Natural breaks: seeks clumps of values that are clustered together in order to form categories that may reflect meaningful groupings of areas\nEqual: divides the range of attribute values into equal-sized sub-ranges\n\nSince our variable is less skewed after log transformation, we can explore various classification methods for visualization. This approach may reveal interesting insights that were not immediately apparent before."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/THE1.html#plots",
    "href": "Take-Home_Ex/Take-Home_Ex1/THE1.html#plots",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "4.2 Plots",
    "text": "4.2 Plots\n\n4.2.1 Weekday Morning Peak Period\n\nQuantileEqual IntervalsJenk’s\n\n\n\n\nShow the code\ntmap_mode (\"view\")\n\nplotlogWDM_q &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWDM\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\")\n\nplotlogWDM_q\n\n\n\n\n\n\n\nThe grids above are partitioned using the quantile intervals. We can observe that the bus trips are unevenly distributed across Singapore. There are lighter shares of blue (indicating lower levels of ridership) originating from the edges of the country, particularly in the West, while higher levels of ridership in the North region are indicated by the darker shades of blue.\nBus stops nearer to the residential estates appeared to be popular during the weekday morning peak period:\n\nWest: BLK 821, BLK 252, Sunshine Place\nNorth: BLK 314\nNorth-East: BLK 477A, BLK 1, BLK 555, BLK 324\nEast: BLK 109, BLK 124, BLK 756\n\nThis is likely due to a large number of people commuting from home to their workplaces/schools on weekday mornings.\nHigher passenger traffic were noted at the bus stops nearer to MRT stations such as Harbourfront Station, Farrer Road Station, Yio Chu Kang Station, and Admirality Station. A possible contributing factor could be the people who are transiting from taking the MRTs to buses to get to their destinations.\nLastly, Woodlands Checkpoint also demonstrated higher ridership. This could potentially be due to the people commuting across the causeway from Malaysia into the Singapore borders.\n\n\n\n\nShow the code\ntmap_mode (\"view\")\nplotlogWDM_e &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWDM\", \n          style = \"equal\", \n          palette = \"Blues\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\")\n  \nplotlogWDM_e\n\n\n\n\n\n\n\nThe map using equal intervals provided slightly different insights. We noted that the bus stop located near to MRT stations had higher levels of ridership. In particular, more trips originated from Tiong Bahru Station, Buona Vista Station, Tanah Merah Station, Admiralty Station, Harbourfront, and Woodleigh Station. Bus interchanges also appeared to be popular origins, i.e. Bukit Panjang Interchange and Joo Koon Interchange.\nIn general, more homogeneity is noted using the equal interval – the contrast between hexagon to hexagon is less obvious.\n\n\n\n\nShow the code\ntmap_mode (\"view\")\nplotlogWDM_j &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWDM\", \n          style = \"jenks\", \n          palette = \"Blues\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\")\n  \nplotlogWDM_j\n\n\n\n\n\n\n\nUsing Jenk’s partitioning method, the results were largely similar to the other two types of interval classes. Higher bus ridership were spotted at bus stops within close proximity to MRT stations (Kranji Station, Buona Vista Station, Buangkok Station, Ranggung Station, Farrer Road Station, Stevens Station, Bedok Reservoir Station) and residential estates (Sunshine Place near Tengah, BLK 109 in Bedok, BLK 477A in Sengkang, Bef. BLK 629A in Woodlands, to name a few).\n\n\n\n\n\n4.2.2 Weekday Afternoon Peak Period\n\nQuantileEqual IntervalsJenk’s\n\n\n\n\nShow the code\ntmap_mode (\"view\")\nplotlogWDA_q &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWDA\", \n          style = \"quantile\", \n          palette = \"Reds\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\")\n  \nplotlogWDA_q\n\n\n\n\n\n\n\nA look at the weekday afternoon ridership using the quantile classification yielded the following insights.\n\nRidership from Woodlands Checkpoint remained high.\nBus stops in close proximity to MRT tations and popular bus stops in residential estatements remained high.\nMore trips originating from institutional areas: Opposite Ngee Ann Poly, Temasek Poly, NIE BLK 2, School of the Arts\nMore trips originating from industrial buildings/business parks: North Link Bldg, Aft Senoko Way, Mapletree Business City, Woodlands Auto Hub, Opp Airline Hse, etc.\nMore trips originating from hospitals: Yishun Community Hospital, Changi General Hospital\nSeletar Camp also looked to have high passenger levels\nThe far West seemed to experience low ridership other than the bus stop opposite Tuas Link Station.\nSouthern part of Singapore, consisting of more commercial areas, appeared to be more clustered as illustrated by the density of the darker red hexagons, compared to the weekday morning peak period.\n\n\n\n\n\nShow the code\ntmap_mode (\"view\")\nplotlogWDA_e &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWDA\", \n          style = \"equal\", \n          palette = \"Reds\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\")\n  \nplotlogWDA_e\n\n\n\n\n\n\n\nNotably, there were higher concentration of passengers who boarded the bus at Serangoon Station, Harbourfront/VivoCity, Tiong Bahru Station, Admiralty Station, and Punggol Station during weekday afternoons according to the equal interval classification method.\nSimilar to the map for weekday morning peak period, the equal interval seemed to produce more homogeneous classifications.\n\n\n\n\nShow the code\ntmap_mode (\"view\")\nplotlogWDA_j &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWDA\", \n          style = \"jenks\", \n          palette = \"Reds\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\")\n  \nplotlogWDA_j\n\n\n\n\n\n\n\nJenk’s classification delivered similar insights to the quantile classification, where the higher concentration of ridership can be observed in the Southern downtown areas.\nIt also highlighted Opp Airline Hse in the far East as a bus stop with high ridership, something not as visible using the equal interval method.\nAlternative methods of commute might be more popular in the West and North-West regions illustrated by the lighter shades of red hexagons.\n\n\n\n\n\n4.2.3 Weekend/Holiday Morning Peak Period\n\nQuantileEqual IntervalsJenk’s\n\n\n\n\nShow the code\ntmap_mode (\"view\")\nplotlogWEM_q &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWEM\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\")\n  \nplotlogWEM_q\n\n\n\n\n\n\n\nGenerally, the distribution of bus ridership looks varied across the island.\nDuring the weekend/holiday peak period, the ridership for far West region remained relatively low. Interestingly, the bus trips recorded from Seletar area appeared to have dipped compared to the weekday peak periods. Buses in these industrial areas could be oriented towards work-related travel, thus less common on weekends.\nBus stops nearer to housing estates, shopping malls, and Woodlands Checkpoint demonstrated higher levels of weekend morning ridership.\nThe bus stops with the highest boarding passengers are Sunshine Place, Opp BLK 271, BLK 252, Aft. Hasanah Mosque, Buona Vista Station, Harbourfront/Vivocity, Admiralty Station, BLK 555, Bedok Reservoir Station, BLK 22, BLK 109.\n\n\n\n\nShow the code\ntmap_mode (\"view\")\nplotlogWEM_e &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWEM\", \n          style = \"equal\", \n          palette = \"Blues\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\")\n  \nplotlogWEM_e\n\n\n\n\n\n\n\nEqual interval classification highlighted the following bus stops to have the highest ridership during weekend/holiday morning peak period: Harbourfront/Vivocity, Tiong Bahru Station, Orchard Station/Lucky Plaza, Admirality Station, Aft. Punggol Road.\n\n\n\n\nShow the code\ntmap_mode (\"view\")\nplotlogWEM_j &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWEM\", \n          style = \"jenks\", \n          palette = \"Blues\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\")\n  \nplotlogWEM_j\n\n\n\n\n\n\n\nThe findings noted with Jenk’s method are similar to the quantile classification.\n\n\n\n\n\n4.2.4 Weekend/Holiday Evening\n\nQuantileEqual IntervalsJenk’s\n\n\n\n\nShow the code\ntmap_mode (\"view\")\nplotlogWEE_q &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWEE\", \n          style = \"quantile\", \n          palette = \"Reds\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\")\n  \nplotlogWEE_q\n\n\n\n\n\n\n\nOn weekend/holiday evenings, there seemed to be increased ridership at the bus stops near Changi Airport compared to the other peak periods.\nSunshine Plaza remains one of the most frequented bus stops, exhibiting high ridership across all four peak periods. While the exact reason for this is difficult to pinpoint, it’s possible that the buses stopping here connect to a wide variety of regions, which could explain the high ridership.\nWoodlands Checkpoint also demonstrated high levels of ridership across the different peak periods.\nVisually, it looks like there are more bus stops with high ridership across Singapore during the weekend/holiday evening peak period. For example, there seem to be an increase in passenger volume at the Tanah Merah Ferry compared to the other peak periods.\n\n\n\n\nShow the code\ntmap_mode (\"view\")\nplotlogWEE_e &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWEE\", \n          style = \"equal\", \n          palette = \"Reds\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\")\n  \nplotlogWEE_e\n\n\n\n\n\n\n\nThe bus stops with higher traffic seem to be quite consistent across the different peak periods. This includes Woodlands Checkpoint, Kranji Station, Admiralty Station, Serangoon Station, Aft. Punggol Road, Bukit Panjang MRT, Yio Chu Kang Interchange.\n\n\n\n\nShow the code\ntmap_mode (\"view\")\nplotlogWEE_j &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWEE\", \n          style = \"jenks\", \n          palette = \"Reds\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\")\n  \nplotlogWEE_j\n\n\n\n\n\n\n\nThe findings noted with Jenk’s method are similar to the quantile classification."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/THE1.html#global-spatial-autocorrelation",
    "href": "Take-Home_Ex/Take-Home_Ex1/THE1.html#global-spatial-autocorrelation",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "5.1 Global Spatial Autocorrelation",
    "text": "5.1 Global Spatial Autocorrelation\n\n5.1.1 Spatial Weights Matrix\nTo compute the local spatial autocorrelation statistics, we first need to construct a spatial weights of Singapore. Spatial relationships are multi-directional and multi-lateral. We can use spatial weights to define who the neighbours of the spatial units.\nThere are two common methods of spatial weights: contiguity-based and distance-based.\nContiguity-based: Neighbours share a common boundary, which can be further distinguished between a Rook and a Queen criterion of contiguity. Rook contiguity defines neighbours by the existence of a common edge between two spatial units. In Queen contiguity defines neighbours as spatial units sharing a common edge or a common vertex.\nDistance-based: Assign higher weights to pairs of locations that are closer to each other and lower weights to pairs that are further. This can be further distinguished by fixed weighting, adaptive weighting and inverse-distance weighting schemes. Fixed weighting scheme considers two regions are neighbours if they are within a specified distance from one another. For adaptive weighting scheme, each region will have the same number of neighbours. The number of neighbour is specified beforehand, where k = number of neighbours. Inverse distance method considers that the closer two features are in space, the more likely they are to interact/influence each other.\nFor this study, we will be using distance-based weight matrix as there are areas where bus stops are sparse (such as Lim Chu Kang and Mandai) and isolated (for example, Tanah Merah Ferry, Changi Naval Base, Resort World Sentosa, Marina Bay Cruise Centre). Consequently, contiguity-based matrix may yield many regions with no neighbours, making it not suitable for our analysis.\n\nFixed Distance Weight MatrixAdaptive Distance-Based Weight MatrixInverse Distance Weights (IDW)\n\n\n\nStep 1: Determine Cut-Off Distance Limit\nFirst step is to determine the upper distance limit to ensure that each hexagon has at least 1 neighbour.\nThe following functions can be used:\n\nst_knn() of sfdep is used to identify neighbors based on k (e.g. k = 8 indicates the nearest eight neighbours). The output is a neighbours list of class nb. If polygon geometry is provided, the centroids of the polygon will be used for calculation.\nst_nb_dists() of sfdep is used to calculate the nearest neighbour distance. The output is a list of distances for each observation’s neighbors list.\nunlist() of Base R is then used to return the output as a vector so that the summary statistics of the nearest neighbour distances can be derived.\n\n\ngeo &lt;- sf::st_geometry(origin_gridwgeom)\nnb &lt;- st_knn(geo, \n             longlat = TRUE)\ndists &lt;- unlist(st_nb_dists(geo, nb))\n\n\n\nStep 2: Derive Summary Stats\nWe can derive summary statistics of the nearest neighbour distances vector (i.e. dists) by using the code chunk below.\n\nsummary(dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  500.0   500.0   500.0   503.4   500.0  2291.3 \n\n\nThe maximum nearest neighbour distance is 2291.3m, thus we will use threshold value of 2292m to ensure each spatial unit has a minimum of 1 neighbour.\n\n\nStep 3: Compute fixed distance weight\nNow we will go ahead to compute the fixed distance weights by using following functions:\nst_dists_band() of sfdep is used to identify neighbors based on a distance band (i.e. 1000m). The output is a list of neighbours (i.e. nb). st_weights() is then used to calculate polygon spatial weights of the nb list. Note that the default style argument is set to “W” for row standardized weights, and the default allow_zero is set to TRUE, assigns zero as lagged value to zone without neighbors.\n\nwm_fd &lt;- origin_gridwgeom %&gt;%\n  mutate(nb = st_dist_band(geo,\n                           upper = 2992),\n               wt = st_weights(nb),\n               .before = 1)\n\n\n\nStep 4: Observations\n\n\nShow the code\n#kable(head(wm_fd,5))\nsummary(wm_fd$nb)\n\n\nNeighbour list object:\nNumber of regions: 1503 \nNumber of nonzero links: 106746 \nPercentage nonzero weights: 4.725346 \nAverage number of links: 71.02196 \nLink number distribution:\n\n  1   2   4   9  10  11  12  13  14  15  16  17  19  20  21  22  23  24  25  26 \n  1   1   1   4   2   2   3   1   2   3   3   1   2   2   1   1   6   5   3   3 \n 27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46 \n  8   9   4   3   7   2   7   6   4   9   9   5  13  10   7   9   9  12  13  16 \n 47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  66 \n 15  11  13  19  18  15  19  19  24  16  12  22  20  29  24  25   9  33  27  15 \n 67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86 \n 20  24  21  24  26  23  24  20  30  19  20  24  23  22  32  29  20  23  26  33 \n 87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 \n 29  30  31  31  25  24  22  23  18  27  18  26  20  13  17  12  16   6  14   7 \n107 108 109 110 \n  5   6   3   3 \n1 least connected region:\n1503 with 1 link\n3 most connected regions:\n1013 1024 1050 with 110 links\n\n\nFrom the result above, we can confirm that all hexagons have at least one neighbour and there are 3 well-connected hexagons with 110 neighbours. We can also identify an average of 71 neighbours per hexagon using the distance-based weight matrix.\n\n#wm_fd_sp &lt;- as(wm_fd, \"Spatial\")\n\n#centroid &lt;- st_centroid(origin_gridwgeom)\n#plot(origin_gridwgeom$area_hexagon_grid, border = \"lightgrey\")\n#plot(wm_fd_sp$polygons, centroid, pch = 19, cex = 0.1, add = TRUE, col = \"red\")\n\n\n\n\nA characteristic of fixed distance weights matrix is that more densely settled areas (town, residential neighbourhoods) tend to have more neigbours while less densely settle areas (military camps, industrial estates) tend to have less neighbours. To overcome the issue of fixed distance weight matrix where there is uneven distribution of neighbours, we can directly control the number of neighbours using k-nearest neighbours by setting the value of k in the code chunk below.\nAs a rule-of-thumb, we will set k = 8 i.e., all hexagons will have 8 neighbours.\n\nwm_ad &lt;- origin_gridwgeom %&gt;% \n  mutate(nb = st_knn(geo,\n                     k=8),\n         wt = st_weights(nb),\n               .before = 1)\n\nhead(wm_ad, n=3)\n\nSimple feature collection with 3 features and 13 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3720.122 ymin: 27925.48 xmax: 4720.122 ymax: 31100.9\nProjected CRS: SVY21 / Singapore TM\n                           nb\n1   2, 4, 5, 8, 9, 12, 22, 23\n2   1, 4, 5, 8, 9, 12, 22, 23\n3 5, 6, 9, 10, 13, 14, 16, 17\n                                                      wt grid_id busstops\n1 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125      34        1\n2 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125      65        1\n3 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125      99        1\n             LOC_DESC WDA WDM WEM WEE   logWDM   logWDA   logWEM   logWEE\n1   AFT TUAS STH BLVD 417  62   5  65 4.127134 6.033086 1.609438 4.174387\n2 BEF TUAS STH AVE 14 110  50  24  26 3.912023 4.700480 3.178054 3.258097\n3            YONG NAM 249  44  27  54 3.784190 5.517453 3.295837 3.988984\n               area_hexagon_grid\n1 POLYGON ((3970.122 27925.48...\n2 POLYGON ((4220.122 28358.49...\n3 POLYGON ((4470.122 30523.55...\n\n\nThe results show that the weights of the neighbours have been assigned to 1/8 (0.125) of the total weight, representing each of the 8 neighbours.\n\n\nInverse distance weights takes into account the decay functions of distance.\nWe can derive spatial weight matrix based on inverse distance method using the following functions:\n\nst_knn() of sfdep is used to identify neighbors based on k (e.g. k = 8 indicates the nearest eight neighbours). The output is a neighbours list of class nb. If polygon geometry is provided, the centroids of the polygon will be used for calculation.\nst_inverse_distance() is then used to calculate inverse distance weights of neighbours on the nb list.\n\nFor our analysis, we will set the number of neighbours to 8.\n\nwm_idw &lt;- origin_gridwgeom %&gt;%\n  mutate(nb = st_knn(geo,\n                     k=8),\n         wts = st_inverse_distance(nb, geo,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\nhead(wm_idw, n=3)\n\nSimple feature collection with 3 features and 13 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3720.122 ymin: 27925.48 xmax: 4720.122 ymax: 31100.9\nProjected CRS: SVY21 / Singapore TM\n                           nb\n1   2, 4, 5, 8, 9, 12, 22, 23\n2   1, 4, 5, 8, 9, 12, 22, 23\n3 5, 6, 9, 10, 13, 14, 16, 17\n                                                                                                             wts\n1 0.0020000000, 0.0011547005, 0.0004364358, 0.0007559289, 0.0005000000, 0.0005547002, 0.0005547002, 0.0004588315\n2 0.0020000000, 0.0020000000, 0.0005547002, 0.0011547005, 0.0006666667, 0.0007559289, 0.0006666667, 0.0005773503\n3 0.0020000000, 0.0020000000, 0.0010000000, 0.0020000000, 0.0011547005, 0.0011547005, 0.0007559289, 0.0010000000\n  grid_id busstops            LOC_DESC WDA WDM WEM WEE   logWDM   logWDA\n1      34        1   AFT TUAS STH BLVD 417  62   5  65 4.127134 6.033086\n2      65        1 BEF TUAS STH AVE 14 110  50  24  26 3.912023 4.700480\n3      99        1            YONG NAM 249  44  27  54 3.784190 5.517453\n    logWEM   logWEE              area_hexagon_grid\n1 1.609438 4.174387 POLYGON ((3970.122 27925.48...\n2 3.178054 3.258097 POLYGON ((4220.122 28358.49...\n3 3.295837 3.988984 POLYGON ((4470.122 30523.55...\n\n\nThe inverse distance approach is best suited for continuous data or for modeling scenarios where spatial proximity increases the likelihood of interaction or influence between two features. Nevertheless, this method treats every feature as a potential neighbor to every other feature, which can lead to a significant computational burden, especially in the case of large datasets where the volume of calculations required becomes substantial.\n\n#mpsz_sp &lt;- as(wm_idw, \"Spatial\")\n\ncentroid &lt;- st_centroid(origin_gridwgeom)\nplot(origin_gridwgeom$area_hexagon_grid, border = \"lightgrey\")\n\n\n\n#plot(wm_idw, centroid, pch = 19, cex = 0.1, add = TRUE, col = \"red\")\n\n\n\n\nIn summary:\n\nThe number of neighbours using fixed distance method vary widely from 1 to 102. Consequently, the uneven distribution could affect the spatial autocorrelation analysis.\nInverse distance method is computationally intensive as each feature is potentially a neighbour of every other feature.\nSince each hexagon is equally sized, the adaptive distance-based spatial weight matrix would be best suited for our analysis since each centroid can represent each region well."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/THE1.html#computing-global-spatial-autocorrelation-statistics",
    "href": "Take-Home_Ex/Take-Home_Ex1/THE1.html#computing-global-spatial-autocorrelation-statistics",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "5.2 Computing Global Spatial Autocorrelation Statistics",
    "text": "5.2 Computing Global Spatial Autocorrelation Statistics\n\n5.2.1 Moran’s I\nWe will perform Moran’s I statistical testing by using global_moran_perm() of spdep. The Global Moran’s I Permutation Test is a statistical method used in spatial analysis to assess the significance of spatial autocorrelation in a dataset. Spatial autocorrelation refers to the degree to which a variable is correlated with itself across space, indicating patterns such as clustering or dispersion.\n\n\n\n\n\n\nInterpretation of Moran’s I\n\n\n\n\n\nThe Moran I statistic ranges from -1 to 1. If the Moran I is:\n\npositive (I&gt;0): Clustered, observations tend to be similar\nnegative (I&lt;0): Disperse, observations tend to be dissimilar\napproximately zero: observations arranged randomly over space\n\n\n\n\nThe code chunk below performs Moran’s I statistical testing, using the null and alternative hypotheses as follows:\nH0: The observed spatial patterns of proportion of bus ridership in Singapore are not clustered (i.e. either random or dispersed).\nH1: The observed spatial patterns of proportion of bus ridership in Singapore are clustered.\nA total of 100 simulations will be performed using the original and logged values with a seed number 1234. set.seed() function allows us to create reproducible results.\nNote: nsim arugment of global_moran_perm() refers to the number of simulations is nsim + 1, i.e., for nsim = 99, 100 simulations will be performed.\n\nset.seed(1234)\n\n\nWeekday MorningWeekday AfternoonWeekend/Holiday MorningWeekend/Holiday Evening\n\n\nOriginal Data\n\n\nShow the code\ngmp_WDM &lt;- global_moran_perm(wm_ad$WDM,\n                  wm_ad$nb,\n                  wm_ad$wt,\n                  nsim = 99)\ngmp_WDM\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.19938, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\nLog-Transformed Variable\n\n\nShow the code\ngmp_logWDM &lt;- global_moran_perm(wm_ad$logWDM,\n                  wm_ad$nb,\n                  wm_ad$wt,\n                  nsim = 99)\ngmp_logWDM\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.5159, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\n\nOriginal Data\n\n\nShow the code\ngmp_WDA &lt;- global_moran_perm(wm_ad$WDA,\n                  wm_ad$nb,\n                  wm_ad$wt,\n                  nsim = 99)\ngmp_WDA\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.059528, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\nLog-Transformed Data\n\n\nShow the code\ngmp_logWDA &lt;- global_moran_perm(wm_ad$logWDA,\n                  wm_ad$nb,\n                  wm_ad$wt,\n                  nsim = 99)\ngmp_logWDA\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.35711, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\n\nOriginal Data\n\n\nShow the code\ngmp_WEM &lt;- global_moran_perm(wm_ad$WEM,\n                  wm_ad$nb,\n                  wm_ad$wt,\n                  nsim = 99)\ngmp_WEM\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.15158, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\nLog-Transformed Data\n\n\nShow the code\ngmp_logWEM &lt;- global_moran_perm(wm_ad$logWEM,\n                  wm_ad$nb,\n                  wm_ad$wt,\n                  nsim = 99)\ngmp_logWEM\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.49385, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\n\nOriginal Data\n\n\nShow the code\ngmp_WEE &lt;- global_moran_perm(wm_ad$WEE,\n                  wm_ad$nb,\n                  wm_ad$wt,\n                  nsim = 99)\ngmp_WEE\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.097321, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\nLog-Transformed Data\n\n\nShow the code\ngmp_logWEE &lt;- global_moran_perm(wm_ad$logWEE,\n                  wm_ad$nb,\n                  wm_ad$wt,\n                  nsim = 99)\ngmp_logWEE\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.40407, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\n\n\nAcross the 4 peak periods, the permutation test generated low p-values of &lt;0.05. This indicates that we can reject the null hypothesis at the 95% level of confidence, and conclude that for each of the 4 peak periods, the overall bus ridership across Singapore is spatially clustered (since positive Moran’s I value is obtained). The higher Moran’s I values for logged-transformed variables suggests a higher level of clustering compared to the original ridership values."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/THE1.html#local-spatial-autocorrelation-statistics",
    "href": "Take-Home_Ex/Take-Home_Ex1/THE1.html#local-spatial-autocorrelation-statistics",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "5.3 Local Spatial Autocorrelation Statistics",
    "text": "5.3 Local Spatial Autocorrelation Statistics\nGlobal spatial autocorrelation provides a broad overview of spatial clustering within a dataset, offering a single value that indicates whether similar values are generally clustered or dispersed across the entire study area. In contrast, local spatial autocorrelation delves into specific locations, identifying where clusters of similar values (hot spots or cold spots) or spatial outliers exist. While global metrics give an overall trend, local metrics provide detailed, location-specific insights, highlighting exact areas of significant spatial clustering or anomaly.\nThus, after we have established through statistical testing that spatial clustering of bus ridership occurs in Singapore, we now seek to detect clusters or outliers and discover if there are any hot or cold spots of high ridership using Local Spatial Autocorrelation Statistics.\n\n5.3.1 Local Moran’s I\nIn this section, we will perform Moran’s I statistics testing by using local_moran() of sfdep. The output of local_moran() is a sf data.frame, containing the columns below:\n\nii: local moran statistic\neii: expectation of local Moran’s I statistic\nvar_ii: variance of local Moran’s I statistic\nz_ii: standard deviation of local Moran’s I statistic\np_ii: p-value of local Moran’s I statistic using pnorm()\np_ii_sim: For localmoran_perm(), rank() and punif() of observed statistic rank for [0, 1] p-values using alternative=\np_folded_sim: the simulation folded [0, 0.5] range ranked p-value, based on crand.py of pysal\nskewness: For localmoran_perm, the output of e1071::skewness() for the permutation samples underlying the standard deviates\nkurtosis: For localmoran_perm, the output of e1071::kurtosis() for the permutation samples underlying the standard deviates.\n\nunnest() of tidyr package helps expand a list-column containing data frames into rows and columns.\n\nWeekday MorningWeekday AfternoonWeekend/Holiday MorningWeekend/Holiday Evening\n\n\nOriginal Data\n\n\nShow the code\nlisa_WDM &lt;- wm_ad %&gt;% \n  mutate(local_moran = local_moran(\n    origin_gridwgeom$WDM, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\nhead(lisa_WDM, n=5)\n\n\nSimple feature collection with 5 features and 25 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3720.122 ymin: 27925.48 xmax: 4970.122 ymax: 31100.9\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 5 × 26\n     ii      eii var_ii  z_ii   p_ii p_ii_sim p_folded_sim skewness kurtosis\n  &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 0.386 -0.0300  0.0517  1.83 0.0673     0.02         0.01   -0.986    1.02 \n2 0.386  0.00824 0.0439  1.80 0.0715     0.02         0.01   -1.59     3.83 \n3 0.384  0.0181  0.0392  1.85 0.0646     0.02         0.01   -1.25     2.84 \n4 0.382 -0.00282 0.0440  1.83 0.0669     0.02         0.01   -1.33     2.74 \n5 0.367  0.0196  0.0363  1.82 0.0688     0.02         0.01   -0.911    0.458\n# ℹ 17 more variables: mean &lt;fct&gt;, median &lt;fct&gt;, pysal &lt;fct&gt;, nb &lt;nb&gt;,\n#   wt &lt;list&gt;, grid_id &lt;int&gt;, busstops &lt;int&gt;, LOC_DESC &lt;chr&gt;, WDA &lt;dbl&gt;,\n#   WDM &lt;dbl&gt;, WEM &lt;dbl&gt;, WEE &lt;dbl&gt;, logWDM &lt;dbl&gt;, logWDA &lt;dbl&gt;, logWEM &lt;dbl&gt;,\n#   logWEE &lt;dbl&gt;, area_hexagon_grid &lt;POLYGON [m]&gt;\n\n\nLog-Transformed Data\n\n\nShow the code\nlisa_logWDM &lt;- wm_ad %&gt;% \n  mutate(local_moran = local_moran(\n    origin_gridwgeom$logWDM, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\nhead(lisa_logWDM, n=5)\n\n\nSimple feature collection with 5 features and 25 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3720.122 ymin: 27925.48 xmax: 4970.122 ymax: 31100.9\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 5 × 26\n     ii      eii var_ii  z_ii       p_ii p_ii_sim p_folded_sim skewness kurtosis\n  &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 2.50   0.0725  0.395   3.85 0.000116       0.02         0.01    0.164 -0.366  \n2 2.60  -0.00763 0.371   4.28 0.0000186      0.02         0.01    0.152  0.00836\n3 2.43   0.00367 0.499   3.43 0.000596       0.02         0.01    0.451  0.187  \n4 1.98   0.00665 0.283   3.70 0.000212       0.02         0.01    0.142 -0.585  \n5 0.846 -0.0305  0.0363  4.60 0.00000421     0.02         0.01    0.266 -0.274  \n# ℹ 17 more variables: mean &lt;fct&gt;, median &lt;fct&gt;, pysal &lt;fct&gt;, nb &lt;nb&gt;,\n#   wt &lt;list&gt;, grid_id &lt;int&gt;, busstops &lt;int&gt;, LOC_DESC &lt;chr&gt;, WDA &lt;dbl&gt;,\n#   WDM &lt;dbl&gt;, WEM &lt;dbl&gt;, WEE &lt;dbl&gt;, logWDM &lt;dbl&gt;, logWDA &lt;dbl&gt;, logWEM &lt;dbl&gt;,\n#   logWEE &lt;dbl&gt;, area_hexagon_grid &lt;POLYGON [m]&gt;\n\n\n\n\nOriginal Data\n\n\nShow the code\nlisa_WDA &lt;- wm_ad %&gt;% \n  mutate(local_moran = local_moran(\n    origin_gridwgeom$WDA, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\nhead(lisa_WDA, n=5)\n\n\nSimple feature collection with 5 features and 25 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3720.122 ymin: 27925.48 xmax: 4970.122 ymax: 31100.9\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 5 × 26\n     ii      eii var_ii  z_ii  p_ii p_ii_sim p_folded_sim skewness kurtosis\n  &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 0.205 -0.00517 0.0243  1.35 0.177     0.02         0.01    -2.11     5.11\n2 0.209 -0.0201  0.0338  1.25 0.213     0.02         0.01    -1.96     3.82\n3 0.204  0.0222  0.0211  1.25 0.211     0.02         0.01    -2.54     9.59\n4 0.192  0.0250  0.0136  1.43 0.152     0.02         0.01    -2.33     6.51\n5 0.177 -0.00590 0.0164  1.43 0.153     0.02         0.01    -1.78     4.07\n# ℹ 17 more variables: mean &lt;fct&gt;, median &lt;fct&gt;, pysal &lt;fct&gt;, nb &lt;nb&gt;,\n#   wt &lt;list&gt;, grid_id &lt;int&gt;, busstops &lt;int&gt;, LOC_DESC &lt;chr&gt;, WDA &lt;dbl&gt;,\n#   WDM &lt;dbl&gt;, WEM &lt;dbl&gt;, WEE &lt;dbl&gt;, logWDM &lt;dbl&gt;, logWDA &lt;dbl&gt;, logWEM &lt;dbl&gt;,\n#   logWEE &lt;dbl&gt;, area_hexagon_grid &lt;POLYGON [m]&gt;\n\n\nLog-Transformed Data\n\n\nShow the code\nlisa_logWDA &lt;- wm_ad %&gt;% \n  mutate(local_moran = local_moran(\n    origin_gridwgeom$logWDA, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\nhead(lisa_logWDA, n=5)\n\n\nSimple feature collection with 5 features and 25 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3720.122 ymin: 27925.48 xmax: 4970.122 ymax: 31100.9\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 5 × 26\n     ii      eii var_ii  z_ii       p_ii p_ii_sim p_folded_sim skewness kurtosis\n  &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 1.90   0.0644  0.303   3.34 0.000848       0.04         0.02    0.849    0.770\n2 2.67  -0.0583  0.537   3.73 0.000194       0.02         0.01   -0.153   -0.661\n3 2.10   0.00427 0.375   3.42 0.000619       0.06         0.03    0.946    1.62 \n4 0.924 -0.0318  0.0420  4.66 0.00000311     0.02         0.01    0.581    0.695\n5 0.523  0.00710 0.0151  4.21 0.0000258      0.02         0.01    0.343   -0.534\n# ℹ 17 more variables: mean &lt;fct&gt;, median &lt;fct&gt;, pysal &lt;fct&gt;, nb &lt;nb&gt;,\n#   wt &lt;list&gt;, grid_id &lt;int&gt;, busstops &lt;int&gt;, LOC_DESC &lt;chr&gt;, WDA &lt;dbl&gt;,\n#   WDM &lt;dbl&gt;, WEM &lt;dbl&gt;, WEE &lt;dbl&gt;, logWDM &lt;dbl&gt;, logWDA &lt;dbl&gt;, logWEM &lt;dbl&gt;,\n#   logWEE &lt;dbl&gt;, area_hexagon_grid &lt;POLYGON [m]&gt;\n\n\n\n\nOriginal Data\n\n\nShow the code\nlisa_WEM &lt;- wm_ad %&gt;% \n  mutate(local_moran = local_moran(\n    origin_gridwgeom$WEM, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\nhead(lisa_WEM, n=5)\n\n\nSimple feature collection with 5 features and 25 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3720.122 ymin: 27925.48 xmax: 4970.122 ymax: 31100.9\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 5 × 26\n     ii      eii var_ii  z_ii   p_ii p_ii_sim p_folded_sim skewness kurtosis\n  &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 0.315  0.00993 0.0417  1.49 0.135      0.02         0.01    -1.98     5.32\n2 0.314  0.0264  0.0334  1.57 0.116      0.02         0.01    -1.77     4.00\n3 0.307  0.0271  0.0316  1.57 0.116      0.02         0.01    -1.72     4.44\n4 0.303  0.0129  0.0262  1.80 0.0725     0.02         0.01    -1.30     1.87\n5 0.290 -0.0248  0.0488  1.43 0.154      0.02         0.01    -1.93     3.92\n# ℹ 17 more variables: mean &lt;fct&gt;, median &lt;fct&gt;, pysal &lt;fct&gt;, nb &lt;nb&gt;,\n#   wt &lt;list&gt;, grid_id &lt;int&gt;, busstops &lt;int&gt;, LOC_DESC &lt;chr&gt;, WDA &lt;dbl&gt;,\n#   WDM &lt;dbl&gt;, WEM &lt;dbl&gt;, WEE &lt;dbl&gt;, logWDM &lt;dbl&gt;, logWDA &lt;dbl&gt;, logWEM &lt;dbl&gt;,\n#   logWEE &lt;dbl&gt;, area_hexagon_grid &lt;POLYGON [m]&gt;\n\n\nLog-Transformed Data\n\n\nShow the code\nlisa_logWEM &lt;- wm_ad %&gt;% \n  mutate(local_moran = local_moran(\n    origin_gridwgeom$logWEM, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\nhead(lisa_logWEM, n=5)\n\n\nSimple feature collection with 5 features and 25 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3720.122 ymin: 27925.48 xmax: 4970.122 ymax: 31100.9\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 5 × 26\n     ii     eii var_ii  z_ii        p_ii p_ii_sim p_folded_sim skewness kurtosis\n  &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;       &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 4.21   0.111  1.35    3.53 0.000413        0.02         0.01    0.224   -0.322\n2 3.27   0.0112 0.693   3.91 0.0000919       0.02         0.01    0.400    0.614\n3 2.64   0.0295 0.453   3.88 0.000103        0.02         0.01    0.342   -0.542\n4 1.92  -0.0367 0.153   5.00 0.000000568     0.02         0.01    0.168   -0.344\n5 0.903 -0.0294 0.0373  4.83 0.00000135      0.02         0.01    0.181   -0.155\n# ℹ 17 more variables: mean &lt;fct&gt;, median &lt;fct&gt;, pysal &lt;fct&gt;, nb &lt;nb&gt;,\n#   wt &lt;list&gt;, grid_id &lt;int&gt;, busstops &lt;int&gt;, LOC_DESC &lt;chr&gt;, WDA &lt;dbl&gt;,\n#   WDM &lt;dbl&gt;, WEM &lt;dbl&gt;, WEE &lt;dbl&gt;, logWDM &lt;dbl&gt;, logWDA &lt;dbl&gt;, logWEM &lt;dbl&gt;,\n#   logWEE &lt;dbl&gt;, area_hexagon_grid &lt;POLYGON [m]&gt;\n\n\n\n\nOriginal Data\n\n\nShow the code\nlisa_WEE &lt;- wm_ad %&gt;% \n  mutate(local_moran = local_moran(\n    origin_gridwgeom$WEE, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\nhead(lisa_WEE, n=5)\n\n\nSimple feature collection with 5 features and 25 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3720.122 ymin: 27925.48 xmax: 4970.122 ymax: 31100.9\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 5 × 26\n     ii      eii var_ii  z_ii  p_ii p_ii_sim p_folded_sim skewness kurtosis\n  &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 0.223 -0.00162 0.0255  1.41 0.159     0.02         0.01    -2.01     6.38\n2 0.225 -0.0145  0.0384  1.22 0.222     0.02         0.01    -2.25     5.82\n3 0.216  0.00855 0.0216  1.41 0.157     0.02         0.01    -1.70     3.01\n4 0.213 -0.00814 0.0345  1.19 0.233     0.02         0.01    -2.88    11.0 \n5 0.200 -0.00909 0.0319  1.17 0.241     0.02         0.01    -2.02     3.82\n# ℹ 17 more variables: mean &lt;fct&gt;, median &lt;fct&gt;, pysal &lt;fct&gt;, nb &lt;nb&gt;,\n#   wt &lt;list&gt;, grid_id &lt;int&gt;, busstops &lt;int&gt;, LOC_DESC &lt;chr&gt;, WDA &lt;dbl&gt;,\n#   WDM &lt;dbl&gt;, WEM &lt;dbl&gt;, WEE &lt;dbl&gt;, logWDM &lt;dbl&gt;, logWDA &lt;dbl&gt;, logWEM &lt;dbl&gt;,\n#   logWEE &lt;dbl&gt;, area_hexagon_grid &lt;POLYGON [m]&gt;\n\n\nLog-Transformed Data\n\n\nShow the code\nlisa_logWEE &lt;- wm_ad %&gt;% \n  mutate(local_moran = local_moran(\n    origin_gridwgeom$logWEE, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\nhead(lisa_logWEE, n=5)\n\n\nSimple feature collection with 5 features and 25 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3720.122 ymin: 27925.48 xmax: 4970.122 ymax: 31100.9\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 5 × 26\n     ii      eii var_ii  z_ii     p_ii p_ii_sim p_folded_sim skewness kurtosis\n  &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 2.17  -0.00124 0.385   3.50 0.000466     0.02         0.01   0.174   0.342  \n2 2.67   0.0907  0.638   3.22 0.00127      0.02         0.01  -0.0207  0.00460\n3 2.02  -0.156   0.419   3.36 0.000767     0.04         0.02   0.577   0.605  \n4 1.20   0.0287  0.103   3.64 0.000277     0.02         0.01   0.336  -0.0657 \n5 0.675 -0.00449 0.0309  3.87 0.000110     0.02         0.01   0.788   0.969  \n# ℹ 17 more variables: mean &lt;fct&gt;, median &lt;fct&gt;, pysal &lt;fct&gt;, nb &lt;nb&gt;,\n#   wt &lt;list&gt;, grid_id &lt;int&gt;, busstops &lt;int&gt;, LOC_DESC &lt;chr&gt;, WDA &lt;dbl&gt;,\n#   WDM &lt;dbl&gt;, WEM &lt;dbl&gt;, WEE &lt;dbl&gt;, logWDM &lt;dbl&gt;, logWDA &lt;dbl&gt;, logWEM &lt;dbl&gt;,\n#   logWEE &lt;dbl&gt;, area_hexagon_grid &lt;POLYGON [m]&gt;\n\n\n\n\n\n\n\n5.3.2 Visualising Local Moran’s I & p-value\nTo better understand which areas are outliers/clusters, we will use choropleth mapping functions of tmap package to visualise the local Moran’s I values and the associated p-values by using the code chunks below.\n\nWeekday MorningWeekday AfternoonWeekend/Holiday MorningWeekend/Holiday Evening\n\n\n\n\nShow the code\ntmap_mode(\"plot\")\n\nplot_lisaWDM &lt;-\n  tm_shape(lisa_WDM) +\n    tm_fill(\"ii\",\n            style=\"pretty\",\n            palette=\"RdBu\") + \n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's I\",\n            main.title.size = 0.7,\n            main.title.position = \"center\",\n            legend.title.size = 1,\n            legend.text.size = 0.5,\n            legend.position = c(\"left\",\"top\"),\n            frame = FALSE)\n\nplotp_lisaWDM &lt;- \n  tm_shape(lisa_WDM) +\n    tm_fill(\"p_ii_sim\",\n            breaks = c(0, 0.001, 0.01, 0.05, 1),\n            palette=\"-Blues\",\n            labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) +\n\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"p-value of Local Moran's I\",\n            main.title.size = 0.7,\n            main.title.position = \"center\",\n            legend.title.size = 1,\n            legend.text.size = 0.5,\n            legend.position = c(\"left\",\"top\"),          \n            frame = FALSE)\n\nplot_lisalogWDM &lt;-\n  tm_shape(lisa_logWDM) +\n    tm_fill(\"ii\",\n            style=\"pretty\",\n            palette=\"RdBu\") + \n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's I\\n (Using Log-Transformed Variables)\",\n            main.title.size = 0.7,\n            main.title.position = \"center\",\n            legend.title.size = 1,\n            legend.text.size = 0.5,\n            legend.position = c(\"left\",\"top\"),\n            frame = FALSE\n            )\n\nplotp_lisalogWDM &lt;- \n  tm_shape(lisa_logWDM) +\n    tm_fill(\"p_ii_sim\",\n            breaks = c(0, 0.001, 0.01, 0.05, 1),\n            palette=\"-Blues\",\n            labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"p-value of Local Moran's I\\n (Using Log-Transformed Variables)\",\n            main.title.size = 0.7,\n            main.title.position = \"center\",\n            legend.title.size = 1,\n            legend.text.size = 0.5,\n            legend.position = c(\"left\",\"top\"),\n            frame = FALSE)\n\n\ntmap_arrange(plot_lisaWDM, plotp_lisaWDM, plot_lisalogWDM, plotp_lisalogWDM, asp=2, ncol=2, nrow = 2) \n\n\n\n\n\n\n\n\n\nShow the code\ntmap_mode(\"plot\")\n\nplot_lisaWDA &lt;-\n  tm_shape(lisa_WDA) +\n    tm_fill(\"ii\",\n            style=\"pretty\",\n            palette=\"RdBu\") + \n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's I\",\n            main.title.size = 0.7,\n            main.title.position = \"center\",\n            legend.title.size = 1,\n            legend.text.size = 0.5,\n            legend.position = c(\"left\",\"top\"),            \n            frame = FALSE\n            )\n\nplotp_lisaWDA &lt;- \n  tm_shape(lisa_WDA) +\n    tm_fill(\"p_ii_sim\",\n            breaks = c(0, 0.001, 0.01, 0.05, 1),\n            palette=\"-Blues\",\n            labels = c(-Inf, \"0.01\", \"0.05\", \"Not sig\")) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"p-value of Local Moran's I\",\n            main.title.size = 0.7,\n            main.title.position = \"center\",\n            legend.title.size = 1,\n            legend.text.size = 0.5,\n            legend.position = c(\"left\",\"top\"),          \n            frame = FALSE\n            )\n            \nplot_lisalogWDA &lt;-\n  tm_shape(lisa_logWDA) +\n    tm_fill(\"ii\",\n            style=\"pretty\",\n            palette=\"RdBu\") + \n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's I\\n (Using Log-Transformed Variables)\",\n            main.title.size = 0.7,\n            main.title.position = \"center\",\n            legend.title.size = 1,\n            legend.text.size = 0.5,\n            legend.position = c(\"left\",\"top\"),            \n            frame = FALSE\n            )\n\nplotp_lisalogWDA &lt;- \n  tm_shape(lisa_logWDA) +\n    tm_fill(\"p_ii_sim\",\n            breaks = c(0, 0.001, 0.01, 0.05, 1),\n            palette=\"-Blues\",\n            labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"p-value of Local Moran's I\\n (Using Log-Transformed Variables)\",\n            main.title.size = 0.7,\n            main.title.position = \"center\",\n            legend.title.size = 1,\n            legend.text.size = 0.5,\n            legend.position = c(\"left\",\"top\"),            \n            frame = FALSE\n            )\n\ntmap_arrange(plot_lisaWDA, plotp_lisaWDA, plot_lisalogWDA, plotp_lisalogWDA, asp=2, ncol=2)\n\n\n\n\n\n\n\n\n\nShow the code\ntmap_mode(\"plot\")\n\nplot_lisaWEM &lt;-\n  tm_shape(lisa_WEM) +\n    tm_fill(\"ii\",\n            style=\"pretty\",\n            palette=\"RdBu\") + \n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's I\",\n            main.title.size = 0.7,\n            main.title.position = \"center\",\n            legend.title.size = 1,\n            legend.text.size = 0.5,\n            legend.position = c(\"left\",\"top\"),             \n            frame = FALSE\n            )\n\nplotp_lisaWEM &lt;- \n  tm_shape(lisa_WEM) +\n    tm_fill(\"p_ii_sim\",\n            breaks = c(0, 0.001, 0.01, 0.05, 1),\n            palette=\"-Blues\",\n            labels = c(-Inf, \"0.01\", \"0.05\", \"Not sig\")) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"p-value of Local Moran's I\",\n            main.title.size = 0.7,\n            main.title.position = \"center\",\n            legend.title.size = 1,\n            legend.text.size = 0.5,\n            legend.position = c(\"left\",\"top\"),           \n            frame = FALSE\n            )\n\nplot_lisalogWEM &lt;-\n  tm_shape(lisa_logWEM) +\n    tm_fill(\"ii\",\n            style=\"pretty\",\n            palette=\"RdBu\") + \n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's I\\n (Using Log-Transformed Variables)\",\n            main.title.size = 0.7,\n            main.title.position = \"center\",\n            legend.title.size = 1,\n            legend.text.size = 0.5,\n            legend.position = c(\"left\",\"top\"),            \n            frame = FALSE\n            )\n\nplotp_lisalogWEM &lt;- \n  tm_shape(lisa_logWEM) +\n    tm_fill(\"p_ii_sim\",\n            breaks = c(0, 0.001, 0.01, 0.05, 1),\n            palette=\"-Blues\",\n            labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"p-value of Local Moran's I\\n (Using Log-Transformed Variables)\",\n            main.title.size = 0.7,\n            main.title.position = \"center\",\n            legend.title.size = 1,\n            legend.text.size = 0.5,\n            legend.position = c(\"left\",\"top\"),            \n            frame = FALSE\n            )\n\ntmap_arrange(plot_lisaWEM, plotp_lisaWEM, plot_lisalogWEM, plotp_lisalogWEM, asp=2, ncol=2, nrow = 2)\n\n\n\n\n\n\n\n\n\nShow the code\ntmap_mode(\"plot\")\n\nplot_lisaWEE &lt;-\n  tm_shape(lisa_WEE) +\n    tm_fill(\"ii\",\n            style=\"pretty\",\n            palette=\"RdBu\") + \n  #tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's I\",\n            main.title.size = 0.7,\n            main.title.position = \"center\",\n             legend.title.size = 1,\n            legend.text.size = 0.5,\n            legend.position = c(\"left\",\"top\"),            \n            frame = FALSE)\n\nplotp_lisaWEE &lt;- \n  tm_shape(lisa_WEE) +\n    tm_fill(\"p_ii_sim\",\n            breaks = c(0, 0.001, 0.01, 0.05, 1),\n            palette=\"-Blues\",\n            labels = c(-Inf, \"0.01\", \"0.05\", \"Not sig\")) +\n  #tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"p-value of Local Moran's I\",\n            main.title.size = 0.7,\n            main.title.position = \"center\",\n              legend.title.size = 1,\n            legend.text.size = 0.5,\n            legend.position = c(\"left\",\"top\"),           \n            frame = FALSE)\n\nplot_lisalogWEE &lt;-\n  tm_shape(lisa_logWEE) +\n    tm_fill(\"ii\",\n            style=\"pretty\",\n            palette=\"RdBu\") + \n # tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's I\\n (Using Log-Transformed Variables)\",\n            main.title.size = 0.7,\n            main.title.position = \"center\",\n             legend.title.size = 1,\n            legend.text.size = 0.5,\n            legend.position = c(\"left\",\"top\"),            \n            frame = FALSE\n            )\n\nplotp_lisalogWEE &lt;- \n  tm_shape(lisa_logWEE) +\n    tm_fill(\"p_ii_sim\",\n            breaks = c(0, 0.001, 0.01, 0.05, 1),\n            palette=\"-Blues\",\n            labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) +\n  #tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"p-value of Local Moran's I\\n (Using Log-Transformed Variables)\",\n            main.title.size = 0.7,\n            main.title.position = \"center\",\n              legend.title.size = 1,\n            legend.text.size = 0.5,\n            legend.position = c(\"left\",\"top\"),           \n            frame = FALSE\n            )\n\ntmap_arrange(plot_lisaWEE, plotp_lisaWEE, plot_lisalogWEE, plotp_lisalogWEE, asp=2, ncol=2, nrow=2)\n\n\n\n\n\n\n\n\nThe plot on the top-left shows regions of positive (in blue) and negative (in red) Moran’s I statistics, indicating positive and negative clustering relationships. In particular, bus stops near transit hubs like Clementi Station, Tampines Interchange, and Punggol Station have high Local Moran’s I statistics across all four peak periods. On the contrary, Woodlands Checkpoint seems to only experience high Moran’s I on weekday mornings.\nNotably, the Boon Lay MRT region displayed negative Local Moran’s (in red) throughout the four peak periods, indicating that the volume of passenger trips at this area is dissimilar to its neighbours.\nOn the top-right, we see that the p-values are significant at 5% significance level for the regions in the 3 darker shades of blue. We see that areas in the far West, North-West, and far East have statistically significant p-values for the cluster/outlier spatial relationship that they see.\nWe obtain different insights using the log-transformed variables to calculate Local Moran’s I. On weekdays, North-West region, particularly around Lim Chu Kang / Sungei Buloh. The plot on the right suggests that with p-value &lt;0.05, the high spatial clustering observed in the area is also statistically significant.\nLISA cluster maps combines both Local Moran’s I values and p-values to derive more insightful observations.\n\n\n5.3.3 Visualising LISA Map\nThe LISA Cluster Map allows us to identify hotspots can its statistical significance. It is colour-coded by four types of spatial autocorrelation:\n\nHigh-High: Positive autocorrelation, i.e. clusters (indicates hexagon and its neighbours all have high ridership)\nLow-Low: Positive autocorrelation, i.e. clusters (indicates hexagon and its neighbours all have low number ridership)\nLow-High: Negative autocorrelation, i.e. outlier (indicates hexagon with low ridership among neighbours with high ridership)\nHigh-Low: Negative autocorrelation, i.e. outlier (indicates hexagon with high ridership among neighbours with low ridership)\n\nThe following functions are used:\n\nfilter() from dplyr used to retain records with statistically significant results (p-value &lt; 0.05)\ntmap_mode(“view”) allows for interactive viewing of plots\n\nNote: The median is used for untransformed variables due to their right-skewed distribution, while the mean is used for log-transformed variables.\nWeekday Morning\n\nOriginal ValuesLog-Transformed Variable\n\n\n\n\nShow the code\nlisa_sig_WDM &lt;- lisa_WDM  %&gt;%\n  filter(p_ii_sim &lt; 0.05)\n\ntmap_mode(\"view\")\n\ntm_basemap(\"OpenStreetMap\") +\ntm_shape(lisa_WDM) +\n  tm_fill(alpha=0.6)+\n  tm_polygons() +\ntm_shape(lisa_sig_WDM) +\n  tm_fill(\"median\",\n          alpha=0.6,\n          id=\"LOC_DESC\",\n          popup.vars = c(\"Location Description: \" = \"LOC_DESC\",\n                         \"Grid ID: \" = \"grid_id\",\n                         \"No. of Bus Stops:\" = \"busstops\",\n                         \"No. of Passenger Trips :\" = \"WDM\")) + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nlisa_sig_logWDM &lt;-lisa_logWDM  %&gt;%\n  filter(p_ii_sim &lt; 0.05)\n\ntmap_mode(\"view\")\n\ntm_basemap(\"OpenStreetMap\") +\ntm_shape(lisa_logWDM) +\n  tm_fill(alpha=0.6)+\n  tm_polygons() +\ntm_shape(lisa_sig_logWDM) +\n  tm_fill(\"mean\",\n          alpha=0.6,\n          id=\"LOC_DESC\",\n          popup.vars = c(\"Location Description: \" = \"LOC_DESC\",\n                         \"Grid ID: \" = \"grid_id\",\n                         \"No. of Bus Stops:\" = \"busstops\",\n                         \"No. of Passenger Trips :\" = \"WDM\")) + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\n\n\nThe plot demonstrates that the statistically significant Moran’s I values are depicted in salmon for high-high autocorrelation and in teal for low-low autocorrelation, indicating clusters. Areas displaying low-low autocorrelation are primarily observed around the edges of the island, notably in the West, North-West, and East regions. In the context of our study, these areas experience low bus ridership and are surrounded by bus stops that also have low ridership. This pattern could suggest that on weekday mornings, these areas either have less human traffic or that residents prefer other forms of transportation. More and larger clusters are also seen using the log-transformed variables, where similar neighbouring hexagons demonstrate similar autocorrelation.\nHigh-high autocorrelation areas, where both an area and its neighboring areas have high bus ridership, are scattered across the island. These are predominantly found near transit hubs such as Boon Lay Station, Aft. Bukit Panjang Station, Woodlands Checkpoint, and Buona Vista. Some residential estates and the neighourhood schools, including Punggol and Clementi, also exhibit high-high autocorrelation. This trend could be attributed to people traveling from their homes or switching transportation modes, opting for buses to reach their destinations. Retail centres appear to have high-high autocorrelation during the weekday morning peak-periods as well, evidenced in areas like Teck Whye Shopping Centre.\nSeveral outliers are identified in purple and yellow. The Low-High regions (in purple) are generally found in proximity to high-high regions (in salmon). Conversely, High-Low regions (in yellow) appear to be located near low-low regions (in teal).\nWeekday Afternoons\n\nOriginal ValuesLog-Transformed Variable\n\n\n\n\nShow the code\nlisa_sig_WDA &lt;- lisa_WDA  %&gt;%\n  filter(p_ii_sim &lt; 0.05)\n\ntmap_mode(\"view\")\n\ntm_basemap(\"OpenStreetMap\") +\ntm_shape(lisa_WDA) +\n  tm_fill(alpha=0.6)+\n  tm_polygons() +\ntm_shape(lisa_sig_WDA) +\n  tm_fill(\"median\",\n          alpha=0.6,\n          id=\"LOC_DESC\",\n          popup.vars = c(\"Location Description: \" = \"LOC_DESC\",\n                         \"Grid ID: \" = \"grid_id\",\n                         \"No. of Bus Stops:\" = \"busstops\",\n                         \"No. of Passenger Trips :\" = \"WDA\")) +  \n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nlisa_sig_logWDA &lt;- lisa_logWDA  %&gt;%\n  filter(p_ii_sim &lt; 0.05)\n\ntmap_mode(\"view\")\n\ntm_basemap(\"OpenStreetMap\") +\ntm_shape(lisa_logWDA) +\n  tm_fill(alpha=0.6)+\n  tm_polygons() +\ntm_shape(lisa_sig_logWDA) +\n  tm_fill(\"mean\",\n          alpha=0.6,\n          id=\"LOC_DESC\",\n          popup.vars = c(\"Location Description: \" = \"LOC_DESC\",\n                         \"Grid ID: \" = \"grid_id\",\n                         \"No. of Bus Stops:\" = \"busstops\",\n                         \"No. of Passenger Trips :\" = \"WDA\")) + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\n\n\nFor the weekday afternoon peak period, areas exhibiting high-high autocorrelation include transit hubs such as Opp. LakeSide Station, Bef. Khatib Station, Compassvale Station, Serangoon Station, Downtown Station, and others. This trend mirrors that of weekday mornings, where transit hubs experience high bus ridership, likely due to passengers switching between different modes of transportation.\nBus stop near area of attraction (like the Singapore Zoo) also showed high-low autocorrelation on weekday afternoons, compared to the high-high autocorrelation experienced on weekday morning peak period. This suggests that it’s ridership remains high but lower ridership recorded in the surrounding regions.\nUsing the log-transformed variable, the stretch along Orchard Road from Orchard Station to War Memorial Park, and CBD area in the South have also been highlighted as a high-high cluster.\nDuring these afternoon peak periods, there appears to be less statistically significant autocorrelation, particularly in areas like the Loyang region, including Changi Prison and Laguna National Country Club. Notably, using the untransformed values, the Woodlands Checkpoint area does not demonstrate the statistically significant high-high relationship expected from the previous Section 4.2.2 Geovisualisation or in comparison to weekday mornings. This observation might indicate that there is more human traffic moving from Malaysia to Singapore in the mornings, resulting in higher bus ridership originating from the checkpoints.\nWeekend/Holidays Morning\n\nOriginal ValuesLog-Transformed Variable\n\n\n\n\nShow the code\nlisa_sig_WEM &lt;- lisa_WEM  %&gt;%\n  filter(p_ii_sim &lt; 0.05)\n\ntmap_mode(\"view\")\n\ntm_basemap(\"OpenStreetMap\") +\ntm_shape(lisa_WEM) +\n  tm_fill(alpha=0.6)+\n  tm_polygons() +\ntm_shape(lisa_sig_WEM) +\n  tm_fill(\"median\",\n          alpha=0.6,\n          id=\"LOC_DESC\",\n          popup.vars = c(\"Location Description: \" = \"LOC_DESC\",\n                         \"Grid ID: \" = \"grid_id\",\n                         \"No. of Bus Stops:\" = \"busstops\",\n                         \"No. of Passenger Trips :\" = \"WEM\")) + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nlisa_sig_logWEM &lt;- lisa_logWEM  %&gt;%\n  filter(p_ii_sim &lt; 0.05)\n\ntmap_mode(\"view\")\n\ntm_basemap(\"OpenStreetMap\") +\ntm_shape(lisa_logWEM) +\n  tm_fill(alpha=0.6)+\n  tm_polygons() +\ntm_shape(lisa_sig_logWEM) +\n  tm_fill(\"mean\",\n          alpha=0.6,\n          id=\"LOC_DESC\",\n          popup.vars = c(\"Location Description: \" = \"LOC_DESC\",\n                         \"Grid ID: \" = \"grid_id\",\n                         \"No. of Bus Stops:\" = \"busstops\",\n                         \"No. of Passenger Trips :\" = \"WEM\")) +\n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\n\n\nThere are a lot more low-low regions on weekend/holiday mornings, suggesting generally lower levels of ridership compared to the weekday peak periods. These clusters were noted along the peripheral edges. This is in line with the observations made in our barplot in Section 3.2.1. Another difference with the weekday peak periods is the low-low autocorrelation noted at the Science Park area evidenced by the cluster of teal hexagons in the South-West region.\nThere are also notably less high-high clusters in the West, specifically in the Jurong West / Boon Lay areas, and more of such clusters in the South-East region (i.e. Bras Basah and Marine Parade). There is also seemingly an influx of passengers from the Tanah Merah Ferry Terminal on weekend/holiday mornings, in contrast to the low-low autocorrelation for weekday-mornings.\nWeekend/Holidays Evening\n\nOriginal ValuesLog-Transformed Variable\n\n\n\n\nShow the code\nlisa_sig_WEE &lt;- lisa_WEE  %&gt;%\n  filter(p_ii_sim &lt; 0.05)\n\ntmap_mode(\"view\")\n\ntm_basemap(\"OpenStreetMap\") +\ntm_shape(lisa_WEE) + \n  tm_fill(alpha=0.6)+\n  tm_polygons() +\n#  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig_WEE) +\n  tm_fill(\"median\",\n          alpha=0.6,\n          id=\"LOC_DESC\",\n          popup.vars = c(\"Location Description: \" = \"LOC_DESC\",\n                         \"Grid ID: \" = \"grid_id\",\n                         \"No. of Bus Stops:\" = \"busstops\",\n                         \"No. of Passenger Trips :\" = \"WEE\")) + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nlisa_sig_logWEE &lt;- lisa_logWEE  %&gt;%\n  filter(p_ii_sim &lt; 0.05)\n\ntmap_mode(\"view\")\n\ntm_basemap(\"OpenStreetMap\") +\ntm_shape(lisa_logWEE) +\n  tm_fill(alpha=0.6)+\n  tm_polygons() +\ntm_shape(lisa_sig_logWEE) +\n  tm_fill(\"mean\",\n          alpha=0.6,\n          id=\"LOC_DESC\",\n          popup.vars = c(\"Location Description: \" = \"LOC_DESC\",\n                         \"Grid ID: \" = \"grid_id\",\n                         \"No. of Bus Stops:\" = \"busstops\",\n                         \"No. of Passenger Trips :\" = \"WEE\")) + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\n\n\nUsing the untransformed passenger volume, the bus stops in the West, North-West, and Changi Village regions continue to experience low ridership on weekday and holiday evenings, as illustrated by the clusters of teal hexagons. Bus stops located near transit hubs and around the shopping district in town exhibit high-high autocorrelation (in salmon). Notably, the area around Woodlands MRT station shows significant high-high autocorrelation, which could be attributed to its connectivity with Woodlands Bus Interchange and its status as an interchange serving both the North-South Line and the Thomson-East Coast Line. Interestingly, no high-low outliers (in yellow) are observed in the Central and South regions of Singapore.\nMore clusters are shown with the log-transformed passenger volume. In particular, Hougang Central, Paya Lebar / Joo Chiat region, Toa Payoh Central, Tiong Bahru and Clementi were not previously highlighted as high-high clusters before."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex3/data/geospatial/MPSZ-2019.html",
    "href": "Hands-on_Ex/Hands-on_Ex3/data/geospatial/MPSZ-2019.html",
    "title": "Geospatial Data Analytics",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Hands-on_Ex1.html",
    "href": "Hands-on_Ex1.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "This is the overview paragraph."
  },
  {
    "objectID": "Hands-on_Ex1.html#overview",
    "href": "Hands-on_Ex1.html#overview",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "This is the overview paragraph."
  },
  {
    "objectID": "Hands-on_Ex1.html#getting-started",
    "href": "Hands-on_Ex1.html#getting-started",
    "title": "Hands-on Exercise 1",
    "section": "Getting Started",
    "text": "Getting Started\nThis is the getting started paragraph"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/data/geospatial/MPSZ-2019.html",
    "href": "In-class_Ex/In-class_Ex1/data/geospatial/MPSZ-2019.html",
    "title": "Geospatial Data Analytics",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/test.html",
    "href": "In-class_Ex/In-class_Ex2/test.html",
    "title": "In-class Ex 2",
    "section": "",
    "text": "Geospatial Analysis using sfdep"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/test.html#joining-the-dataframes",
    "href": "In-class_Ex/In-class_Ex2/test.html#joining-the-dataframes",
    "title": "In-class Ex 2",
    "section": "2.1 Joining the dataframes",
    "text": "2.1 Joining the dataframes\nSpatial features are added to the attribute dataframe as geometry column:\n\nhunan_GDPPC&lt;- left_join(hunan, \n                         GDPPC, \n                         by = \"County\")\n\nglimpse(hunan_GDPPC)\n\nRows: 1,496\nColumns: 10\n$ NAME_2     &lt;chr&gt; \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Cha…\n$ ID_3       &lt;int&gt; 21098, 21098, 21098, 21098, 21098, 21098, 21098, 21098, 210…\n$ NAME_3     &lt;chr&gt; \"Anxiang\", \"Anxiang\", \"Anxiang\", \"Anxiang\", \"Anxiang\", \"Anx…\n$ ENGTYPE_3  &lt;chr&gt; \"County\", \"County\", \"County\", \"County\", \"County\", \"County\",…\n$ Shape_Leng &lt;dbl&gt; 1.869074, 1.869074, 1.869074, 1.869074, 1.869074, 1.869074,…\n$ Shape_Area &lt;dbl&gt; 0.1005619, 0.1005619, 0.1005619, 0.1005619, 0.1005619, 0.10…\n$ County     &lt;chr&gt; \"Anxiang\", \"Anxiang\", \"Anxiang\", \"Anxiang\", \"Anxiang\", \"Anx…\n$ Year       &lt;dbl&gt; 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014,…\n$ GDPPC      &lt;dbl&gt; 8184.00, 10995.00, 12670.00, 14128.00, 16763.00, 19817.00, …\n$ geometry   &lt;POLYGON [°]&gt; POLYGON ((112.0625 29.75523..., POLYGON ((112.0625 …"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/test.html#confirm-if-the-new-dataframe-is-a-spacetime-cube-object",
    "href": "In-class_Ex/In-class_Ex2/test.html#confirm-if-the-new-dataframe-is-a-spacetime-cube-object",
    "title": "In-class Ex 2",
    "section": "6.1 Confirm if the new dataframe is a spacetime cube object",
    "text": "6.1 Confirm if the new dataframe is a spacetime cube object\n\nis_spacetime_cube(GDPPC_st)\n\n[1] TRUE"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/data/geospatial/hexagon.html",
    "href": "Take-Home_Ex/Take-Home_Ex1/data/geospatial/hexagon.html",
    "title": "Geospatial Data Analytics",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n                 +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs 0 0     false"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/data/geospatial/MPSZ-2019.html",
    "href": "Take-Home_Ex/Take-Home_Ex1/data/geospatial/MPSZ-2019.html",
    "title": "Geospatial Data Analytics",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/Take-Home_Ex1.html",
    "href": "Take-Home_Ex/Take-Home_Ex1/Take-Home_Ex1.html",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "",
    "text": "As urban infrastructures, including public transportation systems like buses, taxis, mass rapid transit, public utilities, and roads, become increasingly digitised, the data generated becomes a valuable resource for tracking the movements of people and vehicles over space and time. This transformation has been facilitated by pervasive computing technologies such as Global Positioning System (GPS) and Radio Frequency Identification (RFID) tags on vehicles. An example of this is the collection of data on bus routes and ridership, amassed from the use of smart cards and GPS devices available on public buses.\nThe data collected from these sources is likely to contain valuable patterns that offer insights into various aspects of human movement and behavior within a city. Analyzing and comparing these patterns can provide a deeper understanding of urban mobility. Such insights can be instrumental in improving urban management and can also serve as valuable information for both public and private sector stakeholders involved in urban transportation services. This information can aid them in making informed decisions and gaining a competitive edge in their respective domains.\n\n\n\n\nAimTasks\n\n\nThe objective of this study is to utilize appropriate Local Indicators of Spatial Association (LISA) and Emerging Hot Spot Analysis (EHSA) techniques to uncover spatial and spatio-temporal mobility patterns among public bus passengers in Singapore.\n\n\nThis will include the following tasks:\n\nGeovisualisation and Analysis:\n\nCompute the passenger trips generated by origin at the hexagon level\nDisplay the geographical distribution of the passenger trips\nExplore spatial patterns revealed by the geovisualisation\n\n\n\n\n\nPeak hour period\nBus tap on time\n\n\n\n\nWeekday morning peak\n6am to 9am\n\n\nWeekday afternoon peak\n5pm to 8pm\n\n\nWeekend/holiday morning peak\n11am to 2pm\n\n\nWeekend/holiday evening peak\n4pm to 7pm\n\n\n\n\nLocal Indicators of Spatial Association (LISA) Analysis - Compute LISA of the passenger trips generate by origin - Display and draw statistical conclusions of LISA maps\nEmerging Hot Spot Analysis (EHSA)\n\nPerform Mann-Kendall Test by using the spatio-temporal local Gi* values\nDisplay EHSA maps of the Gi* values, describe the spatial patterns revealed"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/Take-Home_Ex1.html#background",
    "href": "Take-Home_Ex/Take-Home_Ex1/Take-Home_Ex1.html#background",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "",
    "text": "As urban infrastructures, including public transportation systems like buses, taxis, mass rapid transit, public utilities, and roads, become increasingly digitised, the data generated becomes a valuable resource for tracking the movements of people and vehicles over space and time. This transformation has been facilitated by pervasive computing technologies such as Global Positioning System (GPS) and Radio Frequency Identification (RFID) tags on vehicles. An example of this is the collection of data on bus routes and ridership, amassed from the use of smart cards and GPS devices available on public buses.\nThe data collected from these sources is likely to contain valuable patterns that offer insights into various aspects of human movement and behavior within a city. Analyzing and comparing these patterns can provide a deeper understanding of urban mobility. Such insights can be instrumental in improving urban management and can also serve as valuable information for both public and private sector stakeholders involved in urban transportation services. This information can aid them in making informed decisions and gaining a competitive edge in their respective domains."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/Take-Home_Ex1.html#objectives",
    "href": "Take-Home_Ex/Take-Home_Ex1/Take-Home_Ex1.html#objectives",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "",
    "text": "AimTasks\n\n\nThe objective of this study is to utilize appropriate Local Indicators of Spatial Association (LISA) and Emerging Hot Spot Analysis (EHSA) techniques to uncover spatial and spatio-temporal mobility patterns among public bus passengers in Singapore.\n\n\nThis will include the following tasks:\n\nGeovisualisation and Analysis:\n\nCompute the passenger trips generated by origin at the hexagon level\nDisplay the geographical distribution of the passenger trips\nExplore spatial patterns revealed by the geovisualisation\n\n\n\n\n\nPeak hour period\nBus tap on time\n\n\n\n\nWeekday morning peak\n6am to 9am\n\n\nWeekday afternoon peak\n5pm to 8pm\n\n\nWeekend/holiday morning peak\n11am to 2pm\n\n\nWeekend/holiday evening peak\n4pm to 7pm\n\n\n\n\nLocal Indicators of Spatial Association (LISA) Analysis - Compute LISA of the passenger trips generate by origin - Display and draw statistical conclusions of LISA maps\nEmerging Hot Spot Analysis (EHSA)\n\nPerform Mann-Kendall Test by using the spatio-temporal local Gi* values\nDisplay EHSA maps of the Gi* values, describe the spatial patterns revealed"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/Take-Home_Ex1.html#the-data",
    "href": "Take-Home_Ex/Take-Home_Ex1/Take-Home_Ex1.html#the-data",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "3.1 The Data",
    "text": "3.1 The Data\nThe following data are used for this study:\n\nAspatial:\n\nPassenger Volume by Origin Destination Bus Stops for August, September and October 2023, downloaded from LTA DataMall using API.\n\nGeospatial\n\nBus Stop Location from LTA DataMall. It provides information about all the bus stops currently being serviced by buses, including the bus stop code (identifier) and location coordinates.\nhexagon, a hexagon layer of 250m is provided to replace the relative coarse and irregular Master Plan 2019 Planning Sub-zone GIS data set of URA."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/Take-Home_Ex1.html#import-preparation",
    "href": "Take-Home_Ex/Take-Home_Ex1/Take-Home_Ex1.html#import-preparation",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "3.2 Import & Preparation",
    "text": "3.2 Import & Preparation"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/Take-Home_Ex1.html#aspatial",
    "href": "Take-Home_Ex/Take-Home_Ex1/Take-Home_Ex1.html#aspatial",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "3.2.1 Aspatial",
    "text": "3.2.1 Aspatial\n::: panel-tabset"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/Take-Home_Ex1.html#import-into-r",
    "href": "Take-Home_Ex/Take-Home_Ex1/Take-Home_Ex1.html#import-into-r",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "Import into R",
    "text": "Import into R\nWe will be importing the Passenger Volume by Origin Destination Bus Stops dataset from August to October 2023, downloaded from LTA DataMall by using read_csv() or readr package.\n\nodbus08 &lt;- read_csv(\"data/aspatial/origin_destination_bus_202308.csv\")\n#odbus09 &lt;- read_csv(\"data/aspatial/origin_destination_bus_202309.csv\")\n#odbus10 &lt;- read_csv(\"data/aspatial/origin_destination_bus_202310.csv\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/Take-Home_Ex1.html#data-exploration",
    "href": "Take-Home_Ex/Take-Home_Ex1/Take-Home_Ex1.html#data-exploration",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "Data Exploration",
    "text": "Data Exploration\n\n(a) Attributes\nglimpse() of the dplyr package allows us to see all columns and their data type in the data frame.\n\nglimpse(odbus08)\n\nRows: 5,709,512\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-08\", \"2023-08\", \"2023-08\", \"2023-08\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKDAY\", \"WEEKENDS/HOLIDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       &lt;dbl&gt; 16, 16, 14, 14, 17, 17, 17, 17, 7, 17, 14, 10, 10,…\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;chr&gt; \"04168\", \"04168\", \"80119\", \"80119\", \"44069\", \"4406…\n$ DESTINATION_PT_CODE &lt;chr&gt; \"10051\", \"10051\", \"90079\", \"90079\", \"17229\", \"1722…\n$ TOTAL_TRIPS         &lt;dbl&gt; 7, 2, 3, 10, 5, 4, 3, 22, 3, 3, 7, 1, 3, 1, 3, 1, …\n\n#glimpse(odbus09)\n#glimpse(odbus10)\n\nInsights:\n\nThere are 7 variables in the odbus08 tibble data, they are:\n\nYEAR_MONTH: Month in which data is collected\nDAY_TYPE: Weekdays or weekends/holidays\nTIME_PER_HOUR: Hour which the passenger trip is based on, in intervals from 0 to 23 hours\nPT_TYPE: Type of public transport, i.e. bus\nORIGIN_PT_CODE: Origin bus stop ID\nDESTINATION_PT_CODE: Destination bus stop ID\nTOTAL_TRIPS: Number of trips\n\nWe also note that values in ORIGIN_PT_CODE and DESTINATON_PT_CODE are in numeric data type.\n\n\n\n(b) Unique Bus Stops\nn_distinct() of the dplyr package allows us to count the unique bus stops in the data set.\n\nn_distinct(odbus08$ORIGIN_PT_CODE)\n\n[1] 5067\n\n\nThe results reveal that there are 5067 distinct origin bus stops."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/Take-Home_Ex1.html#data-wrangling",
    "href": "Take-Home_Ex/Take-Home_Ex1/Take-Home_Ex1.html#data-wrangling",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "Data Wrangling",
    "text": "Data Wrangling\n\n(a) Convert Data Type\nas.factor() can be used to convert the variables ORIGIN_PT_CODE and DESTINATON_PT_CODE from numeric to categorical data type. We use glimpse() again to check the results.\n\nodbus08$ORIGIN_PT_CODE &lt;- as.factor(odbus08$ORIGIN_PT_CODE)\nodbus08$DESTINATION_PT_CODE &lt;- as.factor(odbus08$DESTINATION_PT_CODE)\n\nglimpse(odbus08)\n\nRows: 5,709,512\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-08\", \"2023-08\", \"2023-08\", \"2023-08\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKDAY\", \"WEEKENDS/HOLIDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       &lt;dbl&gt; 16, 16, 14, 14, 17, 17, 17, 17, 7, 17, 14, 10, 10,…\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;fct&gt; 04168, 04168, 80119, 80119, 44069, 44069, 20281, 2…\n$ DESTINATION_PT_CODE &lt;fct&gt; 10051, 10051, 90079, 90079, 17229, 17229, 20141, 2…\n$ TOTAL_TRIPS         &lt;dbl&gt; 7, 2, 3, 10, 5, 4, 3, 22, 3, 3, 7, 1, 3, 1, 3, 1, …\n\n\nNote that both of them are in factor data type now.\n\n\n(b) Duplicates Check\nBefore moving on to the next step, it is a good practice for us to check for duplicated records to prevent double counting of passenger trips.\n\nduplicate &lt;- odbus08 %&gt;% \n  group_by_all() %&gt;% \n  filter(n()&gt;1) %&gt;% \n  ungroup()\n  \nduplicate\n\n# A tibble: 0 × 7\n# ℹ 7 variables: YEAR_MONTH &lt;chr&gt;, DAY_TYPE &lt;chr&gt;, TIME_PER_HOUR &lt;dbl&gt;,\n#   PT_TYPE &lt;chr&gt;, ORIGIN_PT_CODE &lt;fct&gt;, DESTINATION_PT_CODE &lt;fct&gt;,\n#   TOTAL_TRIPS &lt;dbl&gt;\n\n\nResults confirm that there are no duplicated records found.\n\n\n(c) Extracting the Study Data\nIn our study, we would like to know patterns for 4 peak hour periods. Therefore, we can create a new variable period using the ifelse() that states whether an observation occurred during peak period using the code chunk below.\n\npeak &lt;- odbus08 %&gt;%\n  # Weekday morning peak\n  mutate(period= ifelse(DAY_TYPE==\"WEEKDAY\" & (TIME_PER_HOUR &gt;= 6 & TIME_PER_HOUR &lt;= 9), \"WDM\", \n                        # Weekday afternoon peak\n                        ifelse(DAY_TYPE==\"WEEKDAY\" & (TIME_PER_HOUR &gt;= 17 & TIME_PER_HOUR &lt;= 20), \"WDA\", \n                               # Weekend/holiday morning peak\n                               ifelse(DAY_TYPE==\"WEEKENDS/HOLIDAY\" & (TIME_PER_HOUR &gt;= 11 & TIME_PER_HOUR &lt;= 14), \"WEM\",\n                                      # Weekend/holiday evening peak\n                                      ifelse(DAY_TYPE==\"WEEKENDS/HOLIDAY\" & (TIME_PER_HOUR &gt;= 16 & TIME_PER_HOUR &lt;= 19), \"WEE\",\n                                             # Return off-peak if neither of the peak hour periods\n                                             \"Off-peak\")))))\n\nWe can then filter for peak-period data using the newly created period column and aggregate the total trips for each origin bus stop during peak period.\n\npeakperiods &lt;- peak %&gt;% \n  # filter helps to keep records that occurred during period periods\n  filter(period !=\"Off-peak\") %&gt;% \n  # aggregate the total passenger trips for each origin bus stop\n  group_by(period, ORIGIN_PT_CODE) %&gt;% \n  summarise(TRIPS=sum(TOTAL_TRIPS))\n\nLet’s visualise the proportions of passenger volumes for each peak period.\n\n\nShow the code\nfreq&lt;- ggplot(data=peakperiods, \n       aes(x=period,y=TRIPS))+\n  geom_bar(stat=\"identity\") +\n  theme(legend.position=\"none\")+\n  labs(title = \"Frequency of Trip for each Peak Period\",\n      x = \"Peak Period\",\n      y = \"Frequency\")\n\nfreq + scale_y_continuous(labels=label_comma())\n\n\n\n\n\nWe can see that passenger volume on weekdays are much higher than over the weekends/holidays.\nTranspose each peak period period as a columns using pivot_wider() of tidyr package will allow us to create further variables at a bus stop level. We replace NA values with 0 to reflect when there are no traffic for certain periods.\n\npeakperiods_wide &lt;- pivot_wider(peakperiods, \n                                names_from = \"period\", \n                                values_from = \"TRIPS\")\n\npeakperiods_wide[\"WDA\"][is.na(peakperiods_wide[\"WDA\"])] &lt;- 0\npeakperiods_wide[\"WDM\"][is.na(peakperiods_wide[\"WDM\"])] &lt;- 0\npeakperiods_wide[\"WEE\"][is.na(peakperiods_wide[\"WEE\"])] &lt;- 0\npeakperiods_wide[\"WEM\"][is.na(peakperiods_wide[\"WEM\"])] &lt;- 0\n\nglimpse(peakperiods_wide)\n\nRows: 5,067\nColumns: 5\n$ ORIGIN_PT_CODE &lt;fct&gt; 01012, 01013, 01019, 01029, 01039, 01059, 01109, 01112,…\n$ WDA            &lt;dbl&gt; 8448, 7328, 3608, 9317, 12937, 2133, 322, 45010, 27233,…\n$ WDM            &lt;dbl&gt; 1973, 952, 1789, 2561, 2938, 1651, 161, 8492, 9015, 424…\n$ WEE            &lt;dbl&gt; 3208, 2796, 1623, 4244, 7403, 1190, 88, 21706, 11927, 6…\n$ WEM            &lt;dbl&gt; 2273, 1697, 1511, 3272, 5424, 1062, 89, 14964, 8278, 61…\n\n\nNotice that there are 5067 unique origin bus stops.\n\n\n(d) Variable Transformation\n\n\nShow the code\n# Extract column\ndistWDM &lt;- peakperiods_wide$WDM\n# Calculate mean \ndistWDM_mean &lt;- mean(distWDM)\n\nplot_distWDM &lt;- ggplot(\n    data = data.frame(distWDM),\n    aes(x = distWDM)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"black\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distWDM_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 80000, \n    y = 2000,\n    label = paste(\"Mean =\", round(distWDM_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekday Morning Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  ) +\n  scale_x_continuous(labels = label_number(), n.breaks=8)\n\n# Extract column\ndistWDA &lt;- peakperiods_wide$WDA\n# Calculate mean \ndistWDA_mean &lt;- mean(distWDA)\n\nplot_distWDA &lt;- ggplot(\n    data = data.frame(distWDA),\n    aes(x = distWDA)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"black\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distWDA_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 110000, \n    y = 2000,\n    label = paste(\"Mean =\", round(distWDA_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekday Afternoon Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  ) +\n  scale_x_continuous(labels = label_number(), n.breaks=8)\n\n# Extract column\ndistWEM &lt;- peakperiods_wide$WEM\n# Calculate mean \ndistWEM_mean &lt;- mean(distWEM)\n\nplot_distWEM &lt;- ggplot(\n    data = data.frame(distWEM),\n    aes(x = distWEM)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"black\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distWEM_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 23000, \n    y = 2000,\n    label = paste(\"Mean =\", round(distWEM_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekdend/Holiday Morning Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  ) +\n  scale_x_continuous(labels = label_number(), n.breaks=8)\n\n# Extract column\ndistWEE &lt;- peakperiods_wide$WEE\n# Calculate mean \ndistWEE_mean &lt;- mean(distWEE)\n\nplot_distWEE &lt;- ggplot(\n    data = data.frame(distWEE),\n    aes(x = distWEE)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"black\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distWEE_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 29000, \n    y = 2000, \n    label = paste(\"Mean =\", round(distWEE_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekend/Holiday Evening Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  ) +\n  scale_x_continuous(labels = label_number(), n.breaks=8)\n\n(plot_distWDM | plot_distWDA)/\n(plot_distWEM | plot_distWEE)\n\n\n\n\n\nThe distribution of passenger trips for the 4 peak periods appear to be highly skewed to the right. Rescaling our data using log transformation can greatly reduce the skewness.\n\npeakperiods_wider &lt;- peakperiods_wide %&gt;% \n  mutate(logWDM = ifelse(WDM == 0, 0, log(WDM)),\n         logWDA = ifelse(WDA == 0, 0, log(WDA)),\n         logWEM = ifelse(WEM == 0, 0, log(WEM)),\n         logWEE = ifelse(WEE == 0, 0, log(WEE)))\n\nLet’s visualise the distribution of the 4 peak periods again.\n\n\nShow the code\n# Extract column\ndistlogWDM &lt;- peakperiods_wider$logWDM\n# Calculate mean \ndistlogWDM_mean &lt;- mean(distlogWDM)\n\nplot_distlogWDM &lt;- ggplot(\n    data = data.frame(distlogWDM),\n    aes(x = distlogWDM)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"#34414E\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distlogWDM_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 10, \n    y = 1000,\n    label = paste(\"Mean =\", round(distlogWDM_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekday Morning Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  ) \n\n# Extract column\ndistlogWDA &lt;- peakperiods_wider$logWDA\n# Calculate mean \ndistlogWDA_mean &lt;- mean(distlogWDA)\n\nplot_distlogWDA &lt;- ggplot(\n    data = data.frame(distlogWDA),\n    aes(x = distlogWDA)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"#34414E\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distlogWDA_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 10, \n    y = 1000,\n    label = paste(\"Mean =\", round(distlogWDA_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekday Afternoon Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  )\n\n# Extract column\ndistlogWEM &lt;- peakperiods_wider$logWEM\n# Calculate mean \ndistlogWEM_mean &lt;- mean(distlogWEM)\n\nplot_distlogWEM &lt;- ggplot(\n    data = data.frame(distlogWEM),\n    aes(x = distlogWEM)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"#34414E\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distlogWEM_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 10, \n    y = 1000,\n    label = paste(\"Mean =\", round(distlogWEM_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekdend/Holiday Morning Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  ) \n\n# Extract column\ndistlogWEE &lt;- peakperiods_wider$logWEE\n# Calculate mean \ndistlogWEE_mean &lt;- mean(distlogWEE)\n\nplot_distlogWEE &lt;- ggplot(\n    data = data.frame(distlogWEE),\n    aes(x = distlogWEE)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"#34414E\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distlogWEE_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 10, \n    y = 1000, \n    label = paste(\"Mean =\", round(distlogWEE_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekend/Holiday Evening Peak\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust=1)\n  ) \n\n(plot_distlogWDM | plot_distlogWDA)/\n(plot_distlogWEM | plot_distlogWEE)\n\n\n\n\n\n\n\n3.2.2 Geospatial\n\nImport into RGeospatial Data Wrangling\n\n\n\n(a) Bus Stop Shapefile\nIn this section, we import BusStop shapefile into RStudio using st_read() function of sf package. This data provides the locations of all bus stops as at Q2 of 2023. crs = 3414 ensures coordinate reference system (CRS) is 3414, which is the EPSG code for the SVY21 projection used in Singapore.\n\nbusstop &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"BusStop\") %&gt;% \n  st_transform(crs = 3414)\n\nReading layer `BusStop' from data source \n  `C:\\kytjy\\ISSS624\\Take-Home_Ex\\Take-Home_Ex1\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\nThe imported shape file is simple features object of sf. From the output, we can see that there are 5161 points with 3 fields, and confirm that the datum SVY21 is correct.\nRecall that there are 5067 origin bus stops from the peakperiods_wider table, compared to the 5161 bus stops from LTA’s BusStop shape file. This could be due to timing difference – LTA’s BusStop shapefile is as of July 2023, while peakperiod is based on Aug 2023.\n\nmapview::mapview(busstop)\n\n\n\n\n\n\nNote that there are 5 bus stops located outside Singapore, they are bus stops 46239, 46609, 47701, 46211, and 46219.\n\n\n(b) Hexagon Layer\nA hexagonal grid is used to replace the relative coarse and irregular Master Plan 2019 Planning Sub-zone GIS data set of URA. Hexagons have a number of advantages over these other shapes:\n\n\n\n\n\n\nWhy hexagons?\n\n\n\n\n\n\nThe distance between the centroid of a hexagon to all neighboring centroids is the same in all directions.\nThe lack of acute angles in a regular hexagon means that no areas of the shape are outliers in any direction.\nAll neighboring hexagons have the same spatial relationship with the central hexagon, making spatial querying and joining a more straightforward process.\nUnlike square-based grids, the geometry of hexagons are well-structured to represent curves of geographic features which are rarely perpendicular in shape, such as rivers and roads.\nThe “softer” shape of a hexagon compared to a square means it performs better at representing gradual spatial changes.\n\n\n\n\n\nStep 1: Create Hexagonal GridsStep 2: Convert to sf and count gridsStep 3: Remove grids with no bus stopsStep 4: Check & Visualise\n\n\nWe first create a hexagonal grid layer of 250m (refers to the perpendicular distance between the centre of the hexagon and its edges) with st_make_grid, and st_sf to convert the grid into an sf object with the codes below.\n\n\n\n\n\n\nst_make_grid Arguments\n\n\n\n\n\nst_make_grid function is used to create a grid over a spatial object. It takes 4 arguments, they are:\n\nx: sf object; the input spatial data\ncellsize: for hexagonal cells the distance between opposite edges in the unit of the crs the spatial data is using. In this case, we take cellsize to be 250m * 2 = 500m\n\n\n\nwhat: character; one of: \"polygons\", \"corners\", or \"centers\"\nsquare: indicates whether you are a square grid (TRUE) or hexagon grid (FALSE)\n\n\n\n\n\narea_hexagon_grid = st_make_grid(busstop, 500, what = \"polygons\", square = FALSE)\n\n\n\nNext, st_sf converts the grid created to sf object while lengths() of Base R is used to calculate the number of grids created.\n\n# Converts grid to sf\nhexagon_grid_sf = st_sf(area_hexagon_grid) %&gt;%\n  # Assign unique ID to each grid\n  mutate(grid_id = 1:length(lengths(area_hexagon_grid)))\n\n\n\nWe count the number of bus stops in each grid and keep grids with bus stops using the code chunks below.\n\n# Create a column containing the count of bus stops in each grid\nhexagon_grid_sf$busstops = lengths(st_intersects(hexagon_grid_sf, busstop))\n\n# Remove if no bus stop in side that grid, ie only keep hexagons with bus stops\nhexagon_w_busstops = filter(hexagon_grid_sf, busstops &gt; 0)\n\n\n\nLet’s confirm that all bus stops have been accounted for in our hexagon layer.\n\nsum(hexagon_w_busstops$busstops)\n\n[1] 5161\n\n\nThis is in line with the 5161 points of the busstop shapefile.\nLastly, using tm_shape of tmap, we can quickly visualise the results of the hexagon grids we have created.\n\n\nShow the code\ntmap_mode (\"view\")\nhex &lt;- tm_shape(hexagon_w_busstops)+\n  tm_fill(\n    col = \"busstops\",\n    palette = \"Blues\",\n    style = \"cont\",\n    title = \"Number of Bus Stops\",\n    id = \"grid_id\",\n    showNA = FALSE,\n    alpha = 0.6,\n    popup.format = list(\n      grid_id = list(format = \"f\", digits = 0)\n    )\n  )+\n  tm_borders(col = \"grey40\", lwd = 0.7)\nhex\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(a) Combining Busstop and hexagon layer\nCode chunk below populates the grid ID (i.e. grid_id) of hexagon_w_busstops sf data frame into busstop sf data frame.\n\nbs_wgrids &lt;- st_intersection(busstop, hexagon_w_busstops) %&gt;% \n  select(BUS_STOP_N,BUS_ROOF_N,LOC_DESC, grid_id, busstops) %&gt;% \n  st_drop_geometry\n\n\n\n\n\n\n\nNote\n\n\n\n\nst_intersection() is used to perform point and polygon overly and the output will be in point sf object.\nselect() of dplyr package is then use to retain only BUS_STOP_N and SUBZONE_C in the busstop_mpsz sf data frame.\nst_stop_geometry() removes the geometry data to manipulate it like a regular dataframe using tidyr and dplyr functions\n\n\n\nBefore we proceed, let’s perform a duplicates check on bs_wgrids.\n\nduplicate2 &lt;- bs_wgrids %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nduplicate2\n\n# A tibble: 8 × 5\n  BUS_STOP_N BUS_ROOF_N LOC_DESC             grid_id busstops\n  &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;                  &lt;int&gt;    &lt;int&gt;\n1 43709      B06        BLK 644                 1904        7\n2 43709      B06        BLK 644                 1904        7\n3 58031      UNK        OPP CANBERRA DR         2939        7\n4 58031      UNK        OPP CANBERRA DR         2939        7\n5 51071      B21        MACRITCHIE RESERVOIR    3081        6\n6 51071      B21        MACRITCHIE RESERVOIR    3081        6\n7 97079      B14        OPP ST. JOHN'S CRES     5037        5\n8 97079      B14        OPP ST. JOHN'S CRES     5037        5\n\n\nResults displayed 4 genuine duplicated records. We remove these to prevent double-counting.\nThe code chunk below helps retain unique records.\n\nbs_wgrids &lt;- unique(bs_wgrids)\n\n\n\n(c) Populate PeakPeriods with Grid Details\nWe can now append the grid ID from bs_wgrids data frame onto peakperiods_wide data frame. Recall we previously identified 5 bus stops outside Singapore, filter() allows us to exclude the 5 outside Singapore.\n\norigin_grid &lt;- left_join(peakperiods_wider, bs_wgrids,\n            by = c(\"ORIGIN_PT_CODE\" = \"BUS_STOP_N\")) %&gt;% \n  rename(ORIGIN_BS = ORIGIN_PT_CODE) %&gt;% \n  group_by(grid_id) %&gt;% \n  # retains SG bus stops\n  filter(!ORIGIN_BS %in% c(46239, 46609, 47701, 46211, 46219))\n\nglimpse(origin_grid)\n\nRows: 5,076\nColumns: 13\nGroups: grid_id [1,504]\n$ ORIGIN_BS  &lt;chr&gt; \"01012\", \"01013\", \"01019\", \"01029\", \"01039\", \"01059\", \"0110…\n$ WDA        &lt;dbl&gt; 8448, 7328, 3608, 9317, 12937, 2133, 322, 45010, 27233, 932…\n$ WDM        &lt;dbl&gt; 1973, 952, 1789, 2561, 2938, 1651, 161, 8492, 9015, 4240, 5…\n$ WEE        &lt;dbl&gt; 3208, 2796, 1623, 4244, 7403, 1190, 88, 21706, 11927, 6221,…\n$ WEM        &lt;dbl&gt; 2273, 1697, 1511, 3272, 5424, 1062, 89, 14964, 8278, 6198, …\n$ logWDM     &lt;dbl&gt; 7.587311, 6.858565, 7.489412, 7.848153, 7.985484, 7.409136,…\n$ logWDA     &lt;dbl&gt; 9.041685, 8.899458, 8.190909, 9.139596, 9.467847, 7.665285,…\n$ logWEM     &lt;dbl&gt; 7.728856, 7.436617, 7.320527, 8.093157, 8.598589, 6.967909,…\n$ logWEE     &lt;dbl&gt; 8.073403, 7.935945, 7.392032, 8.353261, 8.909641, 7.081709,…\n$ BUS_ROOF_N &lt;chr&gt; \"B03\", \"B05\", \"B04\", \"B07\", \"B09\", \"B08\", \"TMNL\", \"B07\", \"B…\n$ LOC_DESC   &lt;chr&gt; \"HOTEL GRAND PACIFIC\", \"ST JOSEPH'S CH\", \"BRAS BASAH CPLX\",…\n$ grid_id    &lt;int&gt; 3292, 3292, 3292, 3323, 3354, 3324, 3324, 3292, 3324, 3292,…\n$ busstops   &lt;int&gt; 8, 8, 8, 7, 8, 7, 7, 8, 7, 8, 7, 7, 8, 7, 7, 7, 7, 7, 7, 7,…\n\n\n\n\n(d) Retrieve Geometry\n\norigin_gridwgeom &lt;- inner_join(hexagon_w_busstops,\n                               origin_grid, \n                           by = \"grid_id\")\n#origin_gridwgeom &lt;- st_as_sf(origin_gridwgeom)\n\n\n\n\n\n\n\nImportant\n\n\n\nIn order to retain the geospatial properties, the left data frame must the sf data.frame (i.e. hexagon_w_busstop)."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/Take-Home_Ex1.html#data-classification",
    "href": "Take-Home_Ex/Take-Home_Ex1/Take-Home_Ex1.html#data-classification",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "4.1 Data Classification",
    "text": "4.1 Data Classification\nDifferent classification schemes highlight areas with the highest and/or lowest values, while others create classes that result in a more uniform distribution of colors. When data is sharply skewed or has extreme outliers, it’s important to consider whether the goal is to emphasize those areas or to achieve a more even distribution of colors and sizes.\nThe main methods of data classification are: - Quantile: each class contains an equal number of features. It assigns the same number of data values to each class. There are no empty classes or classes with too few or too many values - Jenks/Natural breaks: seeks clumps of values that are clustered together in order to form categories that may reflect meaningful groupings of areas - Equal: divides the range of attribute values into equal-sized sub-ranges\nSince our variable is less skewed after log transformation, we can explore various classification methods for visualization. This approach may reveal interesting insights that were not immediately apparent before."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/Take-Home_Ex1.html#plots",
    "href": "Take-Home_Ex/Take-Home_Ex1/Take-Home_Ex1.html#plots",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "4.2 Plots",
    "text": "4.2 Plots\n\n4.2.1 Weekday Morning Peak Period\n\nQuantileEqual IntervalsJenk’s\n\n\n\n\nShow the code\ntmap_mode (\"view\")\n\nplotlogWDM_q &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWDM\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\")\n\nplotlogWDM_q\n\n\n\n\n\n\n\nThe grids above are partitioned using the quantile intervals. We can observe that the bus trips are unevenly distributed across Singapore. There are lighter shares of blue (indicating lower levels of ridership) originating from the edges of the country, particularly in the West, while higher levels of ridership in the North region are indicated by the darker shades of blue.\nBus stops nearer to the residential estates appeared to be popular during the weekday morning peak period:\n\nWest: BLK 821, BLK 252, Sunshine Place\nNorth: BLK 314\nNorth-East: BLK 477A, BLK 1, BLK 555, BLK 324\nEast: BLK 109, BLK 124, BLK 756\n\nThis is likely due to a large number of people commuting from home to their workplaces/schools on weekday mornings.\nHigher passenger traffic were noted at the bus stops nearer to MRT stations such as Harbourfront Station, Farrer Road Station, Yio Chu Kang Station, and Admirality Station. A possible contributing factor could be the people who are transiting from taking the MRTs to buses to get to their destinations.\nLastly, Woodlands Checkpoint also demonstrated higher ridership. This could potentially be due to the people commuting across the causeway from Malaysia into the Singapore borders.\n\n\n\n\nShow the code\ntmap_mode (\"view\")\nplotlogWDM_e &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWDM\", \n          style = \"equal\", \n          palette = \"Blues\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\")\n  \nplotlogWDM_e\n\n\n\n\n\n\n\nThe map using equal intervals provided slightly different insights. We noted that the bus stop located near to MRT stations had higher levels of ridership. In particular, more trips originated from Tiong Bahru Station, Buona Vista Station, Tanah Merah Station, Admiralty Station, Harbourfront, and Woodleigh Station. Bus interchanges also appeared to be popular origins, i.e. Bukit Panjang Interchange and Joo Koon Interchange.\nIn general, more homogeneity is noted using the equal interval – the contrast between hexagon to hexagon is less obvious.\n\n\n\n\nShow the code\ntmap_mode (\"view\")\nplotlogWDM_j &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWDM\", \n          style = \"jenks\", \n          palette = \"Blues\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\")\n  \nplotlogWDM_j\n\n\n\n\n\n\n\nUsing Jenk’s partitioning method, the results were largely similar to the other two types of interval classes. Higher bus ridership were spotted at bus stops within close proximity to MRT stations (Kranji Station, Buona Vista Station, Buangkok Station, Ranggung Station, Farrer Road Station, Stevens Station, Bedok Reservoir Station) and residential estates (Sunshine Place near Tengah, BLK 109 in Bedok, BLK 477A in Sengkang, Bef. BLK 629A in Woodlands, to name a few).\n\n\n\n\n\n4.2.2 Weekday Afternoon Peak Period\n\nQuantileEqual IntervalsJenk’s\n\n\n\n\nShow the code\ntmap_mode (\"view\")\nplotlogWDA_q &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWDA\", \n          style = \"quantile\", \n          palette = \"Reds\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\")\n  \nplotlogWDA_q\n\n\n\n\n\n\n\nA look at the weekday afternoon ridership using the quantile classification yielded the following insights.\n\nRidership from Woodlands Checkpoint remained high.\nBus stops in close proximity to MRT tations and popular bus stops in residential estatements remained high.\nMore trips originating from institutional areas: Opposite Ngee Ann Poly, Temasek Poly, NIE BLK 2, School of the Arts\nMore trips originating from industrial buildings/business parks: North Link Bldg, Aft Senoko Way, Mapletree Business City, Woodlands Auto Hub, Opp Airline Hse, etc.\nMore trips originating from hospitals: Yishun Community Hospital, Changi General Hospital\nSeletar Camp also looked to have high passenger levels\nThe far West seemed to experience low ridership other than the bus stop opposite Tuas Link Station.\nSouthern part of Singapore, consisting of more commercial areas, appeared to be more clustered as illustrated by the density of the darker red hexagons, compared to the weekday morning peak period.\n\n\n\n\n\nShow the code\ntmap_mode (\"view\")\nplotlogWDA_e &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWDA\", \n          style = \"equal\", \n          palette = \"Reds\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\")\n  \nplotlogWDA_e\n\n\n\n\n\n\n\nNotably, there were higher concentration of passengers who boarded the bus at Serangoon Station, Harbourfront/VivoCity, Tiong Bahru Station, Admiralty Station, and Punggol Station during weekday afternoons according to the equal interval classification method.\nSimilar to the map for weekday morning peak period, the equal interval seemed to produce more homogeneous classifications.\n\n\n\n\nShow the code\ntmap_mode (\"view\")\nplotlogWDA_j &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWDA\", \n          style = \"jenks\", \n          palette = \"Reds\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\")\n  \nplotlogWDA_j\n\n\n\n\n\n\n\nJenk’s classification delivered similar insights to the quantile classification, where the higher concentration of ridership can be observed in the Southern downtown areas.\nIt also highlighted Opp Airline Hse in the far East as a bus stop with high ridership, something not as visible using the equal interval method.\nAlternative methods of commute might be more popular in the West and North-West regions illustrated by the lighter shades of red hexagons.\n\n\n\n\n\n4.2.3 Weekend/Holiday Morning Peak Period\n\nQuantileEqual IntervalsJenk’s\n\n\n\n\nShow the code\ntmap_mode (\"view\")\nplotlogWEM_q &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWEM\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\")\n  \nplotlogWEM_q\n\n\n\n\n\n\n\nGenerally, the distribution of bus ridership looks varied across the island.\nDuring the weekend/holiday peak period, the ridership for far West region remained relatively low. Interestingly, the bus trips recorded from Seletar area appeared to have dipped compared to the weekday peak periods. Buses in these industrial areas could be oriented towards work-related travel, thus less common on weekends.\nBus stops nearer to housing estates, shopping malls, and Woodlands Checkpoint demonstrated higher levels of weekend morning ridership.\nThe bus stops with the highest boarding passengers are Sunshine Place, Opp BLK 271, BLK 252, Aft. Hasanah Mosque, Buona Vista Station, Harbourfront/Vivocity, Admiralty Station, BLK 555, Bedok Reservoir Station, BLK 22, BLK 109.\n\n\n\n\nShow the code\ntmap_mode (\"view\")\nplotlogWEM_e &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWEM\", \n          style = \"equal\", \n          palette = \"Blues\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\")\n  \nplotlogWEM_e\n\n\n\n\n\n\n\nEqual interval classification highlighted the following bus stops to have the highest ridership during weekend/holiday morning peak period: Harbourfront/Vivocity, Tiong Bahru Station, Orchard Station/Lucky Plaza, Admirality Station, Aft. Punggol Road.\n\n\n\n\nShow the code\ntmap_mode (\"view\")\nplotlogWEM_j &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWEM\", \n          style = \"jenks\", \n          palette = \"Blues\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\")\n  \nplotlogWEM_j\n\n\n\n\n\n\n\nThe findings noted with Jenk’s method are similar to the quantile classification.\n\n\n\n\n\n4.2.4 Weekend/Holiday Evening\n\nQuantileEqual IntervalsJenk’s\n\n\n\n\nShow the code\ntmap_mode (\"view\")\nplotlogWEE_q &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWEE\", \n          style = \"quantile\", \n          palette = \"Reds\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\")\n  \nplotlogWEE_q\n\n\n\n\n\n\n\nOn weekend/holiday evenings, there seemed to be increased ridership at the bus stops near Changi Airport compared to the other peak periods.\nSunshine Plaza remains one of the most frequented bus stops, exhibiting high ridership across all four peak periods. While the exact reason for this is difficult to pinpoint, it’s possible that the buses stopping here connect to a wide variety of regions, which could explain the high ridership.\nWoodlands Checkpoint also demonstrated high levels of ridership across the different peak periods.\nVisually, it looks like there are more bus stops with high ridership across Singapore during the weekend/holiday evening peak period. For example, there seem to be an increase in passenger volume at the Tanah Merah Ferry compared to the other peak periods.\n\n\n\n\nShow the code\ntmap_mode (\"view\")\nplotlogWEE_e &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWEE\", \n          style = \"equal\", \n          palette = \"Reds\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\")\n  \nplotlogWEE_e\n\n\n\n\n\n\n\nThe bus stops with higher traffic seem to be quite consistent across the different peak periods. This includes Woodlands Checkpoint, Kranji Station, Admiralty Station, Serangoon Station, Aft. Punggol Road, Bukit Panjang MRT, Yio Chu Kang Interchange.\n\n\n\n\nShow the code\ntmap_mode (\"view\")\nplotlogWEE_j &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWEE\", \n          style = \"jenks\", \n          palette = \"Reds\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\")\n  \nplotlogWEE_j\n\n\n\n\n\n\n\nThe findings noted with Jenk’s method are similar to the quantile classification."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/Take-Home_Ex1.html#global-spatial-autocorrelation",
    "href": "Take-Home_Ex/Take-Home_Ex1/Take-Home_Ex1.html#global-spatial-autocorrelation",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "5.1 Global Spatial Autocorrelation",
    "text": "5.1 Global Spatial Autocorrelation\n\n5.1.1 Spatial Weights Matrix\nTo compute the local spatial autocorrelation statistics, we first need to construct a spatial weights of Singapore. Spatial relationships are multi-directional and multi-lateral. We can use spatial weights to define who the neighbours of the spatial units.\nThere are two common methods of spatial weights: contiguity-based and distance-based.\nContiguity-based: Neighbours share a common boundary, which can be further distinguished between a Rook and a Queen criterion of contiguity. Rook contiguity defines neighbours by the existence of a common edge between two spatial units. In Queen contiguity defines neighbours as spatial units sharing a common edge or a common vertex.\nDistance-based: Assign higher weights to pairs of locations that are closer to each other and lower weights to pairs that are further. This can be further distinguished by fixed weighting, adaptive weighting and inverse-distance weighting schemes. Fixed weighting scheme considers two regions are neighbours if they are within a specified distance from one another. For adaptive weighting scheme, each region will have the same number of neighbours. The number of neighbour is specified beforehand, where k = number of neighbours. Inverse distance method considers that the closer two features are in space, the more likely they are to interact/influence each other.\nFor this study, we will be using distance-based weight matrix as there are areas where bus stops are sparse (such as Lim Chu Kang and Mandai) and isolated (for example, Tanah Merah Ferry, Changi Naval Base, Resort World Sentosa, Marina Bay Cruise Centre). Consequently, contiguity-based matrix may yield many regions with no neighbours, making it not suitable for our analysis.\n\nFixed Distance Weight MatrixAdaptive Distance-Based Weight MatrixInverse Distance Weights (IDW)\n\n\n\nStep 1: Determine Cut-Off Distance Limit\nFirst step is to determine the upper distance limit to ensure that each hexagon has at least 1 neighbour.\nThe following functions can be used:\n\nst_knn() of sfdep is used to identify neighbors based on k (e.g. k = 8 indicates the nearest eight neighbours). The output is a neighbours list of class nb. If polygon geometry is provided, the centroids of the polygon will be used for calculation.\nst_nb_dists() of sfdep is used to calculate the nearest neighbour distance. The output is a list of distances for each observation’s neighbors list.\nunlist() of Base R is then used to return the output as a vector so that the summary statistics of the nearest neighbour distances can be derived.\n\n\ngeo &lt;- sf::st_geometry(origin_gridwgeom)\nnb &lt;- st_knn(geo, \n             longlat = TRUE)\ndists &lt;- unlist(st_nb_dists(geo, nb))\n\n\n\nStep 2: Derive Summary Stats\nWe can derive summary statistics of the nearest neighbour distances vector (i.e. dists) by using the code chunk below.\n\nsummary(dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    0.00   22.89    0.00 1000.00 \n\n\nThe maximum nearest neighbour distance is 1000m, thus we will use threshold value of 1001m to ensure each spatial unit has a minimum of 1 neighbour.\n\n\nStep 3: Compute fixed distance weight\nNow we will go ahead to compute the fixed distance weights by using following functions:\nst_dists_band() of sfdep is used to identify neighbors based on a distance band (i.e. 1000m). The output is a list of neighbours (i.e. nb). st_weights() is then used to calculate polygon spatial weights of the nb list. Note that the default style argument is set to “W” for row standardized weights, and the default allow_zero is set to TRUE, assigns zero as lagged value to zone without neighbors.\n\nwm_fd &lt;- origin_gridwgeom %&gt;%\n  mutate(nb = st_dist_band(geo,\n                           upper = 1001),\n               wt = st_weights(nb),\n               .before = 1)\n\n\n\nStep 4: Observations\n\n\nShow the code\n#kable(head(wm_fd,5))\nsummary(wm_fd$nb)\n\n\nNeighbour list object:\nNumber of regions: 5022 \nNumber of nonzero links: 266698 \nPercentage nonzero weights: 1.057466 \nAverage number of links: 53.10593 \nLink number distribution:\n\n  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20 \n  3   6   3   4   7   6  20  19  20  13  24  13  21  29  20  35  28  40  34  40 \n 21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40 \n 24  52  45  33  39  48  26  44  31  30  31  52  48  39  35  55  48  49  83  55 \n 41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60 \n 74  67  59  73  76  83  96  81  59  53 101 136  87 117 101  84 111  79 134 127 \n 61  62  63  64  65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80 \n114 150  96 113 103 103 106  81  94 107  61  73  92  55  41  64  61  73  42  31 \n 81  82  83  84  85  86  87  88  89  90  92  93  94  95  96  97  98  99 100 102 \n 40  32   9  30  30  26   9  19  14  21   6   9  12  15   8   4   4   6  13   5 \n3 least connected regions:\n2274 5021 5022 with 1 link\n5 most connected regions:\n3699 3700 3701 3702 3703 with 102 links\n\n\nFrom the result above, we can confirm that all hexagons have at least one neighbour and there are 5 hexagons with 102 neighbours. We can also identify an average of 53 neighbours per hexagon using the distance-based weight matrix.\n\n\n\nA characteristic of fixed distance weights matrix is that more densely settled areas (town, residential neighbourhoods) tend to have more neigbours while less densely settle areas (military camps, industrial estates) tend to have less neighbours. To overcome the issue of fixed distance weight matrix where there is uneven distribution of neighbours, we can directly control the number of neighbours using k-nearest neighbours by setting the value of k in the code chunk below.\nAs a rule-of-thumb, we will set k = 8 i.e., all hexagons will have 8 neighbours.\n\nwm_ad &lt;- origin_gridwgeom %&gt;% \n  mutate(nb = st_knn(geo,\n                     k=8),\n         wt = st_weights(nb),\n               .before = 1)\n\nhead(wm_ad, n=3)\n\nSimple feature collection with 3 features and 16 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3720.122 ymin: 27925.48 xmax: 4720.122 ymax: 31100.9\nProjected CRS: SVY21 / Singapore TM\n                           nb\n1  2, 4, 5, 9, 10, 15, 32, 33\n2  1, 4, 5, 9, 10, 15, 32, 33\n3 5, 6, 7, 11, 12, 16, 17, 18\n                                                      wt grid_id busstops.x\n1 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125      34          1\n2 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125      65          1\n3 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125      99          1\n  ORIGIN_BS WDA WDM WEE WEM   logWDM   logWDA   logWEM   logWEE BUS_ROOF_N\n1     25059 417  62  65   5 4.127134 6.033086 1.609438 4.174387        UNK\n2     25751 110  50  26  24 3.912023 4.700480 3.178054 3.258097       B02D\n3     26379 249  44  54  27 3.784190 5.517453 3.295837 3.988984        NIL\n             LOC_DESC busstops.y              area_hexagon_grid\n1   AFT TUAS STH BLVD          1 POLYGON ((3970.122 27925.48...\n2 BEF TUAS STH AVE 14          1 POLYGON ((4220.122 28358.49...\n3            YONG NAM          1 POLYGON ((4470.122 30523.55...\n\n\nThe results show that the weights of the neighbours have been assigned to 1/8 (0.125) of the total weight, representing each of the 8 neighbours.\n\n\nInverse distance weights takes into account the decay functions of distance.\nWe can derive spatial weight matrix based on inverse distance method using the following functions:\n\nst_contiguity() of sfdep is used to identify the neighbours by using contiguity criteria. The output is a list of neighbours (i.e. nb).\nst_inverse_distance() is then used to calculate inverse distance weights of neighbours on the nb list.\n\n\nwm_idw &lt;- origin_gridwgeom %&gt;%\n  mutate(nb = st_contiguity(geo),\n         wts = st_inverse_distance(nb, geo,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\nsummary(wm_idw$nb)\n\nNeighbour list object:\nNumber of regions: 5022 \nNumber of nonzero links: 107808 \nPercentage nonzero weights: 0.4274621 \nAverage number of links: 21.46714 \n6 regions with no links:\n1750 2274 3159 4675 4989 4994\nLink number distribution:\n\n  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19 \n  6  12  17  33  23  97  70  99  88  76 115 136 126 133 130 160 168 227 197 169 \n 20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39 \n159 174 251 240 213 195 222 210 183 187 124 115 104 110 111  39  54  56  11  17 \n 40  41  42  43  44  48 \n 55  62  13  17  10   8 \n12 least connected regions:\n1 32 62 736 3354 3355 4982 4990 5002 5003 5021 5022 with 1 link\n8 most connected regions:\n3048 3049 3050 3051 3052 3053 3054 3055 with 48 links\n\n\nUsing the inverse distance method resulted in 6 regions with no neighbours, this could be due to the spatial isolation of certain hexagons.\n\n\n\nIn summary:\n\nThe number of neighbours using fixed distance method vary widely from 1 to 102. Consequently, the uneven distribution could affect the spatial autocorrelation analysis.\nInverse distance method led to regions with no neighbours and is computationally intensive as each neighbour\nSince each hexagon is equally sized, the adaptive distance-based spatial weight matrix would be best suited for our analysis since each centroid can represent each region well.\n\n\ncentroid &lt;- st_centroid(origin_gridwgeom)\nplot(origin_gridwgeom$area_hexagon_grid, border = \"lightgrey\")\n\n\n\n#plot(wm_idw, centroid, pch = 19, cex = 0.1, add = TRUE, col = \"red\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/Take-Home_Ex1.html#computing-global-spatial-autocorrelation-statistics",
    "href": "Take-Home_Ex/Take-Home_Ex1/Take-Home_Ex1.html#computing-global-spatial-autocorrelation-statistics",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "5.2 Computing Global Spatial Autocorrelation Statistics",
    "text": "5.2 Computing Global Spatial Autocorrelation Statistics\n\n5.2.1 Moran’s I\nWe will perform Moran’s I statistical testing by using global_moran_perm() of spdep. The Global Moran’s I Permutation Test is a statistical method used in spatial analysis to assess the significance of spatial autocorrelation in a dataset. Spatial autocorrelation refers to the degree to which a variable is correlated with itself across space, indicating patterns such as clustering or dispersion.\n\n\n\n\n\n\nInterpretation of Moran’s I\n\n\n\n\n\nThe Moran I statistic ranges from -1 to 1. If the Moran I is:\n\npositive (I&gt;0): Clustered, observations tend to be similar\nnegative (I&lt;0): Disperse, observations tend to be dissimilar\napproximately zero: observations arranged randomly over space\n\n\n\n\nThe code chunk below performs Moran’s I statistical testing, using the null and alternative hypotheses as follows:\nH0: The observed spatial patterns of proportion of bus ridership in Singapore are not clustered (i.e. either random or dispersed). H1: The observed spatial patterns of proportion of bus ridership in Singapore are clustered.\nA total of 100 simulations will be performed with a seed number 1234. set.seed() function allows us to create reproducible results.\nNote: nsim arugment of global_moran_perm() refers to the number of simulations is nsim + 1, i.e., for nsim = 99, 100 simulations will be performed.\n\nset.seed(1234)\n\n\nWeekday MorningWeekday AfternoonWeekend/Holiday MorningWeekend/Holiday Evening\n\n\n\n\nShow the code\ngmp_WDM &lt;- global_moran_perm(wm_ad$WDM,\n                  wm_ad$nb,\n                  wm_ad$wt,\n                  nsim = 99)\ngmp_WDM\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.094609, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\n\n\n\nShow the code\ngmp_WDA &lt;- global_moran_perm(wm_ad$WDA,\n                  wm_ad$nb,\n                  wm_ad$wt,\n                  nsim = 99)\ngmp_WDA\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.063584, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\n\n\n\nShow the code\ngmp_WEM &lt;- global_moran_perm(wm_ad$WEM,\n                  wm_ad$nb,\n                  wm_ad$wt,\n                  nsim = 99)\ngmp_WEM\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.095565, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\n\n\n\nShow the code\ngmp_WEE &lt;- global_moran_perm(wm_ad$WEE,\n                  wm_ad$nb,\n                  wm_ad$wt,\n                  nsim = 99)\ngmp_WEE\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.083812, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\n\n\nAcross the 4 peak periods, the permutation test generated low p-values of &lt;0.05. This indicates that we can reject the null hypothesis at the 95% level of confidence, and conclude that for each of the 4 peak periods, the overall bus ridership across Singapore is spatially clustered (since positive Moran’s I value is obtained).\n\n\n5.2.2 Geary’s C\n\n\n5.2.3 Spatial Correlogram"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/Take-Home_Ex1.html#local-spatial-autocorrelation-statistics",
    "href": "Take-Home_Ex/Take-Home_Ex1/Take-Home_Ex1.html#local-spatial-autocorrelation-statistics",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "5.3 Local Spatial Autocorrelation Statistics",
    "text": "5.3 Local Spatial Autocorrelation Statistics\nGlobal spatial autocorrelation provides a broad overview of spatial clustering within a dataset, offering a single value that indicates whether similar values are generally clustered or dispersed across the entire study area. In contrast, local spatial autocorrelation delves into specific locations, identifying where clusters of similar values (hot spots or cold spots) or spatial outliers exist. While global metrics give an overall trend, local metrics provide detailed, location-specific insights, highlighting exact areas of significant spatial clustering or anomaly.\nThus, after we have established through statistical testing that spatial clustering of bus ridership occurs in Singapore, we now seek to detect clusters or outliers and discover if there are any hot or cold spots of high ridership using Local Spatial Autocorrelation Statistics.\n\n5.2.1 Local Moran’s I\nIn this section, we will perform Moran’s I statistics testing by using local_moran() of sfdep. The output of local_moran() is a sf data.frame, containing the columns below:\n\nii: local moran statistic\neii: expectation of local Moran’s I statistic\nvar_ii: variance of local Moran’s I statistic\nz_ii: standard deviation of local Moran’s I statistic\np_ii: p-value of local Moran’s I statistic using pnorm()\np_ii_sim: For localmoran_perm(), rank() and punif() of observed statistic rank for [0, 1] p-values using alternative=\np_folded_sim: the simulation folded [0, 0.5] range ranked p-value, based on crand.py of pysal\nskewness: For localmoran_perm, the output of e1071::skewness() for the permutation samples underlying the standard deviates\nkurtosis: For localmoran_perm, the output of e1071::kurtosis() for the permutation samples underlying the standard deviates.\n\nunnest() of tidyr package helps expand a list-column containing data frames into rows and columns.\n\nWeekday MorningWeekday AfternoonWeekend/Holiday MorningWeekend/Holiday Evening\n\n\n\n\nShow the code\nlisa_WDM &lt;- wm_ad %&gt;% \n  mutate(local_moran = local_moran(\n    origin_gridwgeom$WDM, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\nhead(lisa_WDM, n=5)\n\n\nSimple feature collection with 5 features and 28 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3720.122 ymin: 27925.48 xmax: 4970.122 ymax: 31100.9\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 5 × 29\n     ii      eii var_ii  z_ii  p_ii p_ii_sim p_folded_sim skewness kurtosis\n  &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 0.190  0.00735 0.0204 1.28  0.201     0.02         0.01    -2.55     8.37\n2 0.190 -0.0100  0.0433 0.962 0.336     0.02         0.01    -5.72    42.9 \n3 0.186  0.00312 0.0459 0.853 0.394     0.02         0.01    -6.21    49.1 \n4 0.181  0.0166  0.0142 1.38  0.167     0.02         0.01    -2.06     5.79\n5 0.167  0.00919 0.0118 1.45  0.147     0.02         0.01    -2.18     7.71\n# ℹ 20 more variables: mean &lt;fct&gt;, median &lt;fct&gt;, pysal &lt;fct&gt;, nb &lt;nb&gt;,\n#   wt &lt;list&gt;, grid_id &lt;int&gt;, busstops.x &lt;int&gt;, ORIGIN_BS &lt;chr&gt;, WDA &lt;dbl&gt;,\n#   WDM &lt;dbl&gt;, WEE &lt;dbl&gt;, WEM &lt;dbl&gt;, logWDM &lt;dbl&gt;, logWDA &lt;dbl&gt;, logWEM &lt;dbl&gt;,\n#   logWEE &lt;dbl&gt;, BUS_ROOF_N &lt;chr&gt;, LOC_DESC &lt;chr&gt;, busstops.y &lt;int&gt;,\n#   area_hexagon_grid &lt;POLYGON [m]&gt;\n\n\n\n\n\nlisa_WDA &lt;- wm_ad %&gt;% \n  mutate(local_moran = local_moran(\n    origin_gridwgeom$WDA, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\nhead(lisa_WDA, n=5)\n\nSimple feature collection with 5 features and 28 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3720.122 ymin: 27925.48 xmax: 4970.122 ymax: 31100.9\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 5 × 29\n      ii     eii   var_ii  z_ii  p_ii p_ii_sim p_folded_sim skewness kurtosis\n   &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 0.0752 0.00345 0.00381  1.16  0.245     0.02         0.01    -1.92     4.44\n2 0.0795 0.00807 0.00673  0.870 0.384     0.04         0.02    -3.02    10.4 \n3 0.0734 0.00141 0.00811  0.799 0.424     0.08         0.04    -2.87     9.31\n4 0.0567 0.0145  0.00114  1.25  0.212     0.02         0.01    -3.00    12.6 \n5 0.0415 0.00794 0.000767 1.21  0.225     0.02         0.01    -2.80    11.0 \n# ℹ 20 more variables: mean &lt;fct&gt;, median &lt;fct&gt;, pysal &lt;fct&gt;, nb &lt;nb&gt;,\n#   wt &lt;list&gt;, grid_id &lt;int&gt;, busstops.x &lt;int&gt;, ORIGIN_BS &lt;chr&gt;, WDA &lt;dbl&gt;,\n#   WDM &lt;dbl&gt;, WEE &lt;dbl&gt;, WEM &lt;dbl&gt;, logWDM &lt;dbl&gt;, logWDA &lt;dbl&gt;, logWEM &lt;dbl&gt;,\n#   logWEE &lt;dbl&gt;, BUS_ROOF_N &lt;chr&gt;, LOC_DESC &lt;chr&gt;, busstops.y &lt;int&gt;,\n#   area_hexagon_grid &lt;POLYGON [m]&gt;\n\n\n\n\n\nlisa_WEM &lt;- wm_ad %&gt;% \n  mutate(local_moran = local_moran(\n    origin_gridwgeom$WEM, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\nhead(lisa_WEM, n=5)\n\nSimple feature collection with 5 features and 28 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3720.122 ymin: 27925.48 xmax: 4970.122 ymax: 31100.9\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 5 × 29\n     ii       eii  var_ii  z_ii  p_ii p_ii_sim p_folded_sim skewness kurtosis\n  &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 0.143  0.000449 0.0154  1.15  0.252     0.04         0.02   -2.77     8.66 \n2 0.141  0.0126   0.00812 1.43  0.154     0.06         0.03   -0.884    0.201\n3 0.130 -0.0145   0.0446  0.684 0.494     0.02         0.01   -3.95    18.0  \n4 0.124  0.00189  0.0111  1.16  0.247     0.04         0.02   -2.96    11.3  \n5 0.115 -0.00534  0.0161  0.948 0.343     0.02         0.01   -5.03    33.2  \n# ℹ 20 more variables: mean &lt;fct&gt;, median &lt;fct&gt;, pysal &lt;fct&gt;, nb &lt;nb&gt;,\n#   wt &lt;list&gt;, grid_id &lt;int&gt;, busstops.x &lt;int&gt;, ORIGIN_BS &lt;chr&gt;, WDA &lt;dbl&gt;,\n#   WDM &lt;dbl&gt;, WEE &lt;dbl&gt;, WEM &lt;dbl&gt;, logWDM &lt;dbl&gt;, logWDA &lt;dbl&gt;, logWEM &lt;dbl&gt;,\n#   logWEE &lt;dbl&gt;, BUS_ROOF_N &lt;chr&gt;, LOC_DESC &lt;chr&gt;, busstops.y &lt;int&gt;,\n#   area_hexagon_grid &lt;POLYGON [m]&gt;\n\n\n\n\n\nlisa_WEE &lt;- wm_ad %&gt;% \n  mutate(local_moran = local_moran(\n    origin_gridwgeom$WEE, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\nhead(lisa_WEE, n=5)\n\nSimple feature collection with 5 features and 28 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3720.122 ymin: 27925.48 xmax: 4970.122 ymax: 31100.9\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 5 × 29\n      ii       eii  var_ii  z_ii  p_ii p_ii_sim p_folded_sim skewness kurtosis\n   &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 0.0904 -0.0160   0.0277  0.639 0.523     0.04         0.02    -4.96    27.3 \n2 0.0924 -0.00619  0.0143  0.824 0.410     0.02         0.01    -2.83     8.51\n3 0.0809  0.00535  0.00947 0.777 0.437     0.14         0.07    -2.66     7.65\n4 0.0756  0.000552 0.00974 0.760 0.447     0.02         0.01    -4.97    30.6 \n5 0.0637  0.000789 0.00272 1.20  0.228     0.04         0.02    -2.01     4.58\n# ℹ 20 more variables: mean &lt;fct&gt;, median &lt;fct&gt;, pysal &lt;fct&gt;, nb &lt;nb&gt;,\n#   wt &lt;list&gt;, grid_id &lt;int&gt;, busstops.x &lt;int&gt;, ORIGIN_BS &lt;chr&gt;, WDA &lt;dbl&gt;,\n#   WDM &lt;dbl&gt;, WEE &lt;dbl&gt;, WEM &lt;dbl&gt;, logWDM &lt;dbl&gt;, logWDA &lt;dbl&gt;, logWEM &lt;dbl&gt;,\n#   logWEE &lt;dbl&gt;, BUS_ROOF_N &lt;chr&gt;, LOC_DESC &lt;chr&gt;, busstops.y &lt;int&gt;,\n#   area_hexagon_grid &lt;POLYGON [m]&gt;"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/THE1.html#weekday-afternoon-2",
    "href": "Take-Home_Ex/Take-Home_Ex1/THE1.html#weekday-afternoon-2",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "Weekday Afternoon",
    "text": "Weekday Afternoon"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/THE1.html#weekendholiday-morning-2",
    "href": "Take-Home_Ex/Take-Home_Ex1/THE1.html#weekendholiday-morning-2",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "Weekend/Holiday Morning",
    "text": "Weekend/Holiday Morning"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/THE1.html#weekendholiday-evening-3",
    "href": "Take-Home_Ex/Take-Home_Ex1/THE1.html#weekendholiday-evening-3",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "Weekend/Holiday Evening",
    "text": "Weekend/Holiday Evening"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/THE1.html#visualising-bus-ridership",
    "href": "Take-Home_Ex/Take-Home_Ex1/THE1.html#visualising-bus-ridership",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "4.2 Visualising Bus Ridership",
    "text": "4.2 Visualising Bus Ridership\nWe will visualise the spatial distribution of ridership for each peak period using a choropleth. This is performed using the code chunk below.\n\nWeekday Morning Peak PeriodWeekday Afternoon Peak PeriodWeekend/Holiday Morning Peak PeriodWeekend/Holiday Evening\n\n\n\n\nShow the code\ntmap_mode (\"plot\")\n\nplotlogWDM_q &lt;- \n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWDM\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Total passenger trips\",\n          alpha=0.6) +\n  tm_borders(alpha = 0.5)+\n  tm_layout(main.title=\"Quantile Classification\",\n            main.title.size = 0.7,\n            main.title.position = \"center\",\n            legend.height = 0.35, \n            legend.width = 0.25,\n            frame = FALSE)\n\nplotlogWDM_e &lt;-\n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWDM\", \n          style = \"equal\", \n          palette = \"Blues\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\") +\n  tm_borders(alpha = 0.5)+\n  tm_layout(main.title=\"Equal Interval Classification\",\n            main.title.size = 0.7,\n            main.title.position = \"center\",\n            legend.height = 0.35, \n            legend.width = 0.25,\n            frame = FALSE)\n\nplotlogWDM_j &lt;- \n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWDM\", \n          style = \"jenks\", \n          palette = \"Blues\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\") +\n  tm_borders(alpha = 0.5)+\n  tm_layout(main.title=\"Jenks Classification\",\n            main.title.size = 0.7,\n            main.title.position = \"center\",\n            legend.height = 0.35, \n            legend.width = 0.25,\n            frame = FALSE)\n  \ntmap_arrange(plotlogWDM_q, plotlogWDM_e, plotlogWDM_j, asp=1, ncol=3)\n\n\n\n\n\nThe leftmost map above is partitioned using the quantile intervals. We can observe that the bus trips are unevenly distributed across Singapore. There are lighter shares of blue (indicating lower levels of ridership) originating from the edges of the country, particularly in the West, while higher levels of ridership in the North region are indicated by the darker shades of blue.\nBus stops nearer to the residential estates appeared to be popular during the weekday morning peak period. This is likely due to a large number of people commuting from home to their workplaces/schools on weekday mornings.\nLastly, Woodlands Checkpoint also demonstrated higher ridership. Woodlands Checkpoint is one of Singapore’s two land border checkpoints, facilitating the movement of ground traffic between Singapore and Malaysia. This could potentially be due to the people commuting across the causeway between Malaysia and Singapore.\nThe map using equal intervals had more homogeneity – the contrast between hexagon to hexagon is less obvious. There appears to be more spots of dark blue, indicating more areas with high ridership.\nUsing Jenk’s partitioning method, the results were largely similar to the other two types of interval classes.\n\n\n\n\nShow the code\ntmap_mode (\"plot\")\n\nplotlogWDA_q &lt;- \n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWDA\", \n          style = \"quantile\", \n          palette = \"Reds\",\n          title = \"Total passenger trips\",\n          alpha=0.6) +\n  tm_borders(alpha = 0.5)+\n  tm_layout(main.title=\"Quantile Classification\",\n            main.title.size = 0.7,\n            main.title.position = \"center\",\n            legend.height = 0.35, \n            legend.width = 0.25,\n            frame = FALSE)\n\nplotlogWDA_e &lt;-\n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWDA\", \n          style = \"equal\", \n          palette = \"Reds\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\") +\n  tm_borders(alpha = 0.5)+\n  tm_layout(main.title=\"Equal Interval Classification\",\n            main.title.size = 0.7,\n            main.title.position = \"center\",\n            legend.height = 0.35, \n            legend.width = 0.25,\n            frame = FALSE)\n\nplotlogWDA_j &lt;- \n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWDA\", \n          style = \"jenks\", \n          palette = \"Reds\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\") +\n  tm_borders(alpha = 0.5)+\n  tm_layout(main.title=\"Jenks Classification\",\n            main.title.size = 0.7,\n            main.title.position = \"center\",\n            legend.height = 0.35, \n            legend.width = 0.25,\n            frame = FALSE)\n  \ntmap_arrange(plotlogWDA_q, plotlogWDA_e, plotlogWDA_j, asp=1, ncol=3)\n\n\n\n\n\nA look at the weekday afternoon ridership using the quantile classification yielded the following insights.\n\nRidership from Woodlands Checkpoint remained high.\nMore trips originating from industrial/business parks: Mapletree Business City, Woodlands Auto Hub, Opp Airline Hse, etc.\nSeletar Camp also looked to have high passenger levels\nSouthern part of Singapore, consisting of more commercial areas, appeared to be more clustered as illustrated by the density of the darker red hexagons, compared to the weekday morning peak period.\n\nUsing the Equal Interval classification, there were notably higher concentration of passengers trips across the island, producing more homogeneous classifications.\nJenk’s classification delivered similar insights to the quantile classification, where the higher concentration of ridership can be observed in the Southern downtown areas. It also highlighted Opp Airline Hse in the far East as a bus stop with high ridership, something not as visible using the equal interval method. Alternative methods of commute might be more popular in the West and North-West regions illustrated by the lighter shades of red hexagons.\n\n\n\n\nShow the code\ntmap_mode (\"plot\")\n\nplotlogWEM_q &lt;- \n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWEM\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Total passenger trips\",\n          alpha=0.6) +\n  tm_borders(alpha = 0.5)+\n  tm_layout(main.title=\"Quantile Classification\",\n            main.title.size = 0.7,\n            main.title.position = \"center\",\n            legend.height = 0.35, \n            legend.width = 0.25,\n            frame = FALSE)\n\nplotlogWEM_e &lt;-\n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWEM\", \n          style = \"equal\", \n          palette = \"Blues\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\") +\n  tm_borders(alpha = 0.5)+\n  tm_layout(main.title=\"Equal Interval Classification\",\n            main.title.size = 0.7,\n            main.title.position = \"center\",\n            legend.height = 0.35, \n            legend.width = 0.25,\n            frame = FALSE)\n\nplotlogWEM_j &lt;- \n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWEM\", \n          style = \"jenks\", \n          palette = \"Blues\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\") +\n  tm_borders(alpha = 0.5)+\n  tm_layout(main.title=\"Jenks Classification\",\n            main.title.size = 0.7,\n            main.title.position = \"center\",\n            legend.height = 0.35, \n            legend.width = 0.25,\n            frame = FALSE)\n  \ntmap_arrange(plotlogWEM_q, plotlogWEM_e, plotlogWEM_j, asp=1, ncol=3)\n\n\n\n\n\nGenerally, the distribution of bus ridership looks varied across the island.\nThe map partitioned using the quantile intervals showed that during the weekend/holiday peak period, the ridership for far West region remained relatively low. Interestingly, the bus trips recorded from Seletar area appeared to have dipped compared to the weekday peak periods. This suggests that buses in these industrial areas could be oriented towards work-related travel, thus less common on weekends. Bus stops nearer to housing estates, shopping malls, and Woodlands Checkpoint demonstrated higher levels of weekend morning ridership.\nThe map using interval classification looked more monochromatic, there is less contrast with a more uniform appearance. On the other hand, Jenk’s method identified more hot spots across the island than the other two methods.\n\n\n\n\nShow the code\ntmap_mode (\"plot\")\n\nplotlogWEE_q &lt;- \n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWEE\", \n          style = \"quantile\", \n          palette = \"Reds\",\n          title = \"Total passenger trips\",\n          alpha=0.6) +\n  tm_borders(alpha = 0.5)+\n  tm_layout(main.title=\"Quantile Classification\",\n            main.title.size = 0.7,\n            main.title.position = \"center\",\n            legend.height = 0.35, \n            legend.width = 0.25,\n            frame = FALSE)\n\nplotlogWEE_e &lt;-\n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWEE\", \n          style = \"equal\", \n          palette = \"Reds\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\") +\n  tm_borders(alpha = 0.5)+\n  tm_layout(main.title=\"Equal Interval Classification\",\n            main.title.size = 0.7,\n            main.title.position = \"center\",\n            legend.height = 0.35, \n            legend.width = 0.25,\n            frame = FALSE)\n\nplotlogWEE_j &lt;- \n  tm_shape(origin_gridwgeom) +\n  tm_fill(\"logWEE\", \n          style = \"jenks\", \n          palette = \"Reds\",\n          title = \"Total passenger trips\",\n          alpha=0.6,\n          id=\"LOC_DESC\") +\n  tm_borders(alpha = 0.5)+\n  tm_layout(main.title=\"Jenks Classification\",\n            main.title.size = 0.7,\n            main.title.position = \"center\",\n            legend.height = 0.35, \n            legend.width = 0.25,\n            frame = FALSE)\n  \ntmap_arrange(plotlogWEE_q, plotlogWEE_e, plotlogWEE_j, asp=1, ncol=3)\n\n\n\n\n\nOn weekend/holiday evenings, there seemed to be increased ridership at the bus stops near Changi Airport compared to the other peak periods as witnessed in the first plot using the quantile classification method. Sunshine Plaza remains one of the most frequented bus stops, exhibiting high ridership across all four peak periods. While the exact reason for this is difficult to pinpoint, it’s possible that the buses stopping here connect to a wide variety of regions, which could explain the high ridership. Woodlands Checkpoint also demonstrated high levels of ridership across the different peak periods.\nVisually, it looks like there are more bus stops with high ridership across Singapore during the weekend/holiday evening peak period. For example, there seem to be an increase in passenger volume at the Tanah Merah Ferry compared to the other peak periods.\nUsing the equal interval classification method, the general areas of bus stops with higher traffic seem to be quite consistent across the different peak periods.\nThe Jenk’s method seems to suggest that hot spots are mostly congregated in the core of Singapore, with cold spots along the periphery of Singapore.\n\n\n\nWhile the choropleths were useful for quickly visualizing results, the different plots reveal that varying data classification methods can lead to different findings. To draw objective conclusions, we should supplement our initial findings with geospatial analysis."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex3/In-class_Ex3.html",
    "href": "In-class_Ex/In-class_Ex3/In-class_Ex3.html",
    "title": "In-Class Exercise 3: Processing and Visualising Flow Data",
    "section": "",
    "text": "Notes from Class\n\n\n\n\n\n\nFor THE1:\n\nReproducibility: just need to change first line for another month\nChange chrome limit\nHexagons: bus stops in JB, 1 bus stop @ tip of SG causeway that will be cut off if we use MPSZ.\nHave to select spatial weights for analysis. Diff geo context and config will need to apply diff spatial weights.\n\n\nGravity Model we calculated this in HOE3! - Vi = push factor @ origin (can be 1 variable or multiple variables), Wj = pull factor @ destination, Sij = distance decay\nRetail Model - Bij = propensity / porbability that people will go or not go to a location"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#loading-package",
    "href": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#loading-package",
    "title": "In-Class Exercise 3: Processing and Visualising Flow Data",
    "section": "2.1 Loading Package",
    "text": "2.1 Loading Package\n\npacman::p_load(tmap, sf, sp, DT, \n               performance, reshape2,\n               ggpubr, tidyverse)\n\n\ntmap: thematic maps\nsf: handle geospatial data\nsp: older R package that has been replaced by sf\nDT: data tables\nperformance: statistical models\nreshape2: great grandfather of tidyr, can handle matrix. tidyverse works on data frames and cannot handle matrix well.\nggpubr: used to create multiple plots into 1\ntidyverse: compose of basic R packages for data science work."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#the-data",
    "href": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#the-data",
    "title": "In-Class Exercise 3: Processing and Visualising Flow Data",
    "section": "2.2 The Data",
    "text": "2.2 The Data\n\nGeospatial: mpsz.rds based on BusStop shapefile from LTA, MPSZ\nAspatial:\n\nod_data.rds based on weekday morning peak passenger flows at planning subzone level\npop.csv\n\n\n\nGeospatialAspatial\n\n\n\n#pop &lt;- read_csv(\"data/aspatial/pop.csv\")\n#respopagesex2022 &lt;- read_csv(\"data/aspatial/respopagesex2022.csv\")\n\n\n\nOutput should be saved as rds format\n\nmpsz &lt;- read_rds(\"data/rds/mpsz.rds\")\nmpsz\n\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n                 SUBZONE_N SUBZONE_C       PLN_AREA_N PLN_AREA_C       REGION_N\n1              MARINA EAST    MESZ01      MARINA EAST         ME CENTRAL REGION\n2         INSTITUTION HILL    RVSZ05     RIVER VALLEY         RV CENTRAL REGION\n3           ROBERTSON QUAY    SRSZ01  SINGAPORE RIVER         SR CENTRAL REGION\n4  JURONG ISLAND AND BUKOM    WISZ01  WESTERN ISLANDS         WI    WEST REGION\n5             FORT CANNING    MUSZ02           MUSEUM         MU CENTRAL REGION\n6         MARINA EAST (MP)    MPSZ05    MARINE PARADE         MP CENTRAL REGION\n7                   SUDONG    WISZ03  WESTERN ISLANDS         WI    WEST REGION\n8                  SEMAKAU    WISZ02  WESTERN ISLANDS         WI    WEST REGION\n9           SOUTHERN GROUP    SISZ02 SOUTHERN ISLANDS         SI CENTRAL REGION\n10                 SENTOSA    SISZ01 SOUTHERN ISLANDS         SI CENTRAL REGION\n   REGION_C                       geometry\n1        CR MULTIPOLYGON (((33222.98 29...\n2        CR MULTIPOLYGON (((28481.45 30...\n3        CR MULTIPOLYGON (((28087.34 30...\n4        WR MULTIPOLYGON (((14557.7 304...\n5        CR MULTIPOLYGON (((29542.53 31...\n6        CR MULTIPOLYGON (((35279.55 30...\n7        WR MULTIPOLYGON (((15772.59 21...\n8        WR MULTIPOLYGON (((19843.41 21...\n9        CR MULTIPOLYGON (((30870.53 22...\n10       CR MULTIPOLYGON (((26879.04 26..."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#converting-from-sf-data.table-to-spatialpolygonsdataframe",
    "href": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#converting-from-sf-data.table-to-spatialpolygonsdataframe",
    "title": "In-Class Exercise 3: Processing and Visualising Flow Data",
    "section": "3.1 Converting from sf data.table to SpatialPolygonsDataFrame",
    "text": "3.1 Converting from sf data.table to SpatialPolygonsDataFrame\n\nmpsz_sp &lt;- as(mpsz, \"Spatial\")\nmpsz_sp\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 332 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 6\nnames       : SUBZONE_N, SUBZONE_C, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C \nmin values  : ADMIRALTY,    AMSZ01, ANG MO KIO,         AM, CENTRAL REGION,       CR \nmax values  :    YUNNAN,    YSSZ09,     YISHUN,         YS,    WEST REGION,       WR \n\n# same as:\n# mpsz_sz &lt;- mpsz %&gt;% \n#   as.Spatial()\n\n# to call: mpsz@data$column to pick up values\n\n\n#mpsz_sp_selected &lt;- mpsz_sp %&gt;% \n#  select(mpsz@data$SUBZONE_N)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#computing-the-distance-matrix",
    "href": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#computing-the-distance-matrix",
    "title": "In-Class Exercise 3: Processing and Visualising Flow Data",
    "section": "3.2 Computing the distance matrix",
    "text": "3.2 Computing the distance matrix\n\ndist &lt;- spDists(mpsz_sp, \n                longlat = FALSE)\n\nhead(dist, n=c(10, 10))\n\n           [,1]       [,2]      [,3]      [,4]       [,5]      [,6]      [,7]\n [1,]     0.000  3926.0025  3939.108 20252.964  2989.9839  1431.330 19211.836\n [2,]  3926.003     0.0000   305.737 16513.865   951.8314  5254.066 16242.523\n [3,]  3939.108   305.7370     0.000 16412.062  1045.9088  5299.849 16026.146\n [4,] 20252.964 16513.8648 16412.062     0.000 17450.3044 21665.795  7229.017\n [5,]  2989.984   951.8314  1045.909 17450.304     0.0000  4303.232 17020.916\n [6,]  1431.330  5254.0664  5299.849 21665.795  4303.2323     0.000 20617.082\n [7,] 19211.836 16242.5230 16026.146  7229.017 17020.9161 20617.082     0.000\n [8,] 14960.942 12749.4101 12477.871 11284.279 13336.0421 16281.453  5606.082\n [9,]  7515.256  7934.8082  7649.776 18427.503  7801.6163  8403.896 14810.930\n[10,]  6391.342  4975.0021  4669.295 15469.566  5226.8731  7707.091 13111.391\n           [,8]      [,9]     [,10]\n [1,] 14960.942  7515.256  6391.342\n [2,] 12749.410  7934.808  4975.002\n [3,] 12477.871  7649.776  4669.295\n [4,] 11284.279 18427.503 15469.566\n [5,] 13336.042  7801.616  5226.873\n [6,] 16281.453  8403.896  7707.091\n [7,]  5606.082 14810.930 13111.391\n [8,]     0.000  9472.024  8575.490\n [9,]  9472.024     0.000  3780.800\n[10,]  8575.490  3780.800     0.000\n\n# longlat = TRUE = great circle\n# Large matrix size: 332*332=110224\n\nObservations:\n\nOutput dist is a matrix object class of R\nColumn heanders and row headers are not labeled with the planning subzone codes."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#labelling-column-and-row-heanders-of-a-distance-matrix",
    "href": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#labelling-column-and-row-heanders-of-a-distance-matrix",
    "title": "In-Class Exercise 3: Processing and Visualising Flow Data",
    "section": "3.3 Labelling column and row heanders of a distance matrix",
    "text": "3.3 Labelling column and row heanders of a distance matrix\nReplace columns and rows names with subzones names so we can create tibble data frame later. Data frame will help us understand data better.\n\nsz_names &lt;- mpsz$SUBZONE_C\n\ncolnames(dist) &lt;- paste0(sz_names)\nrownames(dist) &lt;- paste0(sz_names)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#pivoting-distance-value-by-subzone_c",
    "href": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#pivoting-distance-value-by-subzone_c",
    "title": "In-Class Exercise 3: Processing and Visualising Flow Data",
    "section": "3.4 Pivoting distance value by SUBZONE_C",
    "text": "3.4 Pivoting distance value by SUBZONE_C\nBe mindful not to sort the data to maintain the sequence!\n\ndistPair &lt;- melt(dist) %&gt;%\n  rename(dist = value)\n\nhead(distPair, 10)\n\n     Var1   Var2      dist\n1  MESZ01 MESZ01     0.000\n2  RVSZ05 MESZ01  3926.003\n3  SRSZ01 MESZ01  3939.108\n4  WISZ01 MESZ01 20252.964\n5  MUSZ02 MESZ01  2989.984\n6  MPSZ05 MESZ01  1431.330\n7  WISZ03 MESZ01 19211.836\n8  WISZ02 MESZ01 14960.942\n9  SISZ02 MESZ01  7515.256\n10 SISZ01 MESZ01  6391.342\n\n\nObservations: Within-zone (intrazone) distance = 0."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#updating-intra-zonal-distances",
    "href": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#updating-intra-zonal-distances",
    "title": "In-Class Exercise 3: Processing and Visualising Flow Data",
    "section": "3.5 Updating intra-zonal distances",
    "text": "3.5 Updating intra-zonal distances\n\n# cached on memory, not saved in environment\ndistPair %&gt;%\n  filter(dist &gt; 0) %&gt;%\n  summary() #to see what is the minimum distance\n\n      Var1             Var2             dist        \n MESZ01 :   331   MESZ01 :   331   Min.   :  173.8  \n RVSZ05 :   331   RVSZ05 :   331   1st Qu.: 7149.5  \n SRSZ01 :   331   SRSZ01 :   331   Median :11890.0  \n WISZ01 :   331   WISZ01 :   331   Mean   :12229.4  \n MUSZ02 :   331   MUSZ02 :   331   3rd Qu.:16401.7  \n MPSZ05 :   331   MPSZ05 :   331   Max.   :49894.4  \n (Other):107906   (Other):107906                    \n\n\n50 is arbitruary, cannot overshoot the minimum. 175/2 (for each radius of the nucleus) = 80 (rounded down to 50\n\ndistPair$dist &lt;- ifelse(distPair$dist == 0,\n                        50, \n                        distPair$dist)\n\n\n# Check the result data.frame.\ndistPair %&gt;%\n  summary()\n\n      Var1             Var2             dist      \n MESZ01 :   332   MESZ01 :   332   Min.   :   50  \n RVSZ05 :   332   RVSZ05 :   332   1st Qu.: 7097  \n SRSZ01 :   332   SRSZ01 :   332   Median :11864  \n WISZ01 :   332   WISZ01 :   332   Mean   :12193  \n MUSZ02 :   332   MUSZ02 :   332   3rd Qu.:16388  \n MPSZ05 :   332   MPSZ05 :   332   Max.   :49894  \n (Other):108232   (Other):108232                  \n\n# Rename origin & destination fields\ndistPair &lt;- distPair %&gt;%\n  rename(orig = Var1,\n         dest = Var2)\n\nSave the dataframe for future use.\n\nwrite_rds(distPair, \"data/rds/distPair.rds\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#separating-intra-flow-from-passenger-volume-df",
    "href": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#separating-intra-flow-from-passenger-volume-df",
    "title": "In-Class Exercise 3: Processing and Visualising Flow Data",
    "section": "4.1 Separating intra-flow from passenger volume df",
    "text": "4.1 Separating intra-flow from passenger volume df\nAdd three new fields in flow_data dataframe\n\nflow_data$FlowNoIntra &lt;- ifelse(\n  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ, \n  0, flow_data$TRIPS)\nflow_data$offset &lt;- ifelse(\n  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ, \n  0.000001, 1)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#importing-population-data",
    "href": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#importing-population-data",
    "title": "In-Class Exercise 3: Processing and Visualising Flow Data",
    "section": "5.1 Importing population data",
    "text": "5.1 Importing population data\n\npop &lt;- read_csv(\"data/aspatial/pop.csv\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#geospatial-data-wrangling",
    "href": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#geospatial-data-wrangling",
    "title": "In-Class Exercise 3: Processing and Visualising Flow Data",
    "section": "5.2 Geospatial Data Wrangling",
    "text": "5.2 Geospatial Data Wrangling\n\npop &lt;- pop %&gt;%\n  left_join(mpsz,\n            by = c(\"PA\" = \"PLN_AREA_N\",\n                   \"SZ\" = \"SUBZONE_N\")) %&gt;%\n  dplyr::select(1:6) %&gt;%\n  rename(SZ_NAME = SZ,\n         SZ = SUBZONE_C)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#preparing-origin-attrbute",
    "href": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#preparing-origin-attrbute",
    "title": "In-Class Exercise 3: Processing and Visualising Flow Data",
    "section": "5.3 Preparing Origin Attrbute",
    "text": "5.3 Preparing Origin Attrbute\nPeople on their journey to school (pri & sec sch) / journey to work\n\nflow_data1 &lt;- flow_data1 %&gt;%\n  left_join(pop,\n            by = c(ORIGIN_SZ = \"SZ\")) %&gt;%\n  rename(ORIGIN_AGE7_12 = AGE7_12,\n         ORIGIN_AGE13_24 = AGE13_24,\n         ORIGIN_AGE25_64 = AGE25_64) %&gt;%\n  dplyr::select(-c(PA, SZ_NAME))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#preparing-destination-attribute",
    "href": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#preparing-destination-attribute",
    "title": "In-Class Exercise 3: Processing and Visualising Flow Data",
    "section": "5.4 Preparing destination attribute",
    "text": "5.4 Preparing destination attribute\n\nflow_data1 &lt;- flow_data1 %&gt;%\n  left_join(pop,\n            by = c(DESTIN_SZ = \"SZ\")) %&gt;%\n  rename(DESTIN_AGE7_12 = AGE7_12,\n         DESTIN_AGE13_24 = AGE13_24,\n         DESTIN_AGE25_64 = AGE25_64) %&gt;%\n  dplyr::select(-c(PA, SZ_NAME))\n\n\nwrite_rds(flow_data1, \"data/rds/SIM_data\")\n\nmorning = push factor is origin evening = pull factor is destination bc ppl want to go home"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex3/data/geospatial/MPSZ-2019.html",
    "href": "In-class_Ex/In-class_Ex3/data/geospatial/MPSZ-2019.html",
    "title": "Geospatial Data Analytics",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#combining-passenger-volume-data-with-distance-value",
    "href": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#combining-passenger-volume-data-with-distance-value",
    "title": "In-Class Exercise 3: Processing and Visualising Flow Data",
    "section": "4.2 Combining passenger volume data with distance value",
    "text": "4.2 Combining passenger volume data with distance value\n\nflow_data$ORIGIN_SZ &lt;- as.factor(flow_data$ORIGIN_SZ)\nflow_data$DESTIN_SZ &lt;- as.factor(flow_data$DESTIN_SZ)\n\n\nwrite_rds(flow_data, \"data/rds/flow_data\")\n\nleft_join() of dplyr will be used to flow_data dataframe and distPair dataframe. The output is called flow_data1.\n\nflow_data1 &lt;- flow_data %&gt;%\n  left_join (distPair,\n             by = c(\"ORIGIN_SZ\" = \"orig\",\n                    \"DESTIN_SZ\" = \"dest\"))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#importing-the-modelling-data",
    "href": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#importing-the-modelling-data",
    "title": "In-Class Exercise 3: Processing and Visualising Flow Data",
    "section": "6.1 Importing the modelling data",
    "text": "6.1 Importing the modelling data\n\nSIM_data &lt;- read_rds(\"data/rds/SIM_data.rds\")\n\nsummary(SIM_data)\n\n  ORIGIN_SZ          DESTIN_SZ             TRIPS           FlowNoIntra      \n Length:14274       Length:14274       Min.   :     1.0   Min.   :     1.0  \n Class :character   Class :character   1st Qu.:    11.0   1st Qu.:    11.0  \n Mode  :character   Mode  :character   Median :    56.0   Median :    56.0  \n                                       Mean   :   664.3   Mean   :   664.3  \n                                       3rd Qu.:   296.0   3rd Qu.:   296.0  \n                                       Max.   :104167.0   Max.   :104167.0  \n     offset       dist         ORIGIN_AGE7_12 ORIGIN_AGE13_24 ORIGIN_AGE25_64\n Min.   :1   Min.   :  173.8   Min.   :   0   Min.   :    0   Min.   :    0  \n 1st Qu.:1   1st Qu.: 3465.4   1st Qu.: 240   1st Qu.:  460   1st Qu.: 2210  \n Median :1   Median : 6121.0   Median : 710   Median : 1400   Median : 7030  \n Mean   :1   Mean   : 6951.8   Mean   :1037   Mean   : 2278   Mean   :10536  \n 3rd Qu.:1   3rd Qu.: 9725.1   3rd Qu.:1500   3rd Qu.: 3282   3rd Qu.:15830  \n Max.   :1   Max.   :26135.8   Max.   :6340   Max.   :16380   Max.   :74610  \n DESTIN_AGE7_12 DESTIN_AGE13_24 DESTIN_AGE25_64\n Min.   :   0   Min.   :    0   Min.   :    0  \n 1st Qu.: 250   1st Qu.:  460   1st Qu.: 2210  \n Median : 720   Median : 1430   Median : 7120  \n Mean   :1040   Mean   : 2305   Mean   :10648  \n 3rd Qu.:1500   3rd Qu.: 3290   3rd Qu.:15830  \n Max.   :6340   Max.   :16380   Max.   :74610"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#visualising-the-dependent-variable",
    "href": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#visualising-the-dependent-variable",
    "title": "In-Class Exercise 3: Processing and Visualising Flow Data",
    "section": "6.2 Visualising the dependent variable",
    "text": "6.2 Visualising the dependent variable\nDistribution of the dependent variable (i.e. TRIPS) by using histogram\n\nggplot(data = SIM_data,\n       aes(x = TRIPS)) +\n  geom_histogram()\n\n\n\n\nObservations: Distribution is highly skewed and not resemble bell shape or also known as normal distribution.\nRelation between the dependent variable and one of the key independent variable in Spatial Interaction Model, namely distance\n\nggplot(data = SIM_data,\n       aes(x = dist,\n           y = TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n\n\n\nObservation: Notice that their relationship hardly resemble linear relationship.\nOn the other hand, if we plot the scatter plot by using the log transformed version of both variables, we can see that their relationship is more resemble linear relationship.\n\nggplot(data = SIM_data,\n       aes(x = log(dist),\n           y = log(TRIPS))) +\n  geom_point() +\n  geom_smooth(method = lm)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#distribution-of-the-dependent-variable-i.e.-trips-by-using-histogram",
    "href": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#distribution-of-the-dependent-variable-i.e.-trips-by-using-histogram",
    "title": "In-Class Exercise 3: Processing and Visualising Flow Data",
    "section": "Distribution of the dependent variable (i.e. TRIPS) by using histogram",
    "text": "Distribution of the dependent variable (i.e. TRIPS) by using histogram\n\nggplot(data = SIM_data,\n       aes(x = TRIPS)) +\n  geom_histogram()\n\n\n\n\nObservations: - Distribution is highly skewed and not resemble bell shape or also known as normal distribution."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#relation-between-the-dependent-variable-and-one-of-the-key-independent-variable-in-spatial-interaction-model-namely-distance",
    "href": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#relation-between-the-dependent-variable-and-one-of-the-key-independent-variable-in-spatial-interaction-model-namely-distance",
    "title": "In-Class Exercise 3: Processing and Visualising Flow Data",
    "section": "Relation between the dependent variable and one of the key independent variable in Spatial Interaction Model, namely distance",
    "text": "Relation between the dependent variable and one of the key independent variable in Spatial Interaction Model, namely distance\n\nggplot(data = SIM_data,\n       aes(x = dist,\n           y = TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n\n\n\nObservation: - Notice that their relationship hardly resemble linear relationship.\nOn the other hand, if we plot the scatter plot by using the log transformed version of both variables, we can see that their relationship is more resemble linear relationship.\n\nggplot(data = SIM_data,\n       aes(x = log(dist),\n           y = log(TRIPS))) +\n  geom_point() +\n  geom_smooth(method = lm)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#checking-for-variables-with-zero-values",
    "href": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#checking-for-variables-with-zero-values",
    "title": "In-Class Exercise 3: Processing and Visualising Flow Data",
    "section": "6.3 Checking for variables with zero values",
    "text": "6.3 Checking for variables with zero values\nSince Poisson Regression is based of log and log 0 is undefined, it is important for us to ensure that no 0 values in the explanatory variables.\nIn the code chunk below, summary() of Base R is used to compute the summary statistics of all variables in SIM_data data frame.\n\nsummary(SIM_data)\n\n  ORIGIN_SZ          DESTIN_SZ             TRIPS           FlowNoIntra      \n Length:14274       Length:14274       Min.   :     1.0   Min.   :     1.0  \n Class :character   Class :character   1st Qu.:    11.0   1st Qu.:    11.0  \n Mode  :character   Mode  :character   Median :    56.0   Median :    56.0  \n                                       Mean   :   664.3   Mean   :   664.3  \n                                       3rd Qu.:   296.0   3rd Qu.:   296.0  \n                                       Max.   :104167.0   Max.   :104167.0  \n     offset       dist         ORIGIN_AGE7_12 ORIGIN_AGE13_24 ORIGIN_AGE25_64\n Min.   :1   Min.   :  173.8   Min.   :   0   Min.   :    0   Min.   :    0  \n 1st Qu.:1   1st Qu.: 3465.4   1st Qu.: 240   1st Qu.:  460   1st Qu.: 2210  \n Median :1   Median : 6121.0   Median : 710   Median : 1400   Median : 7030  \n Mean   :1   Mean   : 6951.8   Mean   :1037   Mean   : 2278   Mean   :10536  \n 3rd Qu.:1   3rd Qu.: 9725.1   3rd Qu.:1500   3rd Qu.: 3282   3rd Qu.:15830  \n Max.   :1   Max.   :26135.8   Max.   :6340   Max.   :16380   Max.   :74610  \n DESTIN_AGE7_12 DESTIN_AGE13_24 DESTIN_AGE25_64\n Min.   :   0   Min.   :    0   Min.   :    0  \n 1st Qu.: 250   1st Qu.:  460   1st Qu.: 2210  \n Median : 720   Median : 1430   Median : 7120  \n Mean   :1040   Mean   : 2305   Mean   :10648  \n 3rd Qu.:1500   3rd Qu.: 3290   3rd Qu.:15830  \n Max.   :6340   Max.   :16380   Max.   :74610  \n\n\nObservations:\n\nVariables ORIGIN_AGE7_12, ORIGIN_AGE13_24, ORIGIN_AGE25_64, DESTIN_AGE7_12, DESTIN_AGE13_24, DESTIN_AGE25_64 consist of 0 values.\nIn view of this, code chunk below will be used to replace zero values to 0.99.\n\nFeature engineering\n\nSIM_data$DESTIN_AGE7_12 &lt;- ifelse(\n  SIM_data$DESTIN_AGE7_12 == 0,\n  0.99, SIM_data$DESTIN_AGE7_12)\nSIM_data$DESTIN_AGE13_24 &lt;- ifelse(\n  SIM_data$DESTIN_AGE13_24 == 0,\n  0.99, SIM_data$DESTIN_AGE13_24)\nSIM_data$DESTIN_AGE25_64 &lt;- ifelse(\n  SIM_data$DESTIN_AGE25_64 == 0,\n  0.99, SIM_data$DESTIN_AGE25_64)\nSIM_data$ORIGIN_AGE7_12 &lt;- ifelse(\n  SIM_data$ORIGIN_AGE7_12 == 0,\n  0.99, SIM_data$ORIGIN_AGE7_12)\nSIM_data$ORIGIN_AGE13_24 &lt;- ifelse(\n  SIM_data$ORIGIN_AGE13_24 == 0,\n  0.99, SIM_data$ORIGIN_AGE13_24)\nSIM_data$ORIGIN_AGE25_64 &lt;- ifelse(\n  SIM_data$ORIGIN_AGE25_64 == 0,\n  0.99, SIM_data$ORIGIN_AGE25_64)\n\nCheck again:\n\nsummary(SIM_data)\n\n  ORIGIN_SZ          DESTIN_SZ             TRIPS           FlowNoIntra      \n Length:14274       Length:14274       Min.   :     1.0   Min.   :     1.0  \n Class :character   Class :character   1st Qu.:    11.0   1st Qu.:    11.0  \n Mode  :character   Mode  :character   Median :    56.0   Median :    56.0  \n                                       Mean   :   664.3   Mean   :   664.3  \n                                       3rd Qu.:   296.0   3rd Qu.:   296.0  \n                                       Max.   :104167.0   Max.   :104167.0  \n     offset       dist         ORIGIN_AGE7_12    ORIGIN_AGE13_24   \n Min.   :1   Min.   :  173.8   Min.   :   0.99   Min.   :    0.99  \n 1st Qu.:1   1st Qu.: 3465.4   1st Qu.: 240.00   1st Qu.:  460.00  \n Median :1   Median : 6121.0   Median : 710.00   Median : 1400.00  \n Mean   :1   Mean   : 6951.8   Mean   :1036.73   Mean   : 2278.59  \n 3rd Qu.:1   3rd Qu.: 9725.1   3rd Qu.:1500.00   3rd Qu.: 3282.50  \n Max.   :1   Max.   :26135.8   Max.   :6340.00   Max.   :16380.00  \n ORIGIN_AGE25_64    DESTIN_AGE7_12    DESTIN_AGE13_24    DESTIN_AGE25_64   \n Min.   :    0.99   Min.   :   0.99   Min.   :    0.99   Min.   :    0.99  \n 1st Qu.: 2210.00   1st Qu.: 250.00   1st Qu.:  460.00   1st Qu.: 2210.00  \n Median : 7030.00   Median : 720.00   Median : 1430.00   Median : 7120.00  \n Mean   :10535.93   Mean   :1039.98   Mean   : 2305.33   Mean   :10647.95  \n 3rd Qu.:15830.00   3rd Qu.:1500.00   3rd Qu.: 3290.00   3rd Qu.:15830.00  \n Max.   :74610.00   Max.   :6340.00   Max.   :16380.00   Max.   :74610.00  \n\n\nObservation: All the 0 values have been replaced by 0.99."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#unconstrained-spatial-interaction-model",
    "href": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#unconstrained-spatial-interaction-model",
    "title": "In-Class Exercise 3: Processing and Visualising Flow Data",
    "section": "6.4 Unconstrained Spatial Interaction Model",
    "text": "6.4 Unconstrained Spatial Interaction Model\nglm() have various kinds of regression. This example we use poisson & log.\nformula should be using a +\n\nuncSIM &lt;- glm(formula = TRIPS ~ \n                log(ORIGIN_AGE25_64) + \n                log(DESTIN_AGE25_64) +\n                log(dist),\n              family = poisson(link = \"log\"),\n              data = SIM_data,\n              na.action = na.exclude)\nuncSIM\n\n\nCall:  glm(formula = TRIPS ~ log(ORIGIN_AGE25_64) + log(DESTIN_AGE25_64) + \n    log(dist), family = poisson(link = \"log\"), data = SIM_data, \n    na.action = na.exclude)\n\nCoefficients:\n         (Intercept)  log(ORIGIN_AGE25_64)  log(DESTIN_AGE25_64)  \n            17.00287               0.21001               0.01289  \n           log(dist)  \n            -1.51785  \n\nDegrees of Freedom: 14273 Total (i.e. Null);  14270 Residual\nNull Deviance:      36120000 \nResidual Deviance: 19960000     AIC: 20040000\n\n\n\n\n\n\n\n\nImportant\n\n\n\ndistance = -1.5 definitely have to have -ve because it is inverse distance."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#r-squared-function",
    "href": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#r-squared-function",
    "title": "In-Class Exercise 3: Processing and Visualising Flow Data",
    "section": "6.5 R-squared function",
    "text": "6.5 R-squared function\nIn order to measure how much variation of the trips can be accounted by the model we will write a function to calculate R-Squared value.\n\n# Helper function\nCalcRSquared &lt;- function(observed,estimated){\n  r &lt;- cor(observed,estimated)\n  R2 &lt;- r^2\n  R2\n}\n\n# Compute R-squared\nCalcRSquared(uncSIM$data$TRIPS, uncSIM$fitted.values)\n\n[1] 0.1694734\n\nr2_mcfadden(uncSIM)\n\n# R2 for Generalized Linear Regression\n       R2: 0.446\n  adj. R2: 0.446\n\n\n0.446 is good. (why ah)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#origin-production-constrained-sim",
    "href": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#origin-production-constrained-sim",
    "title": "In-Class Exercise 3: Processing and Visualising Flow Data",
    "section": "6.6 Origin (Production) constrained SIM",
    "text": "6.6 Origin (Production) constrained SIM\nFit an origin constrained SIM by using the code3 chunk below\n\norcSIM &lt;- glm(formula = TRIPS ~ \n                 ORIGIN_SZ +\n                 log(DESTIN_AGE25_64) +\n                 log(dist),\n              family = poisson(link = \"log\"),\n              data = SIM_data,\n              na.action = na.exclude)\nsummary(orcSIM)\n\n\nCall:\nglm(formula = TRIPS ~ ORIGIN_SZ + log(DESTIN_AGE25_64) + log(dist), \n    family = poisson(link = \"log\"), data = SIM_data, na.action = na.exclude)\n\nCoefficients:\n                       Estimate Std. Error   z value Pr(&gt;|z|)    \n(Intercept)          19.9309957  0.0054015  3689.887  &lt; 2e-16 ***\nORIGIN_SZAMSZ02       0.6805710  0.0052686   129.175  &lt; 2e-16 ***\nORIGIN_SZAMSZ03       0.3597850  0.0054884    65.554  &lt; 2e-16 ***\nORIGIN_SZAMSZ04      -0.1106566  0.0060027   -18.434  &lt; 2e-16 ***\nORIGIN_SZAMSZ05      -0.3140561  0.0067998   -46.186  &lt; 2e-16 ***\nORIGIN_SZAMSZ06       0.0634425  0.0060258    10.528  &lt; 2e-16 ***\nORIGIN_SZAMSZ07      -1.1301580  0.0110298  -102.464  &lt; 2e-16 ***\nORIGIN_SZAMSZ08      -0.6330394  0.0102949   -61.491  &lt; 2e-16 ***\nORIGIN_SZAMSZ09       0.1064915  0.0063450    16.784  &lt; 2e-16 ***\nORIGIN_SZAMSZ10       0.5061899  0.0053889    93.931  &lt; 2e-16 ***\nORIGIN_SZAMSZ11      -1.3167911  0.0144870   -90.895  &lt; 2e-16 ***\nORIGIN_SZAMSZ12      -1.5103004  0.0127453  -118.499  &lt; 2e-16 ***\nORIGIN_SZBDSZ01       1.3626004  0.0051433   264.929  &lt; 2e-16 ***\nORIGIN_SZBDSZ02       0.9554084  0.0059655   160.156  &lt; 2e-16 ***\nORIGIN_SZBDSZ03       1.1476190  0.0054278   211.433  &lt; 2e-16 ***\nORIGIN_SZBDSZ04       2.0110410  0.0046344   433.940  &lt; 2e-16 ***\nORIGIN_SZBDSZ05       1.0658940  0.0053976   197.477  &lt; 2e-16 ***\nORIGIN_SZBDSZ06       1.2719222  0.0054774   232.213  &lt; 2e-16 ***\nORIGIN_SZBDSZ07      -0.5053039  0.0111553   -45.297  &lt; 2e-16 ***\nORIGIN_SZBDSZ08      -0.3556193  0.0102947   -34.544  &lt; 2e-16 ***\nORIGIN_SZBKSZ01      -0.3606399  0.0075473   -47.784  &lt; 2e-16 ***\nORIGIN_SZBKSZ02       0.1357265  0.0061394    22.107  &lt; 2e-16 ***\nORIGIN_SZBKSZ03       0.4101999  0.0058983    69.545  &lt; 2e-16 ***\nORIGIN_SZBKSZ04      -0.3418645  0.0070764   -48.310  &lt; 2e-16 ***\nORIGIN_SZBKSZ05      -0.2986750  0.0074073   -40.322  &lt; 2e-16 ***\nORIGIN_SZBKSZ06      -0.2637855  0.0068739   -38.375  &lt; 2e-16 ***\nORIGIN_SZBKSZ07       0.5498323  0.0051476   106.813  &lt; 2e-16 ***\nORIGIN_SZBKSZ08      -0.0527393  0.0061457    -8.582  &lt; 2e-16 ***\nORIGIN_SZBKSZ09      -0.1564691  0.0067300   -23.249  &lt; 2e-16 ***\nORIGIN_SZBLSZ01      -1.7551329  0.0176599   -99.385  &lt; 2e-16 ***\nORIGIN_SZBLSZ02      -1.9493637  0.0213859   -91.152  &lt; 2e-16 ***\nORIGIN_SZBLSZ03      -2.9057732  0.0535995   -54.213  &lt; 2e-16 ***\nORIGIN_SZBLSZ04      -1.4672066  0.0254726   -57.599  &lt; 2e-16 ***\nORIGIN_SZBMSZ01       0.1806064  0.0060563    29.821  &lt; 2e-16 ***\nORIGIN_SZBMSZ02      -1.4026549  0.0078244  -179.267  &lt; 2e-16 ***\nORIGIN_SZBMSZ03      -0.5976236  0.0063808   -93.660  &lt; 2e-16 ***\nORIGIN_SZBMSZ04      -0.5456513  0.0059061   -92.388  &lt; 2e-16 ***\nORIGIN_SZBMSZ05      -3.1095195  0.0188118  -165.297  &lt; 2e-16 ***\nORIGIN_SZBMSZ06      -3.0273827  0.0194319  -155.794  &lt; 2e-16 ***\nORIGIN_SZBMSZ07      -0.7378197  0.0066865  -110.345  &lt; 2e-16 ***\nORIGIN_SZBMSZ08      -0.9306150  0.0067188  -138.510  &lt; 2e-16 ***\nORIGIN_SZBMSZ09      -1.4137345  0.0101071  -139.876  &lt; 2e-16 ***\nORIGIN_SZBMSZ10      -1.7054195  0.0101582  -167.886  &lt; 2e-16 ***\nORIGIN_SZBMSZ11      -1.2418380  0.0076792  -161.714  &lt; 2e-16 ***\nORIGIN_SZBMSZ12      -1.3746537  0.0109769  -125.231  &lt; 2e-16 ***\nORIGIN_SZBMSZ13      -0.4339494  0.0069335   -62.587  &lt; 2e-16 ***\nORIGIN_SZBMSZ14      -0.9950458  0.0076302  -130.410  &lt; 2e-16 ***\nORIGIN_SZBMSZ15      -0.6544196  0.0068964   -94.892  &lt; 2e-16 ***\nORIGIN_SZBMSZ16      -1.5193747  0.0105329  -144.250  &lt; 2e-16 ***\nORIGIN_SZBMSZ17      -1.6536771  0.0180672   -91.529  &lt; 2e-16 ***\nORIGIN_SZBPSZ01       0.1484355  0.0064734    22.930  &lt; 2e-16 ***\nORIGIN_SZBPSZ02      -0.3602094  0.0073902   -48.741  &lt; 2e-16 ***\nORIGIN_SZBPSZ03      -0.1567975  0.0072226   -21.709  &lt; 2e-16 ***\nORIGIN_SZBPSZ04       0.4504873  0.0058418    77.115  &lt; 2e-16 ***\nORIGIN_SZBPSZ05       0.5028646  0.0053682    93.675  &lt; 2e-16 ***\nORIGIN_SZBPSZ06      -1.0125668  0.0105638   -95.853  &lt; 2e-16 ***\nORIGIN_SZBPSZ07      -0.3859065  0.0098561   -39.154  &lt; 2e-16 ***\nORIGIN_SZBSSZ01       0.1488497  0.0065504    22.724  &lt; 2e-16 ***\nORIGIN_SZBSSZ02       0.4269498  0.0055893    76.387  &lt; 2e-16 ***\nORIGIN_SZBSSZ03      -0.2437385  0.0062020   -39.300  &lt; 2e-16 ***\nORIGIN_SZBTSZ01       0.1987940  0.0066672    29.817  &lt; 2e-16 ***\nORIGIN_SZBTSZ02      -0.4571546  0.0090784   -50.356  &lt; 2e-16 ***\nORIGIN_SZBTSZ03      -0.2697243  0.0077941   -34.606  &lt; 2e-16 ***\nORIGIN_SZBTSZ04      -1.0997236  0.0115225   -95.441  &lt; 2e-16 ***\nORIGIN_SZBTSZ05      -1.0053122  0.0132594   -75.819  &lt; 2e-16 ***\nORIGIN_SZBTSZ06      -1.0841201  0.0102242  -106.035  &lt; 2e-16 ***\nORIGIN_SZBTSZ07      -2.3134497  0.0158499  -145.960  &lt; 2e-16 ***\nORIGIN_SZBTSZ08      -1.1581618  0.0121161   -95.589  &lt; 2e-16 ***\nORIGIN_SZCBSZ01      -1.0805930  0.0577831   -18.701  &lt; 2e-16 ***\nORIGIN_SZCCSZ01      -0.8145372  0.0152638   -53.364  &lt; 2e-16 ***\nORIGIN_SZCHSZ01       0.0377079  0.0133240     2.830 0.004654 ** \nORIGIN_SZCHSZ02      -0.6209553  0.0096388   -64.422  &lt; 2e-16 ***\nORIGIN_SZCHSZ03       1.6790244  0.0069559   241.381  &lt; 2e-16 ***\nORIGIN_SZCKSZ01       0.0839586  0.0059934    14.008  &lt; 2e-16 ***\nORIGIN_SZCKSZ02       0.4379511  0.0062289    70.309  &lt; 2e-16 ***\nORIGIN_SZCKSZ03       0.7956950  0.0051892   153.335  &lt; 2e-16 ***\nORIGIN_SZCKSZ04       1.2740323  0.0053165   239.637  &lt; 2e-16 ***\nORIGIN_SZCKSZ05       0.9326213  0.0061807   150.893  &lt; 2e-16 ***\nORIGIN_SZCKSZ06       0.3976273  0.0085639    46.431  &lt; 2e-16 ***\nORIGIN_SZCLSZ01      -0.7522917  0.0094655   -79.477  &lt; 2e-16 ***\nORIGIN_SZCLSZ02      -1.3937450  0.0153260   -90.940  &lt; 2e-16 ***\nORIGIN_SZCLSZ03      -0.7898683  0.0091016   -86.784  &lt; 2e-16 ***\nORIGIN_SZCLSZ04       0.8451512  0.0051258   164.882  &lt; 2e-16 ***\nORIGIN_SZCLSZ05      -1.6573818  0.0166091   -99.788  &lt; 2e-16 ***\nORIGIN_SZCLSZ06       0.9478181  0.0048182   196.716  &lt; 2e-16 ***\nORIGIN_SZCLSZ07      -0.2499753  0.0064632   -38.677  &lt; 2e-16 ***\nORIGIN_SZCLSZ08       0.1350119  0.0069296    19.483  &lt; 2e-16 ***\nORIGIN_SZCLSZ09      -1.3868782  0.0192743   -71.955  &lt; 2e-16 ***\nORIGIN_SZDTSZ02      -3.7535792  0.0871325   -43.079  &lt; 2e-16 ***\nORIGIN_SZDTSZ03      -3.8462041  0.0840156   -45.780  &lt; 2e-16 ***\nORIGIN_SZDTSZ13      -2.9738127  0.0349241   -85.151  &lt; 2e-16 ***\nORIGIN_SZGLSZ01      -1.5175198  0.0110135  -137.787  &lt; 2e-16 ***\nORIGIN_SZGLSZ02       0.2405712  0.0058742    40.954  &lt; 2e-16 ***\nORIGIN_SZGLSZ03       0.1940241  0.0061989    31.300  &lt; 2e-16 ***\nORIGIN_SZGLSZ04       1.0292572  0.0049028   209.931  &lt; 2e-16 ***\nORIGIN_SZGLSZ05       0.9864552  0.0050898   193.811  &lt; 2e-16 ***\nORIGIN_SZHGSZ01       0.3073609  0.0054307    56.597  &lt; 2e-16 ***\nORIGIN_SZHGSZ02       0.3827293  0.0054555    70.154  &lt; 2e-16 ***\nORIGIN_SZHGSZ03       0.2342580  0.0059240    39.544  &lt; 2e-16 ***\nORIGIN_SZHGSZ04       0.8750090  0.0049639   176.275  &lt; 2e-16 ***\nORIGIN_SZHGSZ05       1.1695280  0.0049468   236.420  &lt; 2e-16 ***\nORIGIN_SZHGSZ06      -0.0462411  0.0063805    -7.247 4.25e-13 ***\nORIGIN_SZHGSZ07       0.4488583  0.0055139    81.404  &lt; 2e-16 ***\nORIGIN_SZHGSZ08       0.2236095  0.0061279    36.490  &lt; 2e-16 ***\nORIGIN_SZHGSZ09      -1.6376674  0.0084442  -193.941  &lt; 2e-16 ***\nORIGIN_SZHGSZ10      -2.9849025  0.0501042   -59.574  &lt; 2e-16 ***\nORIGIN_SZJESZ01       0.3926525  0.0056268    69.783  &lt; 2e-16 ***\nORIGIN_SZJESZ02       0.1230160  0.0056864    21.633  &lt; 2e-16 ***\nORIGIN_SZJESZ03       0.0188276  0.0061020     3.085 0.002032 ** \nORIGIN_SZJESZ04      -1.3611618  0.0117184  -116.156  &lt; 2e-16 ***\nORIGIN_SZJESZ05      -2.0643662  0.0157083  -131.419  &lt; 2e-16 ***\nORIGIN_SZJESZ06       0.1556368  0.0055245    28.172  &lt; 2e-16 ***\nORIGIN_SZJESZ07      -1.7664532  0.0133171  -132.646  &lt; 2e-16 ***\nORIGIN_SZJESZ08      -0.9115981  0.0138203   -65.961  &lt; 2e-16 ***\nORIGIN_SZJESZ09       0.6121916  0.0060381   101.388  &lt; 2e-16 ***\nORIGIN_SZJESZ10      -1.1953045  0.0233216   -51.253  &lt; 2e-16 ***\nORIGIN_SZJESZ11      -1.4088748  0.0220921   -63.773  &lt; 2e-16 ***\nORIGIN_SZJWSZ01       0.5759093  0.0077741    74.081  &lt; 2e-16 ***\nORIGIN_SZJWSZ02       0.9769314  0.0053029   184.227  &lt; 2e-16 ***\nORIGIN_SZJWSZ03       1.3242695  0.0049068   269.882  &lt; 2e-16 ***\nORIGIN_SZJWSZ04       0.5621088  0.0057831    97.199  &lt; 2e-16 ***\nORIGIN_SZJWSZ05      -1.5744341  0.0146904  -107.174  &lt; 2e-16 ***\nORIGIN_SZJWSZ06      -0.9113320  0.0126913   -71.807  &lt; 2e-16 ***\nORIGIN_SZJWSZ07      -2.3083419  0.0357843   -64.507  &lt; 2e-16 ***\nORIGIN_SZJWSZ08       2.0114225  0.0047956   419.429  &lt; 2e-16 ***\nORIGIN_SZJWSZ09       1.9086705  0.0045255   421.759  &lt; 2e-16 ***\nORIGIN_SZKLSZ01       0.2743166  0.0056908    48.204  &lt; 2e-16 ***\nORIGIN_SZKLSZ02      -0.6443386  0.0074521   -86.463  &lt; 2e-16 ***\nORIGIN_SZKLSZ03      -0.3990113  0.0067213   -59.366  &lt; 2e-16 ***\nORIGIN_SZKLSZ04      -2.1413876  0.0138405  -154.719  &lt; 2e-16 ***\nORIGIN_SZKLSZ05      -1.0913697  0.0121512   -89.816  &lt; 2e-16 ***\nORIGIN_SZKLSZ06      -5.6240764  0.1857405   -30.279  &lt; 2e-16 ***\nORIGIN_SZKLSZ07      -1.1885897  0.0096830  -122.750  &lt; 2e-16 ***\nORIGIN_SZKLSZ08      -1.7018593  0.0114317  -148.872  &lt; 2e-16 ***\nORIGIN_SZLKSZ01      -1.6659670  0.0446420   -37.318  &lt; 2e-16 ***\nORIGIN_SZMDSZ01      -1.1210505  0.0318834   -35.161  &lt; 2e-16 ***\nORIGIN_SZMDSZ02      -0.5096299  0.0116645   -43.691  &lt; 2e-16 ***\nORIGIN_SZMDSZ03      -1.9187039  0.0198291   -96.762  &lt; 2e-16 ***\nORIGIN_SZMPSZ01      -0.5260512  0.0094201   -55.844  &lt; 2e-16 ***\nORIGIN_SZMPSZ02      -0.2905084  0.0077974   -37.257  &lt; 2e-16 ***\nORIGIN_SZMPSZ03       0.3342293  0.0063715    52.457  &lt; 2e-16 ***\nORIGIN_SZMUSZ02      -3.8337096  0.1105053   -34.693  &lt; 2e-16 ***\nORIGIN_SZNTSZ01      -2.9845040  0.0397028   -75.171  &lt; 2e-16 ***\nORIGIN_SZNTSZ02      -3.1812985  0.0249470  -127.522  &lt; 2e-16 ***\nORIGIN_SZNTSZ03      -0.9742991  0.0085424  -114.054  &lt; 2e-16 ***\nORIGIN_SZNTSZ05      -4.2086932  0.0579737   -72.597  &lt; 2e-16 ***\nORIGIN_SZNTSZ06      -4.5831822  0.0583494   -78.547  &lt; 2e-16 ***\nORIGIN_SZNVSZ01       0.3186962  0.0052944    60.195  &lt; 2e-16 ***\nORIGIN_SZNVSZ02      -0.5321136  0.0073747   -72.154  &lt; 2e-16 ***\nORIGIN_SZNVSZ03      -0.9911852  0.0090560  -109.451  &lt; 2e-16 ***\nORIGIN_SZNVSZ04      -0.8329721  0.0099590   -83.640  &lt; 2e-16 ***\nORIGIN_SZNVSZ05      -2.1460777  0.0182401  -117.657  &lt; 2e-16 ***\nORIGIN_SZPGSZ01      -0.5604078  0.0151515   -36.987  &lt; 2e-16 ***\nORIGIN_SZPGSZ02      -0.4025139  0.0085135   -47.279  &lt; 2e-16 ***\nORIGIN_SZPGSZ03       0.6975483  0.0055534   125.608  &lt; 2e-16 ***\nORIGIN_SZPGSZ04       1.2175486  0.0051080   238.363  &lt; 2e-16 ***\nORIGIN_SZPGSZ05       0.3895354  0.0069851    55.767  &lt; 2e-16 ***\nORIGIN_SZPLSZ01      -0.5572701  0.0134473   -41.441  &lt; 2e-16 ***\nORIGIN_SZPLSZ02      -0.9854214  0.0172337   -57.180  &lt; 2e-16 ***\nORIGIN_SZPLSZ03      -1.6991954  0.0472629   -35.952  &lt; 2e-16 ***\nORIGIN_SZPLSZ04      -2.2000217  0.0373580   -58.890  &lt; 2e-16 ***\nORIGIN_SZPLSZ05      -1.7086663  0.0260920   -65.486  &lt; 2e-16 ***\nORIGIN_SZPNSZ01       1.5292867  0.0055102   277.535  &lt; 2e-16 ***\nORIGIN_SZPNSZ02       0.7457519  0.0127815    58.346  &lt; 2e-16 ***\nORIGIN_SZPNSZ03      -1.3659046  0.0216180   -63.184  &lt; 2e-16 ***\nORIGIN_SZPNSZ04      -2.0025379  0.0360655   -55.525  &lt; 2e-16 ***\nORIGIN_SZPNSZ05      -0.9157959  0.0320955   -28.533  &lt; 2e-16 ***\nORIGIN_SZPRSZ01       0.0522611  0.0139142     3.756 0.000173 ***\nORIGIN_SZPRSZ02       1.3063371  0.0053809   242.774  &lt; 2e-16 ***\nORIGIN_SZPRSZ03       0.9963670  0.0054293   183.516  &lt; 2e-16 ***\nORIGIN_SZPRSZ04      -0.0300950  0.0088010    -3.419 0.000627 ***\nORIGIN_SZPRSZ05       1.6840313  0.0050839   331.245  &lt; 2e-16 ***\nORIGIN_SZPRSZ06      -0.8277202  0.0131296   -63.042  &lt; 2e-16 ***\nORIGIN_SZPRSZ07      -2.1698449  0.0177362  -122.340  &lt; 2e-16 ***\nORIGIN_SZPRSZ08       0.4559353  0.0072609    62.793  &lt; 2e-16 ***\nORIGIN_SZQTSZ01      -0.3517047  0.0078770   -44.650  &lt; 2e-16 ***\nORIGIN_SZQTSZ02      -0.8199353  0.0071544  -114.605  &lt; 2e-16 ***\nORIGIN_SZQTSZ03      -0.2457614  0.0065555   -37.490  &lt; 2e-16 ***\nORIGIN_SZQTSZ04      -1.2216614  0.0084050  -145.349  &lt; 2e-16 ***\nORIGIN_SZQTSZ05      -0.7219952  0.0072360   -99.778  &lt; 2e-16 ***\nORIGIN_SZQTSZ06      -0.6729363  0.0076658   -87.784  &lt; 2e-16 ***\nORIGIN_SZQTSZ07      -1.4497690  0.0109365  -132.563  &lt; 2e-16 ***\nORIGIN_SZQTSZ08      -0.2770151  0.0070193   -39.465  &lt; 2e-16 ***\nORIGIN_SZQTSZ09      -0.6157554  0.0078739   -78.202  &lt; 2e-16 ***\nORIGIN_SZQTSZ10      -0.3091547  0.0075471   -40.963  &lt; 2e-16 ***\nORIGIN_SZQTSZ11      -1.9698881  0.0151247  -130.243  &lt; 2e-16 ***\nORIGIN_SZQTSZ12      -2.6449643  0.0205857  -128.485  &lt; 2e-16 ***\nORIGIN_SZQTSZ13      -0.3754107  0.0088433   -42.452  &lt; 2e-16 ***\nORIGIN_SZQTSZ14      -1.6537473  0.0134378  -123.067  &lt; 2e-16 ***\nORIGIN_SZQTSZ15      -0.3435351  0.0131956   -26.034  &lt; 2e-16 ***\nORIGIN_SZRCSZ01      -1.7104390  0.0141179  -121.154  &lt; 2e-16 ***\nORIGIN_SZRCSZ06      -1.1250727  0.0094909  -118.542  &lt; 2e-16 ***\nORIGIN_SZRVSZ01      -3.0220116  0.0339694   -88.963  &lt; 2e-16 ***\nORIGIN_SZRVSZ02      -3.6040075  0.0297641  -121.086  &lt; 2e-16 ***\nORIGIN_SZRVSZ03      -3.2345594  0.0259149  -124.814  &lt; 2e-16 ***\nORIGIN_SZRVSZ04      -3.6900313  0.0575908   -64.073  &lt; 2e-16 ***\nORIGIN_SZRVSZ05      -2.9527570  0.0178582  -165.344  &lt; 2e-16 ***\nORIGIN_SZSBSZ01       0.0238445  0.0078563     3.035 0.002405 ** \nORIGIN_SZSBSZ02      -0.5780602  0.0093054   -62.121  &lt; 2e-16 ***\nORIGIN_SZSBSZ03       0.8961719  0.0054586   164.175  &lt; 2e-16 ***\nORIGIN_SZSBSZ04       0.8421798  0.0061888   136.080  &lt; 2e-16 ***\nORIGIN_SZSBSZ05      -0.1682984  0.0078342   -21.482  &lt; 2e-16 ***\nORIGIN_SZSBSZ06      -1.1482701  0.0196421   -58.460  &lt; 2e-16 ***\nORIGIN_SZSBSZ07      -0.8830317  0.0160709   -54.946  &lt; 2e-16 ***\nORIGIN_SZSBSZ08      -1.1039492  0.0174602   -63.226  &lt; 2e-16 ***\nORIGIN_SZSBSZ09      -0.5946691  0.0101961   -58.323  &lt; 2e-16 ***\nORIGIN_SZSESZ02       1.1144933  0.0050948   218.749  &lt; 2e-16 ***\nORIGIN_SZSESZ03       1.1058963  0.0049026   225.574  &lt; 2e-16 ***\nORIGIN_SZSESZ04       0.7427975  0.0056948   130.433  &lt; 2e-16 ***\nORIGIN_SZSESZ05      -0.2812684  0.0069596   -40.414  &lt; 2e-16 ***\nORIGIN_SZSESZ06       0.8168315  0.0055800   146.387  &lt; 2e-16 ***\nORIGIN_SZSESZ07      -2.2842043  0.0231232   -98.784  &lt; 2e-16 ***\nORIGIN_SZSGSZ01      -0.7313790  0.0098957   -73.909  &lt; 2e-16 ***\nORIGIN_SZSGSZ02      -1.1185406  0.0110919  -100.843  &lt; 2e-16 ***\nORIGIN_SZSGSZ03       0.1752618  0.0060508    28.965  &lt; 2e-16 ***\nORIGIN_SZSGSZ04       0.3764395  0.0056165    67.023  &lt; 2e-16 ***\nORIGIN_SZSGSZ05      -1.7203916  0.0118945  -144.637  &lt; 2e-16 ***\nORIGIN_SZSGSZ06       0.4630857  0.0052886    87.563  &lt; 2e-16 ***\nORIGIN_SZSGSZ07      -0.7051233  0.0073133   -96.417  &lt; 2e-16 ***\nORIGIN_SZSKSZ01       0.2053928  0.0100710    20.395  &lt; 2e-16 ***\nORIGIN_SZSKSZ02       1.2630428  0.0063490   198.935  &lt; 2e-16 ***\nORIGIN_SZSKSZ03      -0.3035297  0.0096788   -31.360  &lt; 2e-16 ***\nORIGIN_SZSKSZ04      -1.7952886  0.0359225   -49.977  &lt; 2e-16 ***\nORIGIN_SZSKSZ05      -0.3836861  0.0176686   -21.716  &lt; 2e-16 ***\nORIGIN_SZSLSZ01      -2.5916326  0.0348001   -74.472  &lt; 2e-16 ***\nORIGIN_SZSLSZ04      -0.2251549  0.0088517   -25.436  &lt; 2e-16 ***\nORIGIN_SZSRSZ01      -2.9590365  0.0173638  -170.414  &lt; 2e-16 ***\nORIGIN_SZTHSZ01      -1.9639893  0.0570321   -34.437  &lt; 2e-16 ***\nORIGIN_SZTHSZ03      -1.7281304  0.0272797   -63.349  &lt; 2e-16 ***\nORIGIN_SZTHSZ04      -2.7837906  0.0343179   -81.118  &lt; 2e-16 ***\nORIGIN_SZTHSZ06      -2.1800693  0.0205491  -106.091  &lt; 2e-16 ***\nORIGIN_SZTMSZ01       0.8228136  0.0066824   123.131  &lt; 2e-16 ***\nORIGIN_SZTMSZ02       2.3174781  0.0044978   515.243  &lt; 2e-16 ***\nORIGIN_SZTMSZ03       1.7061757  0.0048615   350.957  &lt; 2e-16 ***\nORIGIN_SZTMSZ04       1.2407899  0.0058389   212.504  &lt; 2e-16 ***\nORIGIN_SZTMSZ05      -0.1000526  0.0124079    -8.064 7.41e-16 ***\nORIGIN_SZTNSZ01      -2.0347519  0.0139596  -145.760  &lt; 2e-16 ***\nORIGIN_SZTNSZ02      -1.8682671  0.0107901  -173.146  &lt; 2e-16 ***\nORIGIN_SZTNSZ03      -2.1737183  0.0146759  -148.115  &lt; 2e-16 ***\nORIGIN_SZTNSZ04      -0.5006452  0.0081501   -61.428  &lt; 2e-16 ***\nORIGIN_SZTPSZ01      -0.6722487  0.0075606   -88.914  &lt; 2e-16 ***\nORIGIN_SZTPSZ02       0.4552916  0.0050191    90.711  &lt; 2e-16 ***\nORIGIN_SZTPSZ03      -0.7865781  0.0072250  -108.869  &lt; 2e-16 ***\nORIGIN_SZTPSZ04      -0.7049044  0.0066456  -106.071  &lt; 2e-16 ***\nORIGIN_SZTPSZ05      -0.5574925  0.0070366   -79.227  &lt; 2e-16 ***\nORIGIN_SZTPSZ06      -0.4247282  0.0068709   -61.815  &lt; 2e-16 ***\nORIGIN_SZTPSZ07      -0.2846984  0.0071030   -40.081  &lt; 2e-16 ***\nORIGIN_SZTPSZ08      -1.0898051  0.0110046   -99.031  &lt; 2e-16 ***\nORIGIN_SZTPSZ09      -0.8092746  0.0079160  -102.232  &lt; 2e-16 ***\nORIGIN_SZTPSZ10      -0.9332072  0.0086809  -107.502  &lt; 2e-16 ***\nORIGIN_SZTPSZ11      -0.0421981  0.0064343    -6.558 5.44e-11 ***\nORIGIN_SZTPSZ12      -0.6330081  0.0078324   -80.819  &lt; 2e-16 ***\nORIGIN_SZTSSZ01      -1.7650409  0.0517357   -34.116  &lt; 2e-16 ***\nORIGIN_SZTSSZ02       1.1707267  0.0094178   124.310  &lt; 2e-16 ***\nORIGIN_SZTSSZ03       0.6581679  0.0095894    68.635  &lt; 2e-16 ***\nORIGIN_SZTSSZ04       0.8736493  0.0104965    83.233  &lt; 2e-16 ***\nORIGIN_SZTSSZ05       0.0957248  0.0178709     5.356 8.49e-08 ***\nORIGIN_SZTSSZ06       1.7581609  0.0206810    85.013  &lt; 2e-16 ***\nORIGIN_SZWCSZ01       0.8097950  0.0105622    76.669  &lt; 2e-16 ***\nORIGIN_SZWCSZ02      -1.9966163  0.0345747   -57.748  &lt; 2e-16 ***\nORIGIN_SZWCSZ03      -5.0687420  0.1474971   -34.365  &lt; 2e-16 ***\nORIGIN_SZWDSZ01       1.4926003  0.0047216   316.124  &lt; 2e-16 ***\nORIGIN_SZWDSZ02       0.9916597  0.0055755   177.859  &lt; 2e-16 ***\nORIGIN_SZWDSZ03       1.5918065  0.0052180   305.062  &lt; 2e-16 ***\nORIGIN_SZWDSZ04       1.3717152  0.0060516   226.669  &lt; 2e-16 ***\nORIGIN_SZWDSZ05       0.6700111  0.0062287   107.569  &lt; 2e-16 ***\nORIGIN_SZWDSZ06       0.8115996  0.0060947   133.165  &lt; 2e-16 ***\nORIGIN_SZWDSZ07      -0.6488914  0.0093567   -69.351  &lt; 2e-16 ***\nORIGIN_SZWDSZ08      -0.3610234  0.0096440   -37.435  &lt; 2e-16 ***\nORIGIN_SZWDSZ09       1.4445461  0.0052279   276.317  &lt; 2e-16 ***\nORIGIN_SZYSSZ01      -0.2039272  0.0069548   -29.322  &lt; 2e-16 ***\nORIGIN_SZYSSZ02       0.8707707  0.0058957   147.697  &lt; 2e-16 ***\nORIGIN_SZYSSZ03       1.8348842  0.0050377   364.231  &lt; 2e-16 ***\nORIGIN_SZYSSZ04       1.0780641  0.0052960   203.564  &lt; 2e-16 ***\nORIGIN_SZYSSZ05       0.3222765  0.0069700    46.237  &lt; 2e-16 ***\nORIGIN_SZYSSZ06      -0.4424689  0.0124866   -35.435  &lt; 2e-16 ***\nORIGIN_SZYSSZ07      -1.0267883  0.0155821   -65.895  &lt; 2e-16 ***\nORIGIN_SZYSSZ08       0.1833117  0.0070935    25.842  &lt; 2e-16 ***\nORIGIN_SZYSSZ09       1.0766070  0.0050451   213.396  &lt; 2e-16 ***\nlog(DESTIN_AGE25_64)  0.0295428  0.0001051   280.998  &lt; 2e-16 ***\nlog(dist)            -1.7024691  0.0004625 -3681.042  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 36117615  on 14273  degrees of freedom\nResidual deviance: 12983718  on 13993  degrees of freedom\nAIC: 13068835\n\nNumber of Fisher Scoring iterations: 6\n\n\nExamine how the constraints hold for destinations this time.\n\nCalcRSquared(orcSIM$data$TRIPS, orcSIM$fitted.values)\n\n[1] 0.4029115"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#destination-constrained",
    "href": "In-class_Ex/In-class_Ex3/In-class_Ex3.html#destination-constrained",
    "title": "In-Class Exercise 3: Processing and Visualising Flow Data",
    "section": "6.7 Destination Constrained",
    "text": "6.7 Destination Constrained\n\ndecSIM &lt;- glm(formula = TRIPS ~ \n                DESTIN_SZ + \n                log(ORIGIN_AGE25_64) + \n                log(dist),\n              family = poisson(link = \"log\"),\n              data = SIM_data,\n              na.action = na.exclude)\nsummary(decSIM)\n\n\nCall:\nglm(formula = TRIPS ~ DESTIN_SZ + log(ORIGIN_AGE25_64) + log(dist), \n    family = poisson(link = \"log\"), data = SIM_data, na.action = na.exclude)\n\nCoefficients:\n                       Estimate Std. Error   z value Pr(&gt;|z|)    \n(Intercept)          19.4822997  0.0050784  3836.298  &lt; 2e-16 ***\nDESTIN_SZAMSZ02       0.1263056  0.0049743    25.392  &lt; 2e-16 ***\nDESTIN_SZAMSZ03       0.0421788  0.0049859     8.460  &lt; 2e-16 ***\nDESTIN_SZAMSZ04      -1.1668479  0.0074254  -157.143  &lt; 2e-16 ***\nDESTIN_SZAMSZ05      -1.2586639  0.0075854  -165.931  &lt; 2e-16 ***\nDESTIN_SZAMSZ06      -1.1414791  0.0073474  -155.359  &lt; 2e-16 ***\nDESTIN_SZAMSZ07      -1.5565804  0.0109476  -142.185  &lt; 2e-16 ***\nDESTIN_SZAMSZ08      -0.3990754  0.0074159   -53.813  &lt; 2e-16 ***\nDESTIN_SZAMSZ09      -1.0109118  0.0076802  -131.626  &lt; 2e-16 ***\nDESTIN_SZAMSZ10       0.0159285  0.0051765     3.077  0.00209 ** \nDESTIN_SZAMSZ11      -0.3653273  0.0094866   -38.510  &lt; 2e-16 ***\nDESTIN_SZAMSZ12       0.5297606  0.0053243    99.500  &lt; 2e-16 ***\nDESTIN_SZBDSZ01       1.0394822  0.0044226   235.037  &lt; 2e-16 ***\nDESTIN_SZBDSZ02       0.1956964  0.0059564    32.855  &lt; 2e-16 ***\nDESTIN_SZBDSZ03       0.3209267  0.0053718    59.742  &lt; 2e-16 ***\nDESTIN_SZBDSZ04       1.2429874  0.0043104   288.370  &lt; 2e-16 ***\nDESTIN_SZBDSZ05       0.8535842  0.0046360   184.122  &lt; 2e-16 ***\nDESTIN_SZBDSZ06       0.5181443  0.0053736    96.423  &lt; 2e-16 ***\nDESTIN_SZBDSZ07      -0.5849371  0.0110468   -52.951  &lt; 2e-16 ***\nDESTIN_SZBDSZ08      -1.2871050  0.0128623  -100.068  &lt; 2e-16 ***\nDESTIN_SZBKSZ01      -1.0633560  0.0077771  -136.730  &lt; 2e-16 ***\nDESTIN_SZBKSZ02      -0.4065316  0.0066712   -60.938  &lt; 2e-16 ***\nDESTIN_SZBKSZ03      -0.6815674  0.0066509  -102.477  &lt; 2e-16 ***\nDESTIN_SZBKSZ04      -0.4185485  0.0058306   -71.785  &lt; 2e-16 ***\nDESTIN_SZBKSZ05      -0.8887654  0.0073867  -120.319  &lt; 2e-16 ***\nDESTIN_SZBKSZ06      -0.9436078  0.0068625  -137.501  &lt; 2e-16 ***\nDESTIN_SZBKSZ07      -0.0067325  0.0048408    -1.391  0.16430    \nDESTIN_SZBKSZ08      -1.2680903  0.0079177  -160.160  &lt; 2e-16 ***\nDESTIN_SZBKSZ09      -0.0350151  0.0054287    -6.450 1.12e-10 ***\nDESTIN_SZBLSZ01      -0.3045203  0.0081978   -37.146  &lt; 2e-16 ***\nDESTIN_SZBLSZ02       0.6432424  0.0074449    86.400  &lt; 2e-16 ***\nDESTIN_SZBLSZ03       1.9595113  0.0084705   231.333  &lt; 2e-16 ***\nDESTIN_SZBLSZ04       0.0149756  0.0172081     0.870  0.38415    \nDESTIN_SZBMSZ01      -0.0378127  0.0055294    -6.838 8.00e-12 ***\nDESTIN_SZBMSZ02      -0.8458055  0.0054043  -156.505  &lt; 2e-16 ***\nDESTIN_SZBMSZ03      -1.1334399  0.0063720  -177.878  &lt; 2e-16 ***\nDESTIN_SZBMSZ04      -1.1164759  0.0057743  -193.353  &lt; 2e-16 ***\nDESTIN_SZBMSZ05      -1.1078742  0.0078703  -140.766  &lt; 2e-16 ***\nDESTIN_SZBMSZ06      -2.2787234  0.0155126  -146.895  &lt; 2e-16 ***\nDESTIN_SZBMSZ07      -0.2739089  0.0051924   -52.752  &lt; 2e-16 ***\nDESTIN_SZBMSZ08      -1.6825978  0.0071842  -234.209  &lt; 2e-16 ***\nDESTIN_SZBMSZ09      -3.0047801  0.0159980  -187.823  &lt; 2e-16 ***\nDESTIN_SZBMSZ10      -2.2232689  0.0096907  -229.423  &lt; 2e-16 ***\nDESTIN_SZBMSZ11      -1.9657136  0.0086445  -227.394  &lt; 2e-16 ***\nDESTIN_SZBMSZ12      -1.5359286  0.0089658  -171.310  &lt; 2e-16 ***\nDESTIN_SZBMSZ13      -0.5657561  0.0059960   -94.355  &lt; 2e-16 ***\nDESTIN_SZBMSZ14      -1.6904858  0.0084858  -199.214  &lt; 2e-16 ***\nDESTIN_SZBMSZ15      -1.5268383  0.0079959  -190.953  &lt; 2e-16 ***\nDESTIN_SZBMSZ16      -2.2045600  0.0130872  -168.452  &lt; 2e-16 ***\nDESTIN_SZBMSZ17      -2.2992381  0.0184895  -124.353  &lt; 2e-16 ***\nDESTIN_SZBPSZ01      -0.8549497  0.0065168  -131.191  &lt; 2e-16 ***\nDESTIN_SZBPSZ02      -1.7470549  0.0095751  -182.457  &lt; 2e-16 ***\nDESTIN_SZBPSZ03      -1.4015145  0.0090888  -154.203  &lt; 2e-16 ***\nDESTIN_SZBPSZ04      -0.5250632  0.0066496   -78.962  &lt; 2e-16 ***\nDESTIN_SZBPSZ05       0.3413171  0.0046404    73.553  &lt; 2e-16 ***\nDESTIN_SZBPSZ06      -0.8569188  0.0090795   -94.380  &lt; 2e-16 ***\nDESTIN_SZBPSZ07      -0.0751284  0.0089704    -8.375  &lt; 2e-16 ***\nDESTIN_SZBSSZ01       0.1015228  0.0055735    18.215  &lt; 2e-16 ***\nDESTIN_SZBSSZ02      -0.7066412  0.0063845  -110.682  &lt; 2e-16 ***\nDESTIN_SZBSSZ03       0.1622730  0.0046689    34.756  &lt; 2e-16 ***\nDESTIN_SZBTSZ01       0.5470615  0.0047984   114.009  &lt; 2e-16 ***\nDESTIN_SZBTSZ02      -0.1393371  0.0078266   -17.803  &lt; 2e-16 ***\nDESTIN_SZBTSZ03       0.1474771  0.0059428    24.816  &lt; 2e-16 ***\nDESTIN_SZBTSZ04      -1.2857827  0.0122000  -105.392  &lt; 2e-16 ***\nDESTIN_SZBTSZ05      -0.2629188  0.0081769   -32.154  &lt; 2e-16 ***\nDESTIN_SZBTSZ06      -0.8319920  0.0081401  -102.209  &lt; 2e-16 ***\nDESTIN_SZBTSZ07      -1.8829448  0.0121227  -155.324  &lt; 2e-16 ***\nDESTIN_SZBTSZ08      -1.5732123  0.0116752  -134.748  &lt; 2e-16 ***\nDESTIN_SZCBSZ01      -3.5334327  0.3333510   -10.600  &lt; 2e-16 ***\nDESTIN_SZCCSZ01      -0.2129306  0.0093782   -22.705  &lt; 2e-16 ***\nDESTIN_SZCHSZ01      -0.1494972  0.0113078   -13.221  &lt; 2e-16 ***\nDESTIN_SZCHSZ02       0.0041774  0.0063195     0.661  0.50860    \nDESTIN_SZCHSZ03       2.5565450  0.0046495   549.857  &lt; 2e-16 ***\nDESTIN_SZCKSZ01       0.0489719  0.0053801     9.102  &lt; 2e-16 ***\nDESTIN_SZCKSZ02      -0.3548993  0.0060671   -58.496  &lt; 2e-16 ***\nDESTIN_SZCKSZ03       0.5386351  0.0044913   119.928  &lt; 2e-16 ***\nDESTIN_SZCKSZ04      -0.4425512  0.0073837   -59.936  &lt; 2e-16 ***\nDESTIN_SZCKSZ05      -0.4092591  0.0077267   -52.967  &lt; 2e-16 ***\nDESTIN_SZCKSZ06       0.2207041  0.0074252    29.724  &lt; 2e-16 ***\nDESTIN_SZCLSZ01       0.2851460  0.0052362    54.457  &lt; 2e-16 ***\nDESTIN_SZCLSZ02      -1.9270528  0.0147688  -130.482  &lt; 2e-16 ***\nDESTIN_SZCLSZ03      -0.6266521  0.0086780   -72.212  &lt; 2e-16 ***\nDESTIN_SZCLSZ04      -0.1335581  0.0054216   -24.634  &lt; 2e-16 ***\nDESTIN_SZCLSZ05      -0.8912963  0.0096015   -92.829  &lt; 2e-16 ***\nDESTIN_SZCLSZ06       0.1781234  0.0048150    36.993  &lt; 2e-16 ***\nDESTIN_SZCLSZ07      -0.5609619  0.0062277   -90.075  &lt; 2e-16 ***\nDESTIN_SZCLSZ08      -0.3875308  0.0068390   -56.665  &lt; 2e-16 ***\nDESTIN_SZCLSZ09       0.2539453  0.0072623    34.968  &lt; 2e-16 ***\nDESTIN_SZDTSZ02      -2.5036295  0.0373421   -67.046  &lt; 2e-16 ***\nDESTIN_SZDTSZ03      -0.8956407  0.0149971   -59.721  &lt; 2e-16 ***\nDESTIN_SZDTSZ13      -1.6562176  0.0175441   -94.403  &lt; 2e-16 ***\nDESTIN_SZGLSZ01      -0.2716152  0.0056553   -48.029  &lt; 2e-16 ***\nDESTIN_SZGLSZ02      -0.1735665  0.0055548   -31.246  &lt; 2e-16 ***\nDESTIN_SZGLSZ03       0.7029507  0.0044934   156.441  &lt; 2e-16 ***\nDESTIN_SZGLSZ04       0.5788027  0.0045449   127.351  &lt; 2e-16 ***\nDESTIN_SZGLSZ05       0.6865291  0.0045131   152.118  &lt; 2e-16 ***\nDESTIN_SZHGSZ01       0.3275950  0.0043866    74.681  &lt; 2e-16 ***\nDESTIN_SZHGSZ02      -0.6326974  0.0063517   -99.610  &lt; 2e-16 ***\nDESTIN_SZHGSZ03      -1.0597982  0.0073914  -143.382  &lt; 2e-16 ***\nDESTIN_SZHGSZ04      -0.2267013  0.0052178   -43.448  &lt; 2e-16 ***\nDESTIN_SZHGSZ05      -0.3063050  0.0055452   -55.238  &lt; 2e-16 ***\nDESTIN_SZHGSZ06      -0.7483961  0.0065544  -114.182  &lt; 2e-16 ***\nDESTIN_SZHGSZ07       0.1096958  0.0051309    21.379  &lt; 2e-16 ***\nDESTIN_SZHGSZ08      -0.1374201  0.0056692   -24.240  &lt; 2e-16 ***\nDESTIN_SZHGSZ09       0.0775400  0.0060230    12.874  &lt; 2e-16 ***\nDESTIN_SZHGSZ10      -3.3017475  0.0289292  -114.132  &lt; 2e-16 ***\nDESTIN_SZJESZ01      -0.0489065  0.0057246    -8.543  &lt; 2e-16 ***\nDESTIN_SZJESZ02      -0.5101614  0.0060074   -84.921  &lt; 2e-16 ***\nDESTIN_SZJESZ03      -0.5328921  0.0064129   -83.097  &lt; 2e-16 ***\nDESTIN_SZJESZ04      -0.7348953  0.0082249   -89.351  &lt; 2e-16 ***\nDESTIN_SZJESZ05      -1.0864570  0.0111740   -97.231  &lt; 2e-16 ***\nDESTIN_SZJESZ06       0.2407920  0.0046801    51.451  &lt; 2e-16 ***\nDESTIN_SZJESZ07      -1.1523093  0.0090103  -127.888  &lt; 2e-16 ***\nDESTIN_SZJESZ08      -0.4627356  0.0094529   -48.952  &lt; 2e-16 ***\nDESTIN_SZJESZ09       0.0528616  0.0068126     7.759 8.53e-15 ***\nDESTIN_SZJESZ10       1.0240660  0.0084045   121.848  &lt; 2e-16 ***\nDESTIN_SZJESZ11       0.7875517  0.0076251   103.284  &lt; 2e-16 ***\nDESTIN_SZJWSZ01      -0.1533418  0.0076198   -20.124  &lt; 2e-16 ***\nDESTIN_SZJWSZ02      -0.0011019  0.0059389    -0.186  0.85280    \nDESTIN_SZJWSZ03       0.9063789  0.0046747   193.892  &lt; 2e-16 ***\nDESTIN_SZJWSZ04       0.7019286  0.0049743   141.112  &lt; 2e-16 ***\nDESTIN_SZJWSZ05      -0.5197057  0.0072971   -71.220  &lt; 2e-16 ***\nDESTIN_SZJWSZ06       0.3350986  0.0061171    54.780  &lt; 2e-16 ***\nDESTIN_SZJWSZ07      -0.5961960  0.0328336   -18.158  &lt; 2e-16 ***\nDESTIN_SZJWSZ08       0.8054662  0.0056006   143.819  &lt; 2e-16 ***\nDESTIN_SZJWSZ09       1.5860146  0.0040282   393.723  &lt; 2e-16 ***\nDESTIN_SZKLSZ01      -0.6500838  0.0063560  -102.279  &lt; 2e-16 ***\nDESTIN_SZKLSZ02      -0.7039434  0.0064465  -109.197  &lt; 2e-16 ***\nDESTIN_SZKLSZ03      -1.1972384  0.0075577  -158.413  &lt; 2e-16 ***\nDESTIN_SZKLSZ04      -1.7172228  0.0097573  -175.993  &lt; 2e-16 ***\nDESTIN_SZKLSZ05      -0.6042386  0.0093730   -64.466  &lt; 2e-16 ***\nDESTIN_SZKLSZ06      -3.0201496  0.0389503   -77.539  &lt; 2e-16 ***\nDESTIN_SZKLSZ07      -1.1522413  0.0076607  -150.409  &lt; 2e-16 ***\nDESTIN_SZKLSZ08      -0.6977825  0.0057610  -121.122  &lt; 2e-16 ***\nDESTIN_SZLKSZ01      -0.6895952  0.0268661   -25.668  &lt; 2e-16 ***\nDESTIN_SZMDSZ01      -0.7155951  0.0228203   -31.358  &lt; 2e-16 ***\nDESTIN_SZMDSZ02      -0.8153643  0.0123003   -66.288  &lt; 2e-16 ***\nDESTIN_SZMDSZ03      -2.7745226  0.0301326   -92.077  &lt; 2e-16 ***\nDESTIN_SZMPSZ01      -0.5492095  0.0087198   -62.984  &lt; 2e-16 ***\nDESTIN_SZMPSZ02      -0.6104744  0.0069346   -88.033  &lt; 2e-16 ***\nDESTIN_SZMPSZ03       0.2775047  0.0054964    50.489  &lt; 2e-16 ***\nDESTIN_SZMUSZ02      -2.6322870  0.0214943  -122.464  &lt; 2e-16 ***\nDESTIN_SZNTSZ01      -4.0762008  0.0531046   -76.758  &lt; 2e-16 ***\nDESTIN_SZNTSZ02      -1.9765545  0.0125659  -157.296  &lt; 2e-16 ***\nDESTIN_SZNTSZ03      -1.4563069  0.0085433  -170.462  &lt; 2e-16 ***\nDESTIN_SZNTSZ05      -2.0125598  0.0270737   -74.336  &lt; 2e-16 ***\nDESTIN_SZNTSZ06      -3.0145357  0.0504986   -59.695  &lt; 2e-16 ***\nDESTIN_SZNVSZ01      -0.4693625  0.0053866   -87.135  &lt; 2e-16 ***\nDESTIN_SZNVSZ02      -0.4525631  0.0060428   -74.894  &lt; 2e-16 ***\nDESTIN_SZNVSZ03      -0.4821492  0.0064725   -74.492  &lt; 2e-16 ***\nDESTIN_SZNVSZ04      -1.8929756  0.0128397  -147.432  &lt; 2e-16 ***\nDESTIN_SZNVSZ05      -1.4501752  0.0099737  -145.400  &lt; 2e-16 ***\nDESTIN_SZPGSZ01      -1.2305867  0.0174321   -70.593  &lt; 2e-16 ***\nDESTIN_SZPGSZ02      -0.8232919  0.0080153  -102.715  &lt; 2e-16 ***\nDESTIN_SZPGSZ03       0.2138480  0.0050850    42.054  &lt; 2e-16 ***\nDESTIN_SZPGSZ04       0.1045757  0.0053579    19.518  &lt; 2e-16 ***\nDESTIN_SZPGSZ05      -0.7542450  0.0088883   -84.858  &lt; 2e-16 ***\nDESTIN_SZPLSZ01      -0.0098642  0.0080428    -1.226  0.22003    \nDESTIN_SZPLSZ02      -1.2630412  0.0152594   -82.771  &lt; 2e-16 ***\nDESTIN_SZPLSZ03      -0.1554479  0.0108611   -14.312  &lt; 2e-16 ***\nDESTIN_SZPLSZ04      -1.5505819  0.0114768  -135.105  &lt; 2e-16 ***\nDESTIN_SZPLSZ05      -0.2417805  0.0130391   -18.543  &lt; 2e-16 ***\nDESTIN_SZPNSZ01       0.7926715  0.0073628   107.659  &lt; 2e-16 ***\nDESTIN_SZPNSZ02       2.1914920  0.0073537   298.013  &lt; 2e-16 ***\nDESTIN_SZPNSZ03       1.0246845  0.0086874   117.951  &lt; 2e-16 ***\nDESTIN_SZPNSZ04       2.5522612  0.0091789   278.057  &lt; 2e-16 ***\nDESTIN_SZPNSZ05       1.7995301  0.0138562   129.872  &lt; 2e-16 ***\nDESTIN_SZPRSZ01      -0.6576686  0.0096037   -68.481  &lt; 2e-16 ***\nDESTIN_SZPRSZ02       0.3113532  0.0059851    52.021  &lt; 2e-16 ***\nDESTIN_SZPRSZ03       0.9255296  0.0044779   206.687  &lt; 2e-16 ***\nDESTIN_SZPRSZ04      -0.0028578  0.0093218    -0.307  0.75917    \nDESTIN_SZPRSZ05       0.2457863  0.0058261    42.187  &lt; 2e-16 ***\nDESTIN_SZPRSZ06       0.3692137  0.0064542    57.205  &lt; 2e-16 ***\nDESTIN_SZPRSZ07      -1.6733306  0.0138440  -120.871  &lt; 2e-16 ***\nDESTIN_SZPRSZ08      -0.2221048  0.0074846   -29.675  &lt; 2e-16 ***\nDESTIN_SZQTSZ01      -1.0185488  0.0093179  -109.311  &lt; 2e-16 ***\nDESTIN_SZQTSZ02      -1.2802688  0.0081670  -156.761  &lt; 2e-16 ***\nDESTIN_SZQTSZ03      -1.3322708  0.0079106  -168.415  &lt; 2e-16 ***\nDESTIN_SZQTSZ04      -1.1803631  0.0077366  -152.568  &lt; 2e-16 ***\nDESTIN_SZQTSZ05      -1.2215818  0.0072829  -167.734  &lt; 2e-16 ***\nDESTIN_SZQTSZ06      -1.3213145  0.0074858  -176.509  &lt; 2e-16 ***\nDESTIN_SZQTSZ07      -1.6426306  0.0123347  -133.171  &lt; 2e-16 ***\nDESTIN_SZQTSZ08      -0.2224169  0.0058405   -38.082  &lt; 2e-16 ***\nDESTIN_SZQTSZ09      -0.8142678  0.0069796  -116.665  &lt; 2e-16 ***\nDESTIN_SZQTSZ10      -0.1090496  0.0062573   -17.428  &lt; 2e-16 ***\nDESTIN_SZQTSZ11      -0.0108951  0.0061145    -1.782  0.07477 .  \nDESTIN_SZQTSZ12      -0.8582515  0.0090243   -95.105  &lt; 2e-16 ***\nDESTIN_SZQTSZ13       0.1834409  0.0065231    28.122  &lt; 2e-16 ***\nDESTIN_SZQTSZ14       0.1994454  0.0073615    27.093  &lt; 2e-16 ***\nDESTIN_SZQTSZ15       0.6740197  0.0088699    75.990  &lt; 2e-16 ***\nDESTIN_SZRCSZ01      -0.7746427  0.0079375   -97.593  &lt; 2e-16 ***\nDESTIN_SZRCSZ06      -1.4394098  0.0209931   -68.566  &lt; 2e-16 ***\nDESTIN_SZRVSZ01      -2.6060495  0.0175759  -148.274  &lt; 2e-16 ***\nDESTIN_SZRVSZ02      -2.5823769  0.0354706   -72.803  &lt; 2e-16 ***\nDESTIN_SZRVSZ03      -2.5890601  0.0152644  -169.614  &lt; 2e-16 ***\nDESTIN_SZRVSZ04      -2.2277482  0.0165661  -134.477  &lt; 2e-16 ***\nDESTIN_SZRVSZ05      -3.8610445  0.0298251  -129.456  &lt; 2e-16 ***\nDESTIN_SZSBSZ01      -1.2035529  0.0103954  -115.777  &lt; 2e-16 ***\nDESTIN_SZSBSZ02      -1.0267199  0.0085239  -120.452  &lt; 2e-16 ***\nDESTIN_SZSBSZ03       0.5977382  0.0050336   118.750  &lt; 2e-16 ***\nDESTIN_SZSBSZ04       0.5362769  0.0060573    88.534  &lt; 2e-16 ***\nDESTIN_SZSBSZ05      -1.0440525  0.0089622  -116.495  &lt; 2e-16 ***\nDESTIN_SZSBSZ06      -1.3939595  0.0246679   -56.509  &lt; 2e-16 ***\nDESTIN_SZSBSZ07       0.1029116  0.0235414     4.372 1.23e-05 ***\nDESTIN_SZSBSZ08       1.3564902  0.0060529   224.105  &lt; 2e-16 ***\nDESTIN_SZSBSZ09       0.4573712  0.0056585    80.829  &lt; 2e-16 ***\nDESTIN_SZSESZ02      -0.1553609  0.0056716   -27.393  &lt; 2e-16 ***\nDESTIN_SZSESZ03       0.5412776  0.0043801   123.576  &lt; 2e-16 ***\nDESTIN_SZSESZ04      -0.6382091  0.0065411   -97.568  &lt; 2e-16 ***\nDESTIN_SZSESZ05      -0.3332093  0.0055002   -60.581  &lt; 2e-16 ***\nDESTIN_SZSESZ06      -0.3085951  0.0072340   -42.659  &lt; 2e-16 ***\nDESTIN_SZSESZ07      -2.6237684  0.0245753  -106.764  &lt; 2e-16 ***\nDESTIN_SZSGSZ01      -0.1062372  0.0066634   -15.943  &lt; 2e-16 ***\nDESTIN_SZSGSZ02      -0.0475568  0.0058908    -8.073 6.85e-16 ***\nDESTIN_SZSGSZ03      -0.2118402  0.0055056   -38.477  &lt; 2e-16 ***\nDESTIN_SZSGSZ04      -0.1099618  0.0054841   -20.051  &lt; 2e-16 ***\nDESTIN_SZSGSZ05      -2.1556963  0.0113821  -189.394  &lt; 2e-16 ***\nDESTIN_SZSGSZ06       0.4416352  0.0043842   100.734  &lt; 2e-16 ***\nDESTIN_SZSGSZ07      -0.3949335  0.0059250   -66.655  &lt; 2e-16 ***\nDESTIN_SZSISZ01      -1.2847094  0.0288610   -44.514  &lt; 2e-16 ***\nDESTIN_SZSKSZ01       0.3089834  0.0082924    37.261  &lt; 2e-16 ***\nDESTIN_SZSKSZ02       1.4139309  0.0059981   235.729  &lt; 2e-16 ***\nDESTIN_SZSKSZ03       0.2427688  0.0067373    36.034  &lt; 2e-16 ***\nDESTIN_SZSKSZ04      -0.2527488  0.0161286   -15.671  &lt; 2e-16 ***\nDESTIN_SZSKSZ05       0.6046051  0.0122766    49.249  &lt; 2e-16 ***\nDESTIN_SZSLSZ01      -0.3927387  0.0099790   -39.356  &lt; 2e-16 ***\nDESTIN_SZSLSZ04      -0.5942110  0.0086225   -68.914  &lt; 2e-16 ***\nDESTIN_SZSRSZ01      -2.6855766  0.0138707  -193.615  &lt; 2e-16 ***\nDESTIN_SZTHSZ01      -3.2750084  0.0402668   -81.333  &lt; 2e-16 ***\nDESTIN_SZTHSZ03      -1.7964408  0.0261810   -68.616  &lt; 2e-16 ***\nDESTIN_SZTHSZ04      -2.6323994  0.0241831  -108.853  &lt; 2e-16 ***\nDESTIN_SZTHSZ06      -1.9444390  0.0166052  -117.098  &lt; 2e-16 ***\nDESTIN_SZTMSZ01       0.3856054  0.0063086    61.123  &lt; 2e-16 ***\nDESTIN_SZTMSZ02       1.8586526  0.0039229   473.790  &lt; 2e-16 ***\nDESTIN_SZTMSZ03       1.2601385  0.0044018   286.278  &lt; 2e-16 ***\nDESTIN_SZTMSZ04       1.5884327  0.0043362   366.316  &lt; 2e-16 ***\nDESTIN_SZTMSZ05       1.0377553  0.0063271   164.018  &lt; 2e-16 ***\nDESTIN_SZTNSZ01      -0.9954275  0.0080345  -123.895  &lt; 2e-16 ***\nDESTIN_SZTNSZ02      -2.1032696  0.0109228  -192.557  &lt; 2e-16 ***\nDESTIN_SZTNSZ03      -2.0044892  0.0129215  -155.128  &lt; 2e-16 ***\nDESTIN_SZTNSZ04      -0.9750326  0.0081677  -119.377  &lt; 2e-16 ***\nDESTIN_SZTPSZ01      -0.7788383  0.0068769  -113.254  &lt; 2e-16 ***\nDESTIN_SZTPSZ02       0.2866080  0.0042843    66.898  &lt; 2e-16 ***\nDESTIN_SZTPSZ03      -0.8749841  0.0065470  -133.646  &lt; 2e-16 ***\nDESTIN_SZTPSZ04      -1.6852792  0.0081488  -206.812  &lt; 2e-16 ***\nDESTIN_SZTPSZ05      -1.3721346  0.0068230  -201.104  &lt; 2e-16 ***\nDESTIN_SZTPSZ06      -0.7832133  0.0069164  -113.239  &lt; 2e-16 ***\nDESTIN_SZTPSZ07      -2.3109126  0.0130830  -176.635  &lt; 2e-16 ***\nDESTIN_SZTPSZ08      -1.6406531  0.0104897  -156.406  &lt; 2e-16 ***\nDESTIN_SZTPSZ09      -0.5636273  0.0076848   -73.343  &lt; 2e-16 ***\nDESTIN_SZTPSZ10      -1.5640843  0.0099984  -156.433  &lt; 2e-16 ***\nDESTIN_SZTPSZ11      -0.3700482  0.0059834   -61.846  &lt; 2e-16 ***\nDESTIN_SZTPSZ12      -0.8828228  0.0072302  -122.102  &lt; 2e-16 ***\nDESTIN_SZTSSZ01       0.3529526  0.0221887    15.907  &lt; 2e-16 ***\nDESTIN_SZTSSZ02       1.0265792  0.0153515    66.871  &lt; 2e-16 ***\nDESTIN_SZTSSZ03       1.9647347  0.0092388   212.662  &lt; 2e-16 ***\nDESTIN_SZTSSZ04       1.8649836  0.0089976   207.275  &lt; 2e-16 ***\nDESTIN_SZTSSZ05       2.8437058  0.0085738   331.673  &lt; 2e-16 ***\nDESTIN_SZTSSZ06       3.4238870  0.0161304   212.263  &lt; 2e-16 ***\nDESTIN_SZWCSZ01       2.9550693  0.0051690   571.689  &lt; 2e-16 ***\nDESTIN_SZWCSZ02      -0.8214103  0.0129213   -63.570  &lt; 2e-16 ***\nDESTIN_SZWCSZ03      -1.7393427  0.0347472   -50.057  &lt; 2e-16 ***\nDESTIN_SZWDSZ01       1.3424417  0.0039957   335.972  &lt; 2e-16 ***\nDESTIN_SZWDSZ02      -0.2103694  0.0068601   -30.666  &lt; 2e-16 ***\nDESTIN_SZWDSZ03       0.8268551  0.0051363   160.983  &lt; 2e-16 ***\nDESTIN_SZWDSZ04      -0.0643997  0.0079076    -8.144 3.82e-16 ***\nDESTIN_SZWDSZ05       0.0451985  0.0075732     5.968 2.40e-09 ***\nDESTIN_SZWDSZ06       0.6981330  0.0051936   134.423  &lt; 2e-16 ***\nDESTIN_SZWDSZ07      -0.0403233  0.0067749    -5.952 2.65e-09 ***\nDESTIN_SZWDSZ08       0.2850631  0.0069225    41.179  &lt; 2e-16 ***\nDESTIN_SZWDSZ09       1.3016106  0.0050365   258.433  &lt; 2e-16 ***\nDESTIN_SZYSSZ01       0.7598564  0.0044144   172.133  &lt; 2e-16 ***\nDESTIN_SZYSSZ02       0.2648061  0.0058239    45.469  &lt; 2e-16 ***\nDESTIN_SZYSSZ03      -0.0412163  0.0068337    -6.031 1.63e-09 ***\nDESTIN_SZYSSZ04      -0.0561054  0.0060829    -9.223  &lt; 2e-16 ***\nDESTIN_SZYSSZ05      -0.9970159  0.0121827   -81.839  &lt; 2e-16 ***\nDESTIN_SZYSSZ06      -1.3808376  0.0125738  -109.819  &lt; 2e-16 ***\nDESTIN_SZYSSZ07      -0.7128364  0.0165296   -43.125  &lt; 2e-16 ***\nDESTIN_SZYSSZ08       0.9409510  0.0045886   205.064  &lt; 2e-16 ***\nDESTIN_SZYSSZ09       0.3738436  0.0047971    77.930  &lt; 2e-16 ***\nlog(ORIGIN_AGE25_64)  0.1928847  0.0001667  1157.214  &lt; 2e-16 ***\nlog(dist)            -1.7828141  0.0004794 -3718.501  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 36117615  on 14273  degrees of freedom\nResidual deviance: 12319763  on 13992  degrees of freedom\nAIC: 12404881\n\nNumber of Fisher Scoring iterations: 7\n\n\nWe can examine how the constraints hold for destinations this time.\n\nCalcRSquared(decSIM$data$TRIPS, decSIM$fitted.values)\n\n[1] 0.496166"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/THE1.html#global-spatial-autocorrelation-statistics",
    "href": "Take-Home_Ex/Take-Home_Ex1/THE1.html#global-spatial-autocorrelation-statistics",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "5.2 Global Spatial Autocorrelation Statistics",
    "text": "5.2 Global Spatial Autocorrelation Statistics\nWe will perform Moran’s I statistical testing by using global_moran_perm() of spdep. The Global Moran’s I Permutation Test is a statistical method used in spatial analysis to assess the significance of spatial autocorrelation in a dataset. Spatial autocorrelation refers to the degree to which a variable is correlated with itself across space, indicating patterns such as clustering or dispersion.\n\n\n\n\n\n\nInterpretation of Moran’s I\n\n\n\n\n\nThe Moran I statistic ranges from -1 to 1. If the Moran I is:\n\npositive (I&gt;0): Clustered, observations tend to be similar\nnegative (I&lt;0): Disperse, observations tend to be dissimilar\napproximately zero: observations arranged randomly over space\n\n\n\n\nThe code chunk below performs Moran’s I statistical testing with the adaptive weight matrix (i.e. wm_ad), using the null and alternative hypotheses as follows:\nH0: The observed spatial patterns of proportion of bus ridership in Singapore are not clustered (i.e. either random or dispersed). H1: The observed spatial patterns of proportion of bus ridership in Singapore are clustered.\nA total of 100 simulations will be performed using the original and logged values with a seed number 1234. set.seed() function allows us to create reproducible results.\n\nset.seed(1234)\n\n\nWeekday MorningWeekday AfternoonWeekend/Holiday MorningWeekend/Holiday Evening\n\n\nOriginal Data\n\n\nShow the code\ngmp_WDM &lt;- global_moran_perm(wm_ad$WDM,\n                  wm_ad$nb,\n                  wm_ad$wt,\n                  nsim = 99)\ngmp_WDM\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.19938, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\nLog-Transformed Variable\n\n\nShow the code\ngmp_logWDM &lt;- global_moran_perm(wm_ad$logWDM,\n                  wm_ad$nb,\n                  wm_ad$wt,\n                  nsim = 99)\ngmp_logWDM\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.5159, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\n\nOriginal Data\n\n\nShow the code\ngmp_WDA &lt;- global_moran_perm(wm_ad$WDA,\n                  wm_ad$nb,\n                  wm_ad$wt,\n                  nsim = 99)\ngmp_WDA\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.059528, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\nLog-Transformed Data\n\n\nShow the code\ngmp_logWDA &lt;- global_moran_perm(wm_ad$logWDA,\n                  wm_ad$nb,\n                  wm_ad$wt,\n                  nsim = 99)\ngmp_logWDA\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.35711, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\n\nOriginal Data\n\n\nShow the code\ngmp_WEM &lt;- global_moran_perm(wm_ad$WEM,\n                  wm_ad$nb,\n                  wm_ad$wt,\n                  nsim = 99)\ngmp_WEM\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.15158, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\nLog-Transformed Data\n\n\nShow the code\ngmp_logWEM &lt;- global_moran_perm(wm_ad$logWEM,\n                  wm_ad$nb,\n                  wm_ad$wt,\n                  nsim = 99)\ngmp_logWEM\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.49385, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\n\nOriginal Data\n\n\nShow the code\ngmp_WEE &lt;- global_moran_perm(wm_ad$WEE,\n                  wm_ad$nb,\n                  wm_ad$wt,\n                  nsim = 99)\ngmp_WEE\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.097321, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\nLog-Transformed Data\n\n\nShow the code\ngmp_logWEE &lt;- global_moran_perm(wm_ad$logWEE,\n                  wm_ad$nb,\n                  wm_ad$wt,\n                  nsim = 99)\ngmp_logWEE\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.40407, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\n\n\nAcross the 4 peak periods, the permutation test generated low p-values of &lt;0.05. This indicates that we can reject the null hypothesis at the 95% level of confidence, and conclude that for each of the 4 peak periods, the overall bus ridership across Singapore is spatially clustered (since positive Moran’s I value is obtained). The higher Moran’s I values for logged-transformed variables suggests a higher level of clustering compared to the original ridership values."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex1/THE1.html#spatial-weights-matrix",
    "href": "Take-Home_Ex/Take-Home_Ex1/THE1.html#spatial-weights-matrix",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "5.1 Spatial Weights Matrix",
    "text": "5.1 Spatial Weights Matrix\nTo compute the local spatial autocorrelation statistics, we first need to construct a spatial weights of Singapore. Spatial relationships are multi-directional and multi-lateral. We can use spatial weights to define who the neighbours of the spatial units.\nThere are two common methods of spatial weights: contiguity-based and distance-based.\nContiguity-based: Neighbours share a common boundary, which can be further distinguished between a Rook and a Queen criterion of contiguity. Rook contiguity defines neighbours by the existence of a common edge between two spatial units. In Queen contiguity defines neighbours as spatial units sharing a common edge or a common vertex.\nDistance-based: Assign higher weights to pairs of locations that are closer to each other and lower weights to pairs that are further. This can be further distinguished by fixed weighting, adaptive weighting and inverse-distance weighting schemes. Fixed weighting scheme considers two regions are neighbours if they are within a specified distance from one another. For adaptive weighting scheme, each region will have the same number of neighbours. The number of neighbour is specified beforehand, where k = number of neighbours. Inverse distance method considers that the closer two features are in space, the more likely they are to interact/influence each other.\nFor this study, we will be using distance-based weight matrix as there are areas where bus stops are sparse (such as Lim Chu Kang and Mandai) and isolated (for example, Tanah Merah Ferry, Changi Naval Base, Resort World Sentosa, Marina Bay Cruise Centre). Consequently, contiguity-based matrix may yield many regions with no neighbours, making it not suitable for our analysis.\n\nFixed Distance Weight MatrixAdaptive Distance-Based Weight MatrixInverse Distance Weights (IDW)\n\n\n\nStep 1: Determine Cut-Off Distance Limit\nFirst step is to determine the upper distance limit to ensure that each hexagon has at least 1 neighbour.\nThe following functions can be used:\n\nst_knn() of sfdep is used to identify neighbors based on k (e.g. k = 8 indicates the nearest eight neighbours). The output is a neighbours list of class nb. If polygon geometry is provided, the centroids of the polygon will be used for calculation.\nst_nb_dists() of sfdep is used to calculate the nearest neighbour distance. The output is a list of distances for each observation’s neighbors list.\nunlist() of Base R is then used to return the output as a vector so that the summary statistics of the nearest neighbour distances can be derived.\n\n\ngeo &lt;- sf::st_geometry(origin_gridwgeom)\nnb &lt;- st_knn(geo, \n             longlat = TRUE)\ndists &lt;- unlist(st_nb_dists(geo, nb))\n\n\n\nStep 2: Derive Summary Stats\nWe can derive summary statistics of the nearest neighbour distances vector (i.e. dists) by using the code chunk below.\n\nsummary(dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  500.0   500.0   500.0   503.4   500.0  2291.3 \n\n\nThe maximum nearest neighbour distance is 2291.3m, thus we will use threshold value of 2292m to ensure each spatial unit has a minimum of 1 neighbour.\n\n\nStep 3: Compute fixed distance weight\nNow we will go ahead to compute the fixed distance weights by using following functions:\nst_dists_band() of sfdep is used to identify neighbors based on a distance band (i.e. 1000m). The output is a list of neighbours (i.e. nb). st_weights() is then used to calculate polygon spatial weights of the nb list. Note that the default style argument is set to “W” for row standardized weights, and the default allow_zero is set to TRUE, assigns zero as lagged value to zone without neighbors.\n\nwm_fd &lt;- origin_gridwgeom %&gt;%\n  mutate(nb = st_dist_band(geo,\n                           upper = 2992),\n               wt = st_weights(nb),\n               .before = 1)\n\n\n\nStep 4: Observations\n\n\nShow the code\nsummary(wm_fd$nb)\n\n\nNeighbour list object:\nNumber of regions: 1503 \nNumber of nonzero links: 106746 \nPercentage nonzero weights: 4.725346 \nAverage number of links: 71.02196 \nLink number distribution:\n\n  1   2   4   9  10  11  12  13  14  15  16  17  19  20  21  22  23  24  25  26 \n  1   1   1   4   2   2   3   1   2   3   3   1   2   2   1   1   6   5   3   3 \n 27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46 \n  8   9   4   3   7   2   7   6   4   9   9   5  13  10   7   9   9  12  13  16 \n 47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  66 \n 15  11  13  19  18  15  19  19  24  16  12  22  20  29  24  25   9  33  27  15 \n 67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86 \n 20  24  21  24  26  23  24  20  30  19  20  24  23  22  32  29  20  23  26  33 \n 87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 \n 29  30  31  31  25  24  22  23  18  27  18  26  20  13  17  12  16   6  14   7 \n107 108 109 110 \n  5   6   3   3 \n1 least connected region:\n1503 with 1 link\n3 most connected regions:\n1013 1024 1050 with 110 links\n\n\nFrom the result above, we can confirm that all hexagons have at least one neighbour and there are 3 well-connected hexagons with 110 neighbours. We can also identify an average of 71 neighbours per hexagon using the distance-based weight matrix.\n\n\n\nA characteristic of fixed distance weights matrix is that more densely settled areas (town, residential neighbourhoods) tend to have more neigbours while less densely settle areas (military camps, industrial estates) tend to have less neighbours. To overcome the issue of fixed distance weight matrix where there is uneven distribution of neighbours, we can directly control the number of neighbours using k-nearest neighbours by setting the value of k in the code chunk below.\nAs a rule-of-thumb, we will set k = 8 i.e., all hexagons will have 8 neighbours.\n\nwm_ad &lt;- origin_gridwgeom %&gt;% \n  mutate(nb = st_knn(geo,\n                     k=8),\n         wt = st_weights(nb),\n               .before = 1)\n\nhead(wm_ad, n=3)\n\nSimple feature collection with 3 features and 13 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3720.122 ymin: 27925.48 xmax: 4720.122 ymax: 31100.9\nProjected CRS: SVY21 / Singapore TM\n                           nb\n1   2, 4, 5, 8, 9, 12, 22, 23\n2   1, 4, 5, 8, 9, 12, 22, 23\n3 5, 6, 9, 10, 13, 14, 16, 17\n                                                      wt grid_id busstops\n1 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125      34        1\n2 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125      65        1\n3 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125      99        1\n             LOC_DESC WDA WDM WEM WEE   logWDM   logWDA   logWEM   logWEE\n1   AFT TUAS STH BLVD 417  62   5  65 4.127134 6.033086 1.609438 4.174387\n2 BEF TUAS STH AVE 14 110  50  24  26 3.912023 4.700480 3.178054 3.258097\n3            YONG NAM 249  44  27  54 3.784190 5.517453 3.295837 3.988984\n               area_hexagon_grid\n1 POLYGON ((3970.122 27925.48...\n2 POLYGON ((4220.122 28358.49...\n3 POLYGON ((4470.122 30523.55...\n\n\nThe results show that the weights of the neighbours have been assigned to 1/8 (0.125) of the total weight, representing each of the 8 neighbours.\n\n\nInverse distance weights takes into account the decay functions of distance.\nWe can derive spatial weight matrix based on inverse distance method using the following functions:\n\nst_knn() of sfdep is used to identify neighbors based on k (e.g. k = 8 indicates the nearest eight neighbours). The output is a neighbours list of class nb. If polygon geometry is provided, the centroids of the polygon will be used for calculation.\nst_inverse_distance() is then used to calculate inverse distance weights of neighbours on the nb list.\n\nFor our analysis, we will set the number of neighbours to 8.\n\nwm_idw &lt;- origin_gridwgeom %&gt;%\n  mutate(nb = st_knn(geo,\n                     k=8),\n         wts = st_inverse_distance(nb, geo,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\nhead(wm_idw, n=3)\n\nSimple feature collection with 3 features and 13 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3720.122 ymin: 27925.48 xmax: 4720.122 ymax: 31100.9\nProjected CRS: SVY21 / Singapore TM\n                           nb\n1   2, 4, 5, 8, 9, 12, 22, 23\n2   1, 4, 5, 8, 9, 12, 22, 23\n3 5, 6, 9, 10, 13, 14, 16, 17\n                                                                                                             wts\n1 0.0020000000, 0.0011547005, 0.0004364358, 0.0007559289, 0.0005000000, 0.0005547002, 0.0005547002, 0.0004588315\n2 0.0020000000, 0.0020000000, 0.0005547002, 0.0011547005, 0.0006666667, 0.0007559289, 0.0006666667, 0.0005773503\n3 0.0020000000, 0.0020000000, 0.0010000000, 0.0020000000, 0.0011547005, 0.0011547005, 0.0007559289, 0.0010000000\n  grid_id busstops            LOC_DESC WDA WDM WEM WEE   logWDM   logWDA\n1      34        1   AFT TUAS STH BLVD 417  62   5  65 4.127134 6.033086\n2      65        1 BEF TUAS STH AVE 14 110  50  24  26 3.912023 4.700480\n3      99        1            YONG NAM 249  44  27  54 3.784190 5.517453\n    logWEM   logWEE              area_hexagon_grid\n1 1.609438 4.174387 POLYGON ((3970.122 27925.48...\n2 3.178054 3.258097 POLYGON ((4220.122 28358.49...\n3 3.295837 3.988984 POLYGON ((4470.122 30523.55...\n\n\nThe inverse distance approach is best suited for continuous data or for modeling scenarios where spatial proximity increases the likelihood of interaction or influence between two features. Nevertheless, this method treats every feature as a potential neighbor to every other feature, which can lead to a significant computational burden, especially in the case of large datasets where the volume of calculations required becomes substantial.\n\n\n\nIn summary:\n\nThe number of neighbours using fixed distance method vary widely from 1 to 102. Consequently, the uneven distribution could affect the spatial autocorrelation analysis.\nInverse distance method is computationally intensive as each feature is potentially a neighbour of every other feature.\nSince each hexagon is equally sized, the adaptive distance-based spatial weight matrix would be best suited for our analysis since each centroid can represent each region well."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "",
    "text": "Geographically weighted regression (GWR) is a spatial statistical technique that takes non-stationary variables into consideration (e.g., climate; demographic factors; physical environment characteristics) and models the local relationships between these independent variables and an outcome of interest (also known as dependent variable). In this hands-on exercise, we will learn how to build hedonic pricing models by using GWR methods.\nHedonic pricing models help us understand various factors influence the price of a condo. In essence, it breaks down the price into components that are related to the attributes of the property. The dependent variable is the resale prices of condominium in 2015. The independent variables are divided into either structural and locational."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#importing-geospatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#importing-geospatial-data",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "5.1 Importing geospatial data",
    "text": "5.1 Importing geospatial data\nThe geospatial data used in this hands-on exercise is called MP14_SUBZONE_WEB_PL. It is in ESRI shapefile format. The shapefile consists of URA Master Plan 2014’s planning subzone boundaries. Polygon features are used to represent these geographic boundaries. The GIS data is in svy21 projected coordinates systems.\nThe code chunk below is used to import MP_SUBZONE_WEB_PL shapefile by using st_read() of sf packages.\n\nmpsz = st_read(dsn = \"data/geospatial\", \n               layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\kytjy\\ISSS624\\Hands-on_Ex\\Hands-on_Ex4\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nObservation: - mpsz = A simple feature object.\n\nThe geometry type is multipolygon\nMPSZ simple feature object does not have EPSG information."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#updating-crs-information",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#updating-crs-information",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "5.2 Updating CRS information",
    "text": "5.2 Updating CRS information\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\nThe code chunk below updates the newly imported mpsz with the correct ESPG code (i.e. 3414)\n\nmpsz_svy21 &lt;- st_transform(mpsz, 3414)\n\nst_crs(mpsz_svy21)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nNext, we will reveal the extent (rectangular boundary) of mpsz_svy21 by using st_bbox() of sf package.\n\nst_bbox(mpsz_svy21) #view extent\n\n     xmin      ymin      xmax      ymax \n 2667.538 15748.721 56396.440 50256.334"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#importing-the-aspatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#importing-the-aspatial-data",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "6.1 Importing the aspatial data",
    "text": "6.1 Importing the aspatial data\nThe condo_resale_2015 is in csv file format. The codes chunk below uses read_csv() function of readr package to import condo_resale_2015 into R as a tibble data frame called condo_resale.\n\ncondo_resale &lt;- read_csv('data/aspatial/Condo_resale_2015.csv')\n\nThe codes chunks below uses glimpse() to display the data structure.\n\nglimpse(condo_resale)\n\nRows: 1,436\nColumns: 23\n$ LATITUDE             &lt;dbl&gt; 1.287145, 1.328698, 1.313727, 1.308563, 1.321437,…\n$ LONGITUDE            &lt;dbl&gt; 103.7802, 103.8123, 103.7971, 103.8247, 103.9505,…\n$ POSTCODE             &lt;dbl&gt; 118635, 288420, 267833, 258380, 467169, 466472, 3…\n$ SELLING_PRICE        &lt;dbl&gt; 3000000, 3880000, 3325000, 4250000, 1400000, 1320…\n$ AREA_SQM             &lt;dbl&gt; 309, 290, 248, 127, 145, 139, 218, 141, 165, 168,…\n$ AGE                  &lt;dbl&gt; 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22, 6,…\n$ PROX_CBD             &lt;dbl&gt; 7.941259, 6.609797, 6.898000, 4.038861, 11.783402…\n$ PROX_CHILDCARE       &lt;dbl&gt; 0.16597932, 0.28027246, 0.42922669, 0.39473543, 0…\n$ PROX_ELDERLYCARE     &lt;dbl&gt; 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.121…\n$ PROX_URA_GROWTH_AREA &lt;dbl&gt; 6.618741, 7.505109, 6.463887, 4.906512, 6.410632,…\n$ PROX_HAWKER_MARKET   &lt;dbl&gt; 1.76542207, 0.54507614, 0.37789301, 1.68259969, 0…\n$ PROX_KINDERGARTEN    &lt;dbl&gt; 0.05835552, 0.61592412, 0.14120309, 0.38200076, 0…\n$ PROX_MRT             &lt;dbl&gt; 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.528…\n$ PROX_PARK            &lt;dbl&gt; 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.116…\n$ PROX_PRIMARY_SCH     &lt;dbl&gt; 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.709…\n$ PROX_TOP_PRIMARY_SCH &lt;dbl&gt; 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.709…\n$ PROX_SHOPPING_MALL   &lt;dbl&gt; 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.307…\n$ PROX_SUPERMARKET     &lt;dbl&gt; 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.581…\n$ PROX_BUS_STOP        &lt;dbl&gt; 0.10336166, 0.28673408, 0.28504777, 0.29872340, 0…\n$ NO_Of_UNITS          &lt;dbl&gt; 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34, 3…\n$ FAMILY_FRIENDLY      &lt;dbl&gt; 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n\n\nSee the x-y coordinates column:\n\nhead(condo_resale[, c(\"LONGITUDE\", \"LATITUDE\")], n=5)\n\n# A tibble: 5 × 2\n  LONGITUDE LATITUDE\n      &lt;dbl&gt;    &lt;dbl&gt;\n1      104.     1.29\n2      104.     1.33\n3      104.     1.31\n4      104.     1.31\n5      104.     1.32\n\n\nNext, summary() of base R is used to display the summary statistics of condo_resale tibble data frame.\n\nsummary(condo_resale)\n\n    LATITUDE       LONGITUDE        POSTCODE      SELLING_PRICE     \n Min.   :1.240   Min.   :103.7   Min.   : 18965   Min.   :  540000  \n 1st Qu.:1.309   1st Qu.:103.8   1st Qu.:259849   1st Qu.: 1100000  \n Median :1.328   Median :103.8   Median :469298   Median : 1383222  \n Mean   :1.334   Mean   :103.8   Mean   :440439   Mean   : 1751211  \n 3rd Qu.:1.357   3rd Qu.:103.9   3rd Qu.:589486   3rd Qu.: 1950000  \n Max.   :1.454   Max.   :104.0   Max.   :828833   Max.   :18000000  \n    AREA_SQM          AGE           PROX_CBD       PROX_CHILDCARE    \n Min.   : 34.0   Min.   : 0.00   Min.   : 0.3869   Min.   :0.004927  \n 1st Qu.:103.0   1st Qu.: 5.00   1st Qu.: 5.5574   1st Qu.:0.174481  \n Median :121.0   Median :11.00   Median : 9.3567   Median :0.258135  \n Mean   :136.5   Mean   :12.14   Mean   : 9.3254   Mean   :0.326313  \n 3rd Qu.:156.0   3rd Qu.:18.00   3rd Qu.:12.6661   3rd Qu.:0.368293  \n Max.   :619.0   Max.   :37.00   Max.   :19.1804   Max.   :3.465726  \n PROX_ELDERLYCARE  PROX_URA_GROWTH_AREA PROX_HAWKER_MARKET PROX_KINDERGARTEN \n Min.   :0.05451   Min.   :0.2145       Min.   :0.05182    Min.   :0.004927  \n 1st Qu.:0.61254   1st Qu.:3.1643       1st Qu.:0.55245    1st Qu.:0.276345  \n Median :0.94179   Median :4.6186       Median :0.90842    Median :0.413385  \n Mean   :1.05351   Mean   :4.5981       Mean   :1.27987    Mean   :0.458903  \n 3rd Qu.:1.35122   3rd Qu.:5.7550       3rd Qu.:1.68578    3rd Qu.:0.578474  \n Max.   :3.94916   Max.   :9.1554       Max.   :5.37435    Max.   :2.229045  \n    PROX_MRT         PROX_PARK       PROX_PRIMARY_SCH  PROX_TOP_PRIMARY_SCH\n Min.   :0.05278   Min.   :0.02906   Min.   :0.07711   Min.   :0.07711     \n 1st Qu.:0.34646   1st Qu.:0.26211   1st Qu.:0.44024   1st Qu.:1.34451     \n Median :0.57430   Median :0.39926   Median :0.63505   Median :1.88213     \n Mean   :0.67316   Mean   :0.49802   Mean   :0.75471   Mean   :2.27347     \n 3rd Qu.:0.84844   3rd Qu.:0.65592   3rd Qu.:0.95104   3rd Qu.:2.90954     \n Max.   :3.48037   Max.   :2.16105   Max.   :3.92899   Max.   :6.74819     \n PROX_SHOPPING_MALL PROX_SUPERMARKET PROX_BUS_STOP       NO_Of_UNITS    \n Min.   :0.0000     Min.   :0.0000   Min.   :0.001595   Min.   :  18.0  \n 1st Qu.:0.5258     1st Qu.:0.3695   1st Qu.:0.098356   1st Qu.: 188.8  \n Median :0.9357     Median :0.5687   Median :0.151710   Median : 360.0  \n Mean   :1.0455     Mean   :0.6141   Mean   :0.193974   Mean   : 409.2  \n 3rd Qu.:1.3994     3rd Qu.:0.7862   3rd Qu.:0.220466   3rd Qu.: 590.0  \n Max.   :3.4774     Max.   :2.2441   Max.   :2.476639   Max.   :1703.0  \n FAMILY_FRIENDLY     FREEHOLD      LEASEHOLD_99YR  \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :0.0000   Median :0.0000   Median :0.0000  \n Mean   :0.4868   Mean   :0.4227   Mean   :0.4882  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n\n\n\n6.2 Converting aspatial data frame into a sf object\nCurrently, the condo_resale tibble data frame is aspatial. We will convert it to a sf object. The code chunk below converts condo_resale data frame into a simple feature data frame by using st_as_sf() of sf packages.\n\ncondo_resale.sf &lt;- st_as_sf(condo_resale,\n                            coords = c('LONGITUDE', 'LATITUDE'),\n                            crs = 4326) %&gt;% # World Geodetic System; represents coords in lat and lon; global standard\n  st_transform(crs= 3414)\n\nNotice that st_transform() of sf package is used to convert the coordinates from wgs84 (i.e. crs:4326) to svy21 (i.e. crs=3414).\nNext, head() is used to list the content of condo_resale.sf object.\n\nhead(condo_resale.sf)\n\nSimple feature collection with 6 features and 21 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 22085.12 ymin: 29951.54 xmax: 41042.56 ymax: 34546.2\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 6 × 22\n  POSTCODE SELLING_PRICE AREA_SQM   AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE\n     &lt;dbl&gt;         &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;          &lt;dbl&gt;            &lt;dbl&gt;\n1   118635       3000000      309    30     7.94          0.166            2.52 \n2   288420       3880000      290    32     6.61          0.280            1.93 \n3   267833       3325000      248    33     6.90          0.429            0.502\n4   258380       4250000      127     7     4.04          0.395            1.99 \n5   467169       1400000      145    28    11.8           0.119            1.12 \n6   466472       1320000      139    22    10.3           0.125            0.789\n# ℹ 15 more variables: PROX_URA_GROWTH_AREA &lt;dbl&gt;, PROX_HAWKER_MARKET &lt;dbl&gt;,\n#   PROX_KINDERGARTEN &lt;dbl&gt;, PROX_MRT &lt;dbl&gt;, PROX_PARK &lt;dbl&gt;,\n#   PROX_PRIMARY_SCH &lt;dbl&gt;, PROX_TOP_PRIMARY_SCH &lt;dbl&gt;,\n#   PROX_SHOPPING_MALL &lt;dbl&gt;, PROX_SUPERMARKET &lt;dbl&gt;, PROX_BUS_STOP &lt;dbl&gt;,\n#   NO_Of_UNITS &lt;dbl&gt;, FAMILY_FRIENDLY &lt;dbl&gt;, FREEHOLD &lt;dbl&gt;,\n#   LEASEHOLD_99YR &lt;dbl&gt;, geometry &lt;POINT [m]&gt;\n\n\nNotice that the output is in point feature data frame."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#exploratory-data-analysis-eda",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#exploratory-data-analysis-eda",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "7 Exploratory Data Analysis (EDA)",
    "text": "7 Exploratory Data Analysis (EDA)\nObjective: to use statistical graphics functions of ggplot2 package to perform EDA."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#eda-using-statistical-graphics",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#eda-using-statistical-graphics",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "7.1 EDA using statistical graphics",
    "text": "7.1 EDA using statistical graphics\nWe can plot the distribution of SELLING_PRICE by using appropriate Exploratory Data Analysis (EDA) as shown in the code chunk below.\n\n\nShow the code\nggplot(data=condo_resale.sf, \n       aes(x=`SELLING_PRICE`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  scale_x_continuous(labels = scales::comma)\n\n\n\n\n\nThe figure above reveals a right skewed distribution. This means that more condominium units were transacted at relative lower prices.\nStatistically, the skewed distribution can be normalised by using log transformation. The code chunk below is used to derive a new variable called LOG_SELLING_PRICE by using a log transformation on the variable SELLING_PRICE. It is performed using mutate() of dplyr package.\n\ncondo_resale.sf &lt;- condo_resale.sf %&gt;% \n  mutate(`LOG_SELLING_PRICE` = log(SELLING_PRICE))\n\nNow, we can plot the LOG_SELLING_PRICE using the code chunk below.\n\n\nShow the code\nggplot(data=condo_resale.sf, aes(x=`LOG_SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\") \n\n\n\n\n\nNotice that the distribution is relatively less skewed after the transformation."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#multiple-histogram-plots-distribution-of-variables",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#multiple-histogram-plots-distribution-of-variables",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "7.2 Multiple Histogram Plots distribution of variables",
    "text": "7.2 Multiple Histogram Plots distribution of variables\nIn this section, we will learn how to draw a small multiple histograms (also known as trellis plot) by using ggarrange() of ggpubr package.\nThe code chunk below is used to create 12 histograms. Then, ggarrange() is used to organised these histogram into a 3 columns by 4 rows small multiple plot.\n\n\nShow the code\nAREA_SQM &lt;- ggplot(data=condo_resale.sf, aes(x= `AREA_SQM`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nAGE &lt;- ggplot(data=condo_resale.sf, aes(x= `AGE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CBD &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_CBD`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CHILDCARE &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_CHILDCARE`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_ELDERLYCARE &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_ELDERLYCARE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_URA_GROWTH_AREA &lt;- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_URA_GROWTH_AREA`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_HAWKER_MARKET &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_HAWKER_MARKET`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_KINDERGARTEN &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_KINDERGARTEN`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_MRT &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_MRT`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PARK &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_PARK`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PRIMARY_SCH &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_TOP_PRIMARY_SCH &lt;- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_TOP_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nggarrange(AREA_SQM, AGE, PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, \n          PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN, PROX_MRT,\n          PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH,  \n          ncol = 3, nrow = 4)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#drawing-statistical-point-map",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#drawing-statistical-point-map",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "7.3 Drawing Statistical Point Map",
    "text": "7.3 Drawing Statistical Point Map\nLastly, we want to reveal the geospatial distribution condominium resale prices in Singapore. The map will be prepared by using tmap package.\n\ntmap_mode(\"plot\")\n#tmap_mode(\"view\")\n\n#tm_basemap(\"OneMapSG.Grey\") +\ntm_shape(mpsz_svy21)+\n  tm_polygons() +\n  tm_fill(alpha=0.6)+\ntm_shape(condo_resale.sf) +  \n  tm_dots(col = \"SELLING_PRICE\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\nNotice that tm_dots() is used instead of tm_bubbles().\nset.zoom.limits argument of tm_view() sets the minimum and maximum zoom level to 11 and 14 respectively."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#simple-linear-regression-method",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#simple-linear-regression-method",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "8.1 Simple Linear Regression Method",
    "text": "8.1 Simple Linear Regression Method\nFirst, we will build a simple linear regression model by using SELLING_PRICE as the dependent variable and AREA_SQM as the independent variable.\n\ncondo.slr &lt;- lm(formula=SELLING_PRICE ~ AREA_SQM, \n                data = condo_resale.sf)\n\nlm() returns an object of class “lm” or for multiple responses of class c(“mlm”, “lm”).\n\nattributes(condo.slr)\n\n$names\n [1] \"coefficients\"  \"residuals\"     \"effects\"       \"rank\"         \n [5] \"fitted.values\" \"assign\"        \"qr\"            \"df.residual\"  \n [9] \"xlevels\"       \"call\"          \"terms\"         \"model\"        \n\n$class\n[1] \"lm\"\n\n\nThe functions summary() and anova() can be used to obtain and print a summary and analysis of variance table of the results. The generic accessor functions coefficients, effects, fitted.values and residuals extract various useful features of the value returned by lm.\n\nSummaryANOVA\n\n\n\nsummary(condo.slr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3695815  -391764   -87517   258900 13503875 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -258121.1    63517.2  -4.064 5.09e-05 ***\nAREA_SQM      14719.0      428.1  34.381  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 942700 on 1434 degrees of freedom\nMultiple R-squared:  0.4518,    Adjusted R-squared:  0.4515 \nF-statistic:  1182 on 1 and 1434 DF,  p-value: &lt; 2.2e-16\n\n\nThe output report reveals that the SELLING_PRICE can be explained by using the formula:\n*y = -258121.1 + 14719x1*\nR-squared of 0.4518: the independent variable is able to explain about 45% of the variation in the dependent variable, resale prices.\np-value: is much smaller than 0.0001, we will reject the null hypothesis that mean is a good estimator of SELLING_PRICE. This will allow us to infer that simple linear regression model above is a good estimator of SELLING_PRICE.\nThe Coefficients: section of the report reveals that the p-values of both the estimates of the Intercept and ARA_SQM are smaller than 0.001. In view of this, the null hypothesis of the B0 and B1 are equal to 0 will be rejected. As a results, we will be able to infer that the B0 and B1 are good parameter estimates.\n\n\n\nanova(condo.slr)\n\nAnalysis of Variance Table\n\nResponse: SELLING_PRICE\n            Df     Sum Sq    Mean Sq F value    Pr(&gt;F)    \nAREA_SQM     1 1.0504e+15 1.0504e+15    1182 &lt; 2.2e-16 ***\nResiduals 1434 1.2743e+15 8.8861e+11                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\nTo visualise the best fit curve on a scatterplot, we can incorporate lm() as a method function in ggplot’s geometry as shown in the code chunk below.\n\nggplot(data=condo_resale.sf,  \n       aes(x=`AREA_SQM`, y=`SELLING_PRICE`)) +\n  geom_point() +\n    scale_y_continuous(labels = scales::comma)+\n  geom_smooth(method = lm)\n\n\n\n\nFigure above reveals that there are a few statistical outliers with relatively high selling prices."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#multiple-linear-regression-method",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#multiple-linear-regression-method",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "8.2 Multiple Linear Regression Method",
    "text": "8.2 Multiple Linear Regression Method\n\n8.2.1 Visualising the relationships of the independent variables\nBefore building a multiple regression model, it is important to ensure that the indepdent variables used are not highly correlated to each other. If these highly correlated independent variables are used in building a regression model by mistake, the quality of the model will be compromised. This phenomenon is known as multicollinearity in statistics.\nCorrelation matrix is commonly used to visualise the relationships between the independent variables. Beside the pairs() of R, there are many packages support the display of a correlation matrix. We will be using the corrplot package.\nThe code chunk below is used to plot a scatterplot matrix of the relationship between the independent variables in condo_resale data.frame.\n\nnames(condo_resale)\n\n [1] \"LATITUDE\"             \"LONGITUDE\"            \"POSTCODE\"            \n [4] \"SELLING_PRICE\"        \"AREA_SQM\"             \"AGE\"                 \n [7] \"PROX_CBD\"             \"PROX_CHILDCARE\"       \"PROX_ELDERLYCARE\"    \n[10] \"PROX_URA_GROWTH_AREA\" \"PROX_HAWKER_MARKET\"   \"PROX_KINDERGARTEN\"   \n[13] \"PROX_MRT\"             \"PROX_PARK\"            \"PROX_PRIMARY_SCH\"    \n[16] \"PROX_TOP_PRIMARY_SCH\" \"PROX_SHOPPING_MALL\"   \"PROX_SUPERMARKET\"    \n[19] \"PROX_BUS_STOP\"        \"NO_Of_UNITS\"          \"FAMILY_FRIENDLY\"     \n[22] \"FREEHOLD\"             \"LEASEHOLD_99YR\"      \n\n\ncor(condo_resale[,5:23]) gives a matrix array of the correlation values between each pair of variables.\n\ncorrplot(cor(condo_resale[, 5:23]), \n         diag = FALSE, # whether display the correlation coefficients on the principal diagonal.\n         order = \"AOE\", # ordering method of the correlation matrix (original, angular order/AOE, FPC, hclust, alphabet)\n         tl.pos = \"td\", # position of text labels\n         tl.cex = 0.5, # size of text label (variable names)\n         tl.col=\"black\",\n         tl.srt=45,\n         method = \"number\", # other visualisation methods: color, pie, circle\n         type = \"upper\") # layouts: full, upper, lower\n\n\n\n\nMatrix reorder is very important for mining the hiden structure and patter in the matrix. There are four methods in corrplot (parameter order), named “AOE” (angular order), “FPC”, “hclust”, “alphabet”. In the code chunk above, AOE order is used. It orders the variables by using the angular order of the eigenvectors method suggested by Michael Friendly.\nFrom the scatterplot matrix, it is clear that Freehold is highly correlated to LEASE_99YEAR. In view of this, it is wiser to only include either one of them in the subsequent model building. As a result, LEASE_99YEAR is excluded in the subsequent model building."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#building-a-hedonic-pricing-model-using-multiple-linear-regression-method",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#building-a-hedonic-pricing-model-using-multiple-linear-regression-method",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "8.3 Building a hedonic pricing model using multiple linear regression method",
    "text": "8.3 Building a hedonic pricing model using multiple linear regression method\nThe code chunk below using lm() to calibrate the multiple linear regression model, LEASE_99YEAR has been excluded.\n\ncondo.mlr &lt;- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE    + \n                  PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                  PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + PROX_KINDERGARTEN + \n                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + \n                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n                  PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                data=condo_resale.sf)\nsummary(condo.mlr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + \n    PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + \n    PROX_KINDERGARTEN + PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n    PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3475964  -293923   -23069   241043 12260381 \n\nCoefficients:\n                       Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)           481728.40  121441.01   3.967 7.65e-05 ***\nAREA_SQM               12708.32     369.59  34.385  &lt; 2e-16 ***\nAGE                   -24440.82    2763.16  -8.845  &lt; 2e-16 ***\nPROX_CBD              -78669.78    6768.97 -11.622  &lt; 2e-16 ***\nPROX_CHILDCARE       -351617.91  109467.25  -3.212  0.00135 ** \nPROX_ELDERLYCARE      171029.42   42110.51   4.061 5.14e-05 ***\nPROX_URA_GROWTH_AREA   38474.53   12523.57   3.072  0.00217 ** \nPROX_HAWKER_MARKET     23746.10   29299.76   0.810  0.41782    \nPROX_KINDERGARTEN     147468.99   82668.87   1.784  0.07466 .  \nPROX_MRT             -314599.68   57947.44  -5.429 6.66e-08 ***\nPROX_PARK             563280.50   66551.68   8.464  &lt; 2e-16 ***\nPROX_PRIMARY_SCH      180186.08   65237.95   2.762  0.00582 ** \nPROX_TOP_PRIMARY_SCH    2280.04   20410.43   0.112  0.91107    \nPROX_SHOPPING_MALL   -206604.06   42840.60  -4.823 1.57e-06 ***\nPROX_SUPERMARKET      -44991.80   77082.64  -0.584  0.55953    \nPROX_BUS_STOP         683121.35  138353.28   4.938 8.85e-07 ***\nNO_Of_UNITS             -231.18      89.03  -2.597  0.00951 ** \nFAMILY_FRIENDLY       140340.77   47020.55   2.985  0.00289 ** \nFREEHOLD              359913.01   49220.22   7.312 4.38e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 755800 on 1417 degrees of freedom\nMultiple R-squared:  0.6518,    Adjusted R-squared:  0.6474 \nF-statistic: 147.4 on 18 and 1417 DF,  p-value: &lt; 2.2e-16\n\n\nStatistically insignificant (&gt;0.05): PROX_HAWKER_MARKET, PROX_KINDERGARTEN, PROX_TOP_PRIMARY_SCH, PROX_SUPERMARKET."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#preparing-publication-quality-table-olsrr-method",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#preparing-publication-quality-table-olsrr-method",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "8.4 Preparing Publication Quality Table: olsrr method",
    "text": "8.4 Preparing Publication Quality Table: olsrr method\nWith reference to the report above, it is clear that not all the independent variables are statistically significant. We will revised the model by removing variables above which are not statistically significant.\nNow, we are ready to calibrate the revised model by using the code chunk below.\n\ncondo.mlr1 &lt;- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                   PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                   PROX_URA_GROWTH_AREA + PROX_MRT  + PROX_PARK + \n                   PROX_PRIMARY_SCH + PROX_SHOPPING_MALL    + PROX_BUS_STOP + \n                   NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD,\n                 data=condo_resale.sf)\nols_regress(condo.mlr1)\n\n                             Model Summary                               \n------------------------------------------------------------------------\nR                       0.807       RMSE                     755957.289 \nR-Squared               0.651       Coef. Var                    43.168 \nAdj. R-Squared          0.647       MSE                571471422208.591 \nPred R-Squared          0.638       MAE                      414819.628 \n------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.512586e+15          14        1.080418e+14    189.059    0.0000 \nResidual      8.120609e+14        1421    571471422208.591                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     527633.222    108183.223                   4.877    0.000     315417.244     739849.200 \n            AREA_SQM      12777.523       367.479        0.584     34.771    0.000      12056.663      13498.382 \n                 AGE     -24687.739      2754.845       -0.167     -8.962    0.000     -30091.739     -19283.740 \n            PROX_CBD     -77131.323      5763.125       -0.263    -13.384    0.000     -88436.469     -65826.176 \n      PROX_CHILDCARE    -318472.751    107959.512       -0.084     -2.950    0.003    -530249.889    -106695.613 \n    PROX_ELDERLYCARE     185575.623     39901.864        0.090      4.651    0.000     107302.737     263848.510 \nPROX_URA_GROWTH_AREA      39163.254     11754.829        0.060      3.332    0.001      16104.571      62221.936 \n            PROX_MRT    -294745.107     56916.367       -0.112     -5.179    0.000    -406394.234    -183095.980 \n           PROX_PARK     570504.807     65507.029        0.150      8.709    0.000     442003.938     699005.677 \n    PROX_PRIMARY_SCH     159856.136     60234.599        0.062      2.654    0.008      41697.849     278014.424 \n  PROX_SHOPPING_MALL    -220947.251     36561.832       -0.115     -6.043    0.000    -292668.213    -149226.288 \n       PROX_BUS_STOP     682482.221    134513.243        0.134      5.074    0.000     418616.359     946348.082 \n         NO_Of_UNITS       -245.480        87.947       -0.053     -2.791    0.005       -418.000        -72.961 \n     FAMILY_FRIENDLY     146307.576     46893.021        0.057      3.120    0.002      54320.593     238294.560 \n            FREEHOLD     350599.812     48506.485        0.136      7.228    0.000     255447.802     445751.821 \n-----------------------------------------------------------------------------------------------------------------"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#preparing-publication-quality-table-gtsummary-method",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#preparing-publication-quality-table-gtsummary-method",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "8.5 Preparing Publication Quality Table: gtsummary method",
    "text": "8.5 Preparing Publication Quality Table: gtsummary method\nThe gtsummary package provides an elegant and flexible way to create publication-ready summary tables in R.\nIn the code chunk below, tbl_regression() is used to create a well formatted regression report.\n\ntbl_regression(condo.mlr1, intercept = TRUE)\n\n\n\n\n\n  \n    \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n&lt;0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n&lt;0.001\n    AGE\n-24,688\n-30,092, -19,284\n&lt;0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n&lt;0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n&lt;0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n&lt;0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n&lt;0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n&lt;0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n&lt;0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n&lt;0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n&lt;0.001\n  \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\nWith gtsummary package, model statistics can be included in the report by either appending them to the report table by using add_glance_table() or adding as a table source note by using add_glance_source_note() as shown in the code chunk below.\n\ntbl_regression(condo.mlr1, \n               intercept = TRUE) %&gt;% \n  add_glance_source_note( # Adds customised options, eg adjusted R2, AIC, p-values, alpha\n    label = list(sigma ~ \"\\U03C3\"),\n    include = c(r.squared, adj.r.squared, \n                AIC, statistic,\n                p.value, sigma))\n\n\n\n\n\n  \n    \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n&lt;0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n&lt;0.001\n    AGE\n-24,688\n-30,092, -19,284\n&lt;0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n&lt;0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n&lt;0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n&lt;0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n&lt;0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n&lt;0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n&lt;0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n&lt;0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n&lt;0.001\n  \n  \n    \n      R² = 0.651; Adjusted R² = 0.647; AIC = 42,967; Statistic = 189; p-value = &lt;0.001; σ = 755,957\n    \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\n\n8.5.1 Checking for multicolinearity\nIn this section, we would like to introduce you a fantastic R package specially programmed for performing OLS regression. It is called olsrr. It provides a collection of very useful methods for building better multiple linear regression models:\n\ncomprehensive regression output\nresidual diagnostics\nmeasures of influence\nheteroskedasticity tests\ncollinearity diagnostics\nmodel fit assessment\nvariable contribution assessment\nvariable selection procedures\n\nIn the code chunk below, the ols_vif_tol() of olsrr package is used to test if there are sign of multicollinearity.\n\nols_vif_tol(condo.mlr1)\n\n              Variables Tolerance      VIF\n1              AREA_SQM 0.8728554 1.145665\n2                   AGE 0.7071275 1.414172\n3              PROX_CBD 0.6356147 1.573280\n4        PROX_CHILDCARE 0.3066019 3.261559\n5      PROX_ELDERLYCARE 0.6598479 1.515501\n6  PROX_URA_GROWTH_AREA 0.7510311 1.331503\n7              PROX_MRT 0.5236090 1.909822\n8             PROX_PARK 0.8279261 1.207837\n9      PROX_PRIMARY_SCH 0.4524628 2.210126\n10   PROX_SHOPPING_MALL 0.6738795 1.483945\n11        PROX_BUS_STOP 0.3514118 2.845664\n12          NO_Of_UNITS 0.6901036 1.449058\n13      FAMILY_FRIENDLY 0.7244157 1.380423\n14             FREEHOLD 0.6931163 1.442759\n\n\nSince the VIF of the independent variables are less than 10. We can safely conclude that there are no sign of multicollinearity among the independent variables.\n\n\n\n\n\n\nVIF Interpretation\n\n\n\n&lt;5: low correlation of that predictor with other predictors.\n5-10: moderate correlation\n&gt;10: high, not tolerable correlation of model predictors\n\n\n\n\n8.5.2 Test for Non-Linearity\nIn multiple linear regression, it is important for us to test the assumption that linearity and additivity of the relationship between dependent and independent variables.\nIn the code chunk below, the ols_plot_resid_fit() of olsrr package is used to perform linearity assumption test.\n\nols_plot_resid_fit(condo.mlr1)\n\n\n\n\nObservations: Most of the data points are scattered around the 0 line, hence we can safely conclude that the relationships between the dependent variable and independent variables are linear.\n\n\n8.5.3 Test for Normality Assumption\nLastly, the code chunk below uses ols_plot_resid_hist() of olsrr package to perform normality assumption test.\n\nols_plot_resid_hist(condo.mlr1)\n\n\n\n\nThe figure reveals that the residual of the multiple linear regression model (i.e. condo.mlr1) is resemble normal distribution.\nIf you prefer formal statistical test methods, the ols_test_normality() of olsrr package can be used.\n\nols_test_normality(condo.mlr1)\n\n-----------------------------------------------\n       Test             Statistic       pvalue  \n-----------------------------------------------\nShapiro-Wilk              0.6856         0.0000 \nKolmogorov-Smirnov        0.1366         0.0000 \nCramer-von Mises         121.0768        0.0000 \nAnderson-Darling         67.9551         0.0000 \n-----------------------------------------------\n\n\nThe summary table above reveals that the p-values of the four tests are way smaller than the alpha value of 0.05. Hence we will reject the null hypothesis and infer that there is statistical evidence that the residual are not normally distributed."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#testing-for-spatial-autocorrelation",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#testing-for-spatial-autocorrelation",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "8.5.4 Testing for Spatial Autocorrelation",
    "text": "8.5.4 Testing for Spatial Autocorrelation\nThe hedonic model we try to build are using geographically referenced attributes, hence it is also important for us to visual the residual of the hedonic pricing model.\nIn order to perform spatial autocorrelation test, we need to convert condo_resale.sf from sf data frame into a SpatialPointsDataFrame.\nFirst, we will export the residual of the hedonic pricing model and save it as a data frame.\n\nmlr.output &lt;- as.data.frame(condo.mlr1$residuals)\n\nNext, we will join the newly created data frame with condo_resale.sf object.\n\ncondo_resale.res.sf &lt;- cbind(condo_resale.sf, \n                        condo.mlr1$residuals) %&gt;%\nrename(`MLR_RES` = `condo.mlr1.residuals`)\n\nNext, we will convert condo_resale.res.sf from simple feature object into a SpatialPointsDataFrame because spdep package can only process sp conformed spatial data objects.\nThe code chunk below will be used to perform the data conversion process.\n\ncondo_resale.sp &lt;- as_Spatial(condo_resale.res.sf)\ncondo_resale.sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1436 \nextent      : 14940.85, 43352.45, 24765.67, 48382.81  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 23\nnames       : POSTCODE, SELLING_PRICE, AREA_SQM, AGE,    PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN,    PROX_MRT,   PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH, PROX_SHOPPING_MALL, ... \nmin values  :    18965,        540000,       34,   0, 0.386916393,    0.004927023,      0.054508623,          0.214539508,        0.051817113,       0.004927023, 0.052779424, 0.029064164,      0.077106132,          0.077106132,                  0, ... \nmax values  :   828833,       1.8e+07,      619,  37, 19.18042832,     3.46572633,      3.949157205,           9.15540001,        5.374348075,       2.229045366,  3.48037319,  2.16104919,      3.928989144,          6.748192062,        3.477433767, ... \n\n\nNext, we will use tmap package to display the distribution of the residuals on an interactive map.\n\ntmap_mode(\"view\")\n\ntm_basemap(\"OpenStreetMap\")  +\ntm_shape(mpsz_svy21)+\n  tmap_options(check.and.fix = TRUE) +\n  tm_polygons(alpha = 0.4) +\ntm_shape(condo_resale.res.sf) +  \n  tm_dots(col = \"MLR_RES\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\n\n\nThe figure above reveal that there is sign of spatial autocorrelation.\nTo proof that our observation is indeed true, the Moran’s I test will be performed\nFirst, we will compute the distance-based weight matrix by using dnearneigh() function of spdep.\n\nnb &lt;- dnearneigh(coordinates(condo_resale.sp), 0, 1500, longlat = FALSE)\nsummary(nb)\n\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \n10 disjoint connected subgraphs\nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\n\nNext, nb2listw() of spdep packge will be used to convert the output neighbours lists (i.e. nb) into a spatial weights.\n\nnb_lw &lt;- nb2listw(nb, style = 'W')\nsummary(nb_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \n10 disjoint connected subgraphs\nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\nWeights style: W \nWeights constants summary:\n     n      nn   S0       S1       S2\nW 1436 2062096 1436 94.81916 5798.341\n\n\nNext, lm.morantest() of spdep package will be used to perform Moran’s I test for residual spatial autocorrelation\n\nlm.morantest(condo.mlr1, nb_lw)\n\n\n    Global Moran I for regression residuals\n\ndata:  \nmodel: lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD +\nPROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_MRT +\nPROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP +\nNO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, data = condo_resale.sf)\nweights: nb_lw\n\nMoran I statistic standard deviate = 24.366, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nObserved Moran I      Expectation         Variance \n    1.438876e-01    -5.487594e-03     3.758259e-05 \n\n\nThe Global Moran’s I test for residual spatial autocorrelation shows that it’s p-value is less than 0.00000000000000022 which is less than the alpha value of 0.05. Hence, we will reject the null hypothesis that the residuals are randomly distributed.\nSince the Observed Global Moran I = 0.1438876 which is greater than 0, we can infer than the residuals resemble cluster distribution."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#computing-fixed-bandwith",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#computing-fixed-bandwith",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "9.1 Computing fixed bandwith",
    "text": "9.1 Computing fixed bandwith\nIn the code chunk below bw.gwr() of GWModel package is used to determine the optimal fixed bandwidth to use in the model. Notice that the argument adaptive is set to FALSE indicates that we are interested to compute the fixed bandwidth.\n2 approaches to determine the stopping rule: CV cross-validation approach and AIC corrected (AICc) approach. We define the stopping rule using approach argeement.\n\nbw.fixed &lt;- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                     PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                     PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                     PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                     FAMILY_FRIENDLY + FREEHOLD, \n                   data=condo_resale.sp, \n                   approach=\"CV\", \n                   kernel=\"gaussian\", \n                   adaptive=FALSE, \n                   longlat=FALSE)\n\nFixed bandwidth: 17660.96 CV score: 8.259118e+14 \nFixed bandwidth: 10917.26 CV score: 7.970454e+14 \nFixed bandwidth: 6749.419 CV score: 7.273273e+14 \nFixed bandwidth: 4173.553 CV score: 6.300006e+14 \nFixed bandwidth: 2581.58 CV score: 5.404958e+14 \nFixed bandwidth: 1597.687 CV score: 4.857515e+14 \nFixed bandwidth: 989.6077 CV score: 4.722431e+14 \nFixed bandwidth: 613.7939 CV score: 1.378294e+16 \nFixed bandwidth: 1221.873 CV score: 4.778717e+14 \nFixed bandwidth: 846.0596 CV score: 4.791629e+14 \nFixed bandwidth: 1078.325 CV score: 4.751406e+14 \nFixed bandwidth: 934.7772 CV score: 4.72518e+14 \nFixed bandwidth: 1023.495 CV score: 4.730305e+14 \nFixed bandwidth: 968.6643 CV score: 4.721317e+14 \nFixed bandwidth: 955.7206 CV score: 4.722072e+14 \nFixed bandwidth: 976.6639 CV score: 4.721387e+14 \nFixed bandwidth: 963.7202 CV score: 4.721484e+14 \nFixed bandwidth: 971.7199 CV score: 4.721293e+14 \nFixed bandwidth: 973.6083 CV score: 4.721309e+14 \nFixed bandwidth: 970.5527 CV score: 4.721295e+14 \nFixed bandwidth: 972.4412 CV score: 4.721296e+14 \nFixed bandwidth: 971.2741 CV score: 4.721292e+14 \nFixed bandwidth: 970.9985 CV score: 4.721293e+14 \nFixed bandwidth: 971.4443 CV score: 4.721292e+14 \nFixed bandwidth: 971.5496 CV score: 4.721293e+14 \nFixed bandwidth: 971.3793 CV score: 4.721292e+14 \nFixed bandwidth: 971.3391 CV score: 4.721292e+14 \nFixed bandwidth: 971.3143 CV score: 4.721292e+14 \nFixed bandwidth: 971.3545 CV score: 4.721292e+14 \nFixed bandwidth: 971.3296 CV score: 4.721292e+14 \nFixed bandwidth: 971.345 CV score: 4.721292e+14 \nFixed bandwidth: 971.3355 CV score: 4.721292e+14 \nFixed bandwidth: 971.3413 CV score: 4.721292e+14 \nFixed bandwidth: 971.3377 CV score: 4.721292e+14 \nFixed bandwidth: 971.34 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3408 CV score: 4.721292e+14 \nFixed bandwidth: 971.3403 CV score: 4.721292e+14 \nFixed bandwidth: 971.3406 CV score: 4.721292e+14 \nFixed bandwidth: 971.3404 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \n\n\nTBC…"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "",
    "text": "Urban mobility, characterized by the daily commute of urban dwellers from homes to workplaces, presents complex challenges for transport operators and urban managers. Traditional approaches to understanding these mobility patterns, such as commuter surveys, are often hindered by high costs, time-consuming processes, and the rapid obsolescence of collected data. However, the digitalisation of city-wide urban infrastructures, including public buses, mass rapid transits, and other utilities, alongside the advent of pervasive computing technologies like GPS and SMART cards, offers a new paradigm in tracking and analyzing urban movement.\n\n\n\nAimTasks\n\n\nThis assignment is driven by two primary motivations. First, despite the growing availability of open data for public use, there is a noticeable gap in applied research demonstrating how these diverse data sources can be effectively integrated and analyzed to inform policy-making decisions. Second, there is a need to showcase how GDSA can be utilized in practical decision-making scenarios.\nThe core task of this assignment is to conduct a case study that exhibits the potential value of GDSA. By leveraging publicly available data from multiple sources, the goal is to build spatial interaction models that unravel the factors influencing urban mobility patterns, particularly focusing on public bus transit. This exercise aims to bridge the gap between the abundance of geospatially-referenced data and its practical application, thereby enhancing the return on investment in data collection and management, and ultimately supporting informed policy-making in urban mobility.\n\n\nThe specific tasks of this take-home exercise are as follows:\n\n\n\nDerive an analytical hexagon data of 375m (this distance is the perpendicular distance between the centre of the hexagon and its edges) to represent the traffic analysis zone (TAZ).\nWith reference to the time intervals provided in the table below, construct an O-D matrix of commuter flows for a time interval of your choice by integrating Passenger Volume by Origin Destination Bus Stops and Bus Stop Location from LTA DataMall. The O-D matrix must be aggregated at the analytics hexagon level\n\n\n\nPeak hour period\nBus tap on time\n\n\n\n\nWeekday morning peak\n6am to 9am\n\n\nWeekday afternoon peak\n5pm to 8pm\n\n\nWeekend/holiday morning peak\n11am to 2pm\n\n\nWeekend/holiday evening peak\n4pm to 7pm\n\n\n\nDisplay the O-D flows of the passenger trips by using appropriate geovisualisation methods (not more than 5 maps).\nDescribe the spatial patterns revealed by the geovisualisation (not more than 100 words per visual).\nAssemble at least three propulsive and three attractiveness variables by using aspatial and geospatial from publicly available sources.\nCompute a distance matrix by using the analytical hexagon data derived earlier.\n\n\n\n\n\nCalibrate spatial interactive models to determine factors affecting urban commuting flows at the selected time interval.\nPresent the modelling results by using appropriate geovisualisation and graphical visualisation methods. (Not more than 5 visuals)\nWith reference to the Spatial Interaction Model output tables, maps and data visualisation prepared, describe the modelling results. (not more than 100 words per visual)."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#objectives",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#objectives",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "",
    "text": "AimTasks\n\n\nThis assignment is driven by two primary motivations. First, despite the growing availability of open data for public use, there is a noticeable gap in applied research demonstrating how these diverse data sources can be effectively integrated and analyzed to inform policy-making decisions. Second, there is a need to showcase how GDSA can be utilized in practical decision-making scenarios.\nThe core task of this assignment is to conduct a case study that exhibits the potential value of GDSA. By leveraging publicly available data from multiple sources, the goal is to build spatial interaction models that unravel the factors influencing urban mobility patterns, particularly focusing on public bus transit. This exercise aims to bridge the gap between the abundance of geospatially-referenced data and its practical application, thereby enhancing the return on investment in data collection and management, and ultimately supporting informed policy-making in urban mobility.\n\n\nThe specific tasks of this take-home exercise are as follows:\n\n\n\nDerive an analytical hexagon data of 375m (this distance is the perpendicular distance between the centre of the hexagon and its edges) to represent the traffic analysis zone (TAZ).\nWith reference to the time intervals provided in the table below, construct an O-D matrix of commuter flows for a time interval of your choice by integrating Passenger Volume by Origin Destination Bus Stops and Bus Stop Location from LTA DataMall. The O-D matrix must be aggregated at the analytics hexagon level\n\n\n\nPeak hour period\nBus tap on time\n\n\n\n\nWeekday morning peak\n6am to 9am\n\n\nWeekday afternoon peak\n5pm to 8pm\n\n\nWeekend/holiday morning peak\n11am to 2pm\n\n\nWeekend/holiday evening peak\n4pm to 7pm\n\n\n\nDisplay the O-D flows of the passenger trips by using appropriate geovisualisation methods (not more than 5 maps).\nDescribe the spatial patterns revealed by the geovisualisation (not more than 100 words per visual).\nAssemble at least three propulsive and three attractiveness variables by using aspatial and geospatial from publicly available sources.\nCompute a distance matrix by using the analytical hexagon data derived earlier.\n\n\n\n\n\nCalibrate spatial interactive models to determine factors affecting urban commuting flows at the selected time interval.\nPresent the modelling results by using appropriate geovisualisation and graphical visualisation methods. (Not more than 5 visuals)\nWith reference to the Spatial Interaction Model output tables, maps and data visualisation prepared, describe the modelling results. (not more than 100 words per visual)."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#od-data",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#od-data",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "3.1 OD Data",
    "text": "3.1 OD Data\n\nImporting csvAttributesExtracting Study Data\n\n\nPassenger Volume by Origin Destination Bus Stops dataset for October 2023, downloaded from LTA DataMall by using read_csv() or readr package.\n\nodbus &lt;- read_csv(\"data/aspatial/origin_destination_bus_202310.csv\")\n\n\n\nglimpse() of the dplyr package allows us to see all columns and their data type in the data frame.\n\nglimpse(odbus)\n\nRows: 5,694,297\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-10\", \"2023-10\", \"2023-10\", \"2023-10\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKENDS/HOLIDAY\", \"WEEKDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       &lt;dbl&gt; 16, 16, 14, 14, 17, 17, 17, 7, 14, 14, 10, 20, 20,…\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;chr&gt; \"04168\", \"04168\", \"80119\", \"80119\", \"44069\", \"2028…\n$ DESTINATION_PT_CODE &lt;chr&gt; \"10051\", \"10051\", \"90079\", \"90079\", \"17229\", \"2014…\n$ TOTAL_TRIPS         &lt;dbl&gt; 3, 5, 3, 5, 4, 1, 24, 2, 1, 7, 3, 2, 5, 1, 1, 1, 1…\n\n\nObservations:\n\nThere are 7 variables in the odbus tibble data, they are:\n\nYEAR_MONTH: Month in which data is collected\nDAY_TYPE: Weekdays or weekends/holidays\nTIME_PER_HOUR: Hour which the passenger trip is based on, in intervals from 0 to 23 hours\nPT_TYPE: Type of public transport, i.e. bus\nORIGIN_PT_CODE: Origin bus stop ID\nDESTINATION_PT_CODE: Destination bus stop ID\n\nTOTAL_TRIPS: Number of trips We also note that values in ORIGIN_PT_CODE and DESTINATON_PT_CODE are in numeric data type. These should be in factor data type for further processing and georeferencing.\n\nas.factor() can be used to convert the variables ORIGIN_PT_CODE and DESTINATON_PT_CODE from numeric to categorical data type. We use glimpse() again to check the results.\n\nodbus$ORIGIN_PT_CODE &lt;- as.factor(odbus$ORIGIN_PT_CODE)\nodbus$DESTINATION_PT_CODE &lt;- as.factor(odbus$DESTINATION_PT_CODE)\n\nglimpse(odbus)\n\nRows: 5,694,297\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-10\", \"2023-10\", \"2023-10\", \"2023-10\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKENDS/HOLIDAY\", \"WEEKDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       &lt;dbl&gt; 16, 16, 14, 14, 17, 17, 17, 7, 14, 14, 10, 20, 20,…\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;fct&gt; 04168, 04168, 80119, 80119, 44069, 20281, 20281, 1…\n$ DESTINATION_PT_CODE &lt;fct&gt; 10051, 10051, 90079, 90079, 17229, 20141, 20141, 1…\n$ TOTAL_TRIPS         &lt;dbl&gt; 3, 5, 3, 5, 4, 1, 24, 2, 1, 7, 3, 2, 5, 1, 1, 1, 1…\n\n\nNote that both of them are in factor data type now.\n\n\nIn our study, we would like to know study the 1 of the peak hour periods identified. We will be analysing the Weekday Morning peak periods thereafter. Therefore, we can employ a combination of the following functions to obtain the relevant data:\nSummary of the functions used as follow:\n\nfilter(): Retains rows that satisfies our condition (i.e. Weekday Morning peak period)\nselect() of dplyr package: Retains the desired variables for further analysis.\ngroup_by() and summarise(): Aggregates the total trips at each combination of origin bus stop, destination bus stop, and peak period.\n\n\nWDMpeak &lt;- odbus %&gt;%\n  filter(DAY_TYPE==\"WEEKDAY\" & (TIME_PER_HOUR &gt;= 6 & TIME_PER_HOUR &lt;= 9)) %&gt;% \n  dplyr::select(5:7)  %&gt;% \n  group_by(ORIGIN_PT_CODE, DESTINATION_PT_CODE) %&gt;% \n  summarise(TRIPS=sum(TOTAL_TRIPS))\n\nLet’s check the output using the glimpse() function of dplyr.\n\nglimpse(WDMpeak)\n\nRows: 242,208\nColumns: 3\nGroups: ORIGIN_PT_CODE [5,029]\n$ ORIGIN_PT_CODE      &lt;fct&gt; 01012, 01012, 01012, 01012, 01012, 01012, 01012, 0…\n$ DESTINATION_PT_CODE &lt;fct&gt; 01112, 01113, 01121, 01211, 01311, 07371, 60011, 6…\n$ TRIPS               &lt;dbl&gt; 290, 118, 77, 118, 165, 14, 30, 16, 35, 26, 2, 8, …"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/data/geospatial/Business.html",
    "href": "Take-Home_Ex/Take-Home_Ex2/data/geospatial/Business.html",
    "title": "Geospatial Data Analytics",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/data/geospatial/entertn.html",
    "href": "Take-Home_Ex/Take-Home_Ex2/data/geospatial/entertn.html",
    "title": "Geospatial Data Analytics",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/data/geospatial/F&B.html",
    "href": "Take-Home_Ex/Take-Home_Ex2/data/geospatial/F&B.html",
    "title": "Geospatial Data Analytics",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/data/geospatial/FinServ.html",
    "href": "Take-Home_Ex/Take-Home_Ex2/data/geospatial/FinServ.html",
    "title": "Geospatial Data Analytics",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/data/geospatial/Liesure&Recreation.html",
    "href": "Take-Home_Ex/Take-Home_Ex2/data/geospatial/Liesure&Recreation.html",
    "title": "Geospatial Data Analytics",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/data/geospatial/MPSZ-2019.html",
    "href": "Take-Home_Ex/Take-Home_Ex2/data/geospatial/MPSZ-2019.html",
    "title": "Geospatial Data Analytics",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/data/geospatial/Retails.html",
    "href": "Take-Home_Ex/Take-Home_Ex2/data/geospatial/Retails.html",
    "title": "Geospatial Data Analytics",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "index.html#hands-on-exercises",
    "href": "index.html#hands-on-exercises",
    "title": "Geospatial Data Analytics",
    "section": "Hands-on Exercises",
    "text": "Hands-on Exercises\n\n\n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#in-class-exercises",
    "href": "index.html#in-class-exercises",
    "title": "Geospatial Data Analytics",
    "section": "In-class Exercises",
    "text": "In-class Exercises\n\n\n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#take-home-exercises",
    "href": "index.html#take-home-exercises",
    "title": "Geospatial Data Analytics",
    "section": "Take-home Exercises",
    "text": "Take-home Exercises\n\n\n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#building-fixed-bandwidth-gwr-model",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#building-fixed-bandwidth-gwr-model",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "9.1 Building Fixed Bandwidth GWR Model",
    "text": "9.1 Building Fixed Bandwidth GWR Model\n\n9.1.1 Computing fixed bandwith\nIn the code chunk below bw.gwr() of GWModel package is used to determine the optimal fixed bandwidth to use in the model. Notice that the argument adaptive is set to FALSE indicates that we are interested to compute the fixed bandwidth.\n2 approaches to determine the stopping rule: CV cross-validation approach and AIC corrected (AICc) approach. We define the stopping rule using approach argeement.\n\nbw.fixed &lt;- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                     PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                     PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                     PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                     FAMILY_FRIENDLY + FREEHOLD, \n                   data=condo_resale.sp, \n                   approach=\"CV\", \n                   kernel=\"gaussian\", \n                   adaptive=FALSE, \n                   longlat=FALSE)\n\nFixed bandwidth: 17660.96 CV score: 8.259118e+14 \nFixed bandwidth: 10917.26 CV score: 7.970454e+14 \nFixed bandwidth: 6749.419 CV score: 7.273273e+14 \nFixed bandwidth: 4173.553 CV score: 6.300006e+14 \nFixed bandwidth: 2581.58 CV score: 5.404958e+14 \nFixed bandwidth: 1597.687 CV score: 4.857515e+14 \nFixed bandwidth: 989.6077 CV score: 4.722431e+14 \nFixed bandwidth: 613.7939 CV score: 1.378294e+16 \nFixed bandwidth: 1221.873 CV score: 4.778717e+14 \nFixed bandwidth: 846.0596 CV score: 4.791629e+14 \nFixed bandwidth: 1078.325 CV score: 4.751406e+14 \nFixed bandwidth: 934.7772 CV score: 4.72518e+14 \nFixed bandwidth: 1023.495 CV score: 4.730305e+14 \nFixed bandwidth: 968.6643 CV score: 4.721317e+14 \nFixed bandwidth: 955.7206 CV score: 4.722072e+14 \nFixed bandwidth: 976.6639 CV score: 4.721387e+14 \nFixed bandwidth: 963.7202 CV score: 4.721484e+14 \nFixed bandwidth: 971.7199 CV score: 4.721293e+14 \nFixed bandwidth: 973.6083 CV score: 4.721309e+14 \nFixed bandwidth: 970.5527 CV score: 4.721295e+14 \nFixed bandwidth: 972.4412 CV score: 4.721296e+14 \nFixed bandwidth: 971.2741 CV score: 4.721292e+14 \nFixed bandwidth: 970.9985 CV score: 4.721293e+14 \nFixed bandwidth: 971.4443 CV score: 4.721292e+14 \nFixed bandwidth: 971.5496 CV score: 4.721293e+14 \nFixed bandwidth: 971.3793 CV score: 4.721292e+14 \nFixed bandwidth: 971.3391 CV score: 4.721292e+14 \nFixed bandwidth: 971.3143 CV score: 4.721292e+14 \nFixed bandwidth: 971.3545 CV score: 4.721292e+14 \nFixed bandwidth: 971.3296 CV score: 4.721292e+14 \nFixed bandwidth: 971.345 CV score: 4.721292e+14 \nFixed bandwidth: 971.3355 CV score: 4.721292e+14 \nFixed bandwidth: 971.3413 CV score: 4.721292e+14 \nFixed bandwidth: 971.3377 CV score: 4.721292e+14 \nFixed bandwidth: 971.34 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3408 CV score: 4.721292e+14 \nFixed bandwidth: 971.3403 CV score: 4.721292e+14 \nFixed bandwidth: 971.3406 CV score: 4.721292e+14 \nFixed bandwidth: 971.3404 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \n\n\nThe result shows that the recommended bandwidth is 971.3405 metres.\n\n\n9.1.2 GWModel method - fixed bandwith\nNow we can use the code chunk below to calibrate the gwr model using fixed bandwidth and gaussian kernel.\n\ngwr.fixed &lt;- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                         PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                         PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                         PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                         FAMILY_FRIENDLY + FREEHOLD, \n                       data=condo_resale.sp, \n                       bw=bw.fixed, \n                       kernel = 'gaussian', \n                       longlat = FALSE)\n\nThe output is saved in a list of class “gwrm”. The code below can be used to display the model output.\n\ngwr.fixed\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2023-12-08 15:33:19.350607 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.fixed, kernel = \"gaussian\", \n    longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(&gt;|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  &lt; 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  &lt; 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  &lt; 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  &lt; 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: &lt; 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Fixed bandwidth: 971.3405 \n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -3.5988e+07 -5.1998e+05  7.6780e+05  1.7412e+06\n   AREA_SQM              1.0003e+03  5.2758e+03  7.4740e+03  1.2301e+04\n   AGE                  -1.3475e+05 -2.0813e+04 -8.6260e+03 -3.7784e+03\n   PROX_CBD             -7.7047e+07 -2.3608e+05 -8.3600e+04  3.4646e+04\n   PROX_CHILDCARE       -6.0097e+06 -3.3667e+05 -9.7425e+04  2.9007e+05\n   PROX_ELDERLYCARE     -3.5000e+06 -1.5970e+05  3.1971e+04  1.9577e+05\n   PROX_URA_GROWTH_AREA -3.0170e+06 -8.2013e+04  7.0749e+04  2.2612e+05\n   PROX_MRT             -3.5282e+06 -6.5836e+05 -1.8833e+05  3.6922e+04\n   PROX_PARK            -1.2062e+06 -2.1732e+05  3.5383e+04  4.1335e+05\n   PROX_PRIMARY_SCH     -2.2695e+07 -1.7066e+05  4.8472e+04  5.1555e+05\n   PROX_SHOPPING_MALL   -7.2585e+06 -1.6684e+05 -1.0517e+04  1.5923e+05\n   PROX_BUS_STOP        -1.4676e+06 -4.5207e+04  3.7601e+05  1.1664e+06\n   NO_Of_UNITS          -1.3170e+03 -2.4822e+02 -3.0846e+01  2.5496e+02\n   FAMILY_FRIENDLY      -2.2749e+06 -1.1140e+05  7.6214e+03  1.6107e+05\n   FREEHOLD             -9.2067e+06  3.8073e+04  1.5169e+05  3.7528e+05\n                             Max.\n   Intercept            112793548\n   AREA_SQM                 21575\n   AGE                     434201\n   PROX_CBD               2704596\n   PROX_CHILDCARE         1654087\n   PROX_ELDERLYCARE      38867814\n   PROX_URA_GROWTH_AREA  78515730\n   PROX_MRT               3124316\n   PROX_PARK             18122425\n   PROX_PRIMARY_SCH       4637503\n   PROX_SHOPPING_MALL     1529952\n   PROX_BUS_STOP         11342182\n   NO_Of_UNITS              12907\n   FAMILY_FRIENDLY        1720744\n   FREEHOLD               6073636\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 438.3804 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 997.6196 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 42263.61 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41632.36 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 42515.71 \n   Residual sum of squares: 2.53407e+14 \n   R-square value:  0.8909912 \n   Adjusted R-square value:  0.8430417 \n\n   ***********************************************************************\n   Program stops at: 2023-12-08 15:33:20.467381"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#building-adaptive-bandwidth-gwr-model",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#building-adaptive-bandwidth-gwr-model",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "9.2 Building Adaptive Bandwidth GWR Model",
    "text": "9.2 Building Adaptive Bandwidth GWR Model\n\n9.2.1 Computing the adaptive bandwidth\nSimilar to the earlier section, we will first use bw.gwr() to determine the recommended data point to use.\nThe code chunk used look very similar to the one used to compute the fixed bandwidth except the adaptive argument has changed to TRUE.\n\nbw.adaptive &lt;- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE  + \n                        PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE    + \n                        PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                        PROX_PRIMARY_SCH + PROX_SHOPPING_MALL   + PROX_BUS_STOP + \n                        NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                      data=condo_resale.sp, \n                      approach=\"CV\", \n                      kernel=\"gaussian\", \n                      adaptive=TRUE,# Changed to TRUE\n                      longlat=FALSE)\n\nAdaptive bandwidth: 895 CV score: 7.952401e+14 \nAdaptive bandwidth: 561 CV score: 7.667364e+14 \nAdaptive bandwidth: 354 CV score: 6.953454e+14 \nAdaptive bandwidth: 226 CV score: 6.15223e+14 \nAdaptive bandwidth: 147 CV score: 5.674373e+14 \nAdaptive bandwidth: 98 CV score: 5.426745e+14 \nAdaptive bandwidth: 68 CV score: 5.168117e+14 \nAdaptive bandwidth: 49 CV score: 4.859631e+14 \nAdaptive bandwidth: 37 CV score: 4.646518e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \nAdaptive bandwidth: 25 CV score: 4.430816e+14 \nAdaptive bandwidth: 32 CV score: 4.505602e+14 \nAdaptive bandwidth: 27 CV score: 4.462172e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \n\n\nThe result shows that the 30 is the recommended data points to be used.\n\n\n9.2.2 Constructing the adaptive bandwidth gwr model\nNow, we can go ahead to calibrate the gwr-based hedonic pricing model by using adaptive bandwidth and gaussian kernel as shown in the code chunk below.\n\ngwr.adaptive &lt;- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                            PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE + \n                            PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                            PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP + \n                            NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                          data=condo_resale.sp, bw=bw.adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE, \n                          longlat = FALSE)\n\ngwr.adaptive\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2023-12-08 15:33:28.798466 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.adaptive, kernel = \"gaussian\", \n    adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(&gt;|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  &lt; 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  &lt; 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  &lt; 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  &lt; 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: &lt; 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 30 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -1.3487e+08 -2.4669e+05  7.7928e+05  1.6194e+06\n   AREA_SQM              3.3188e+03  5.6285e+03  7.7825e+03  1.2738e+04\n   AGE                  -9.6746e+04 -2.9288e+04 -1.4043e+04 -5.6119e+03\n   PROX_CBD             -2.5330e+06 -1.6256e+05 -7.7242e+04  2.6624e+03\n   PROX_CHILDCARE       -1.2790e+06 -2.0175e+05  8.7158e+03  3.7778e+05\n   PROX_ELDERLYCARE     -1.6212e+06 -9.2050e+04  6.1029e+04  2.8184e+05\n   PROX_URA_GROWTH_AREA -7.2686e+06 -3.0350e+04  4.5869e+04  2.4613e+05\n   PROX_MRT             -4.3781e+07 -6.7282e+05 -2.2115e+05 -7.4593e+04\n   PROX_PARK            -2.9020e+06 -1.6782e+05  1.1601e+05  4.6572e+05\n   PROX_PRIMARY_SCH     -8.6418e+05 -1.6627e+05 -7.7853e+03  4.3222e+05\n   PROX_SHOPPING_MALL   -1.8272e+06 -1.3175e+05 -1.4049e+04  1.3799e+05\n   PROX_BUS_STOP        -2.0579e+06 -7.1461e+04  4.1104e+05  1.2071e+06\n   NO_Of_UNITS          -2.1993e+03 -2.3685e+02 -3.4699e+01  1.1657e+02\n   FAMILY_FRIENDLY      -5.9879e+05 -5.0927e+04  2.6173e+04  2.2481e+05\n   FREEHOLD             -1.6340e+05  4.0765e+04  1.9023e+05  3.7960e+05\n                            Max.\n   Intercept            18758355\n   AREA_SQM                23064\n   AGE                     13303\n   PROX_CBD             11346650\n   PROX_CHILDCARE        2892127\n   PROX_ELDERLYCARE      2465671\n   PROX_URA_GROWTH_AREA  7384059\n   PROX_MRT              1186242\n   PROX_PARK             2588497\n   PROX_PRIMARY_SCH      3381462\n   PROX_SHOPPING_MALL   38038564\n   PROX_BUS_STOP        12081592\n   NO_Of_UNITS              1010\n   FAMILY_FRIENDLY       2072414\n   FREEHOLD              1813995\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 350.3088 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 1085.691 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 41982.22 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41546.74 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 41914.08 \n   Residual sum of squares: 2.528227e+14 \n   R-square value:  0.8912425 \n   Adjusted R-square value:  0.8561185 \n\n   ***********************************************************************\n   Program stops at: 2023-12-08 15:33:30.159021 \n\n\nThe report shows that the AICc the adaptive distance gwr is 41982.22 which is even smaller than the AICc of the fixed distance gwr of 42263.61."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#visualising-gwr-output",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#visualising-gwr-output",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "9.3 Visualising GWR Output",
    "text": "9.3 Visualising GWR Output\nIn addition to regression residuals, the output feature class table includes fields for observed and predicted y values, condition number (cond), Local R2, residuals, and explanatory variable coefficients and standard errors:\n\nCondition Number: this diagnostic evaluates local collinearity. In the presence of strong local collinearity, results become unstable. Results associated with condition numbers larger than 30, may be unreliable.\nLocal R2: these values range between 0.0 and 1.0 and indicate how well the local regression model fits observed y values. Very low values indicate the local model is performing poorly. Mapping the Local R2 values to see where GWR predicts well and where it predicts poorly may provide clues about important variables that may be missing from the regression model.\nPredicted: these are the estimated (or fitted) y values 3. computed by GWR.\nResiduals: to obtain the residual values, the fitted y values are subtracted from the observed y values. Standardized residuals have a mean of zero and a standard deviation of 1. A cold-to-hot rendered map of standardized residuals can be produce by using these values.\nCoefficient Standard Error: these values measure the reliability of each coefficient estimate. Confidence in those estimates are higher when standard errors are small in relation to the actual coefficient values. Large standard errors may indicate problems with local collinearity.\n\nThey are all stored in a SpatialPointsDataFrame or SpatialPolygonsDataFrame object integrated with fit.points, GWR coefficient estimates, y value, predicted values, coefficient standard errors and t-values in its \"data\" slot in an object called SDF of the output list."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#converting-sdf-into-sf-data.frame",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#converting-sdf-into-sf-data.frame",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "9.4 Converting SDF into sf data.frame",
    "text": "9.4 Converting SDF into sf data.frame\nTo visualise the fields in SDF, we need to first covert it into sf data.frame by using the code chunk below.\n\ncondo_resale.sf.adaptive &lt;- st_as_sf(gwr.adaptive$SDF) %&gt;%\n  st_transform(crs=3414)\n\ncondo_resale.sf.adaptive.svy21 &lt;- st_transform(condo_resale.sf.adaptive, 3414)\ncondo_resale.sf.adaptive.svy21  \n\nSimple feature collection with 1436 features and 51 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14940.85 ymin: 24765.67 xmax: 43352.45 ymax: 48382.81\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n    Intercept  AREA_SQM        AGE  PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE\n1   2050011.7  9561.892  -9514.634 -120681.9      319266.92       -393417.79\n2   1633128.2 16576.853 -58185.479 -149434.2      441102.18        325188.74\n3   3433608.2 13091.861 -26707.386 -259397.8     -120116.82        535855.81\n4    234358.9 20730.601 -93308.988 2426853.7      480825.28        314783.72\n5   2285804.9  6722.836 -17608.018 -316835.5       90764.78       -137384.61\n6  -3568877.4  6039.581 -26535.592  327306.1     -152531.19       -700392.85\n7  -2874842.4 16843.575 -59166.727 -983577.2     -177810.50       -122384.02\n8   2038086.0  6905.135 -17681.897 -285076.6       70259.40        -96012.78\n9   1718478.4  9580.703 -14401.128  105803.4     -657698.02       -123276.00\n10  3457054.0 14072.011 -31579.884 -234895.4       79961.45        548581.04\n   PROX_URA_GROWTH_AREA    PROX_MRT  PROX_PARK PROX_PRIMARY_SCH\n1            -159980.20  -299742.96 -172104.47        242668.03\n2            -142290.39 -2510522.23  523379.72       1106830.66\n3            -253621.21  -936853.28  209099.85        571462.33\n4           -2679297.89 -2039479.50 -759153.26       3127477.21\n5             303714.81   -44567.05  -10284.62         30413.56\n6             -28051.25   733566.47 1511488.92        320878.23\n7            1397676.38 -2745430.34  710114.74       1786570.95\n8             269368.71   -14552.99   73533.34         53359.73\n9            -361974.72  -476785.32 -132067.59        -40128.92\n10           -150024.38 -1503835.53  574155.47        108996.67\n   PROX_SHOPPING_MALL PROX_BUS_STOP  NO_Of_UNITS FAMILY_FRIENDLY  FREEHOLD\n1          300881.390     1210615.4  104.8290640       -9075.370  303955.6\n2          -87693.378     1843587.2 -288.3441183      310074.664  396221.3\n3         -126732.712     1411924.9   -9.5532945        5949.746  168821.7\n4          -29593.342     7225577.5 -161.3551620     1556178.531 1212515.6\n5           -7490.586      677577.0   42.2659674       58986.951  328175.2\n6          258583.881     1086012.6 -214.3671271      201992.641  471873.1\n7         -384251.210     5094060.5   -0.9212521      359659.512  408871.9\n8          -39634.902      735767.1   30.1741069       55602.506  347075.0\n9          276718.757     2815772.4  675.1615559      -30453.297  503872.8\n10        -454726.822     2123557.0  -21.3044311     -100935.586  213324.6\n         y    yhat    residual CV_Score Stud_residual Intercept_SE AREA_SQM_SE\n1  3000000 2886532   113468.16        0    0.38207013     516105.5    823.2860\n2  3880000 3466801   413198.52        0    1.01433140     488083.5    825.2380\n3  3325000 3616527  -291527.20        0   -0.83780678     963711.4    988.2240\n4  4250000 5435482 -1185481.63        0   -2.84614670     444185.5    617.4007\n5  1400000 1388166    11834.26        0    0.03404453    2119620.6   1376.2778\n6  1320000 1516702  -196701.94        0   -0.72065800   28572883.7   2348.0091\n7  3410000 3266881   143118.77        0    0.41291992     679546.6    893.5893\n8  1420000 1431955   -11955.27        0   -0.03033109    2217773.1   1415.2604\n9  2025000 1832799   192200.83        0    0.52018109     814281.8    943.8434\n10 2550000 2223364   326635.53        0    1.10559735    2410252.0   1271.4073\n      AGE_SE PROX_CBD_SE PROX_CHILDCARE_SE PROX_ELDERLYCARE_SE\n1   5889.782    37411.22          319111.1           120633.34\n2   6226.916    23615.06          299705.3            84546.69\n3   6510.236    56103.77          349128.5           129687.07\n4   6010.511   469337.41          304965.2           127150.69\n5   8180.361   410644.47          698720.6           327371.55\n6  14601.909  5272846.47         1141599.8          1653002.19\n7   8970.629   346164.20          530101.1           148598.71\n8   8661.309   438035.69          742532.8           399221.05\n9  11791.208    89148.35          704630.7           329683.30\n10  9941.980   173532.77          500976.2           281876.74\n   PROX_URA_GROWTH_AREA_SE PROX_MRT_SE PROX_PARK_SE PROX_PRIMARY_SCH_SE\n1                 56207.39    185181.3     205499.6            152400.7\n2                 76956.50    281133.9     229358.7            165150.7\n3                 95774.60    275483.7     314124.3            196662.6\n4                470762.12    279877.1     227249.4            240878.9\n5                474339.56    363830.0     364580.9            249087.7\n6               5496627.21    730453.2    1741712.0            683265.5\n7                371692.97    375511.9     297400.9            344602.8\n8                517977.91    423155.4     440984.4            261251.2\n9                153436.22    285325.4     304998.4            278258.5\n10               239182.57    571355.7     599131.8            331284.8\n   PROX_SHOPPING_MALL_SE PROX_BUS_STOP_SE NO_Of_UNITS_SE FAMILY_FRIENDLY_SE\n1               109268.8         600668.6       218.1258           131474.7\n2                98906.8         410222.1       208.9410           114989.1\n3               119913.3         464156.7       210.9828           146607.2\n4               177104.1         562810.8       361.7767           108726.6\n5               301032.9         740922.4       299.5034           160663.7\n6              2931208.6        1418333.3       602.5571           331727.0\n7               249969.5         821236.4       532.1978           129241.2\n8               351634.0         775038.4       338.6777           171895.1\n9               289872.7         850095.5       439.9037           220223.4\n10              265529.7         631399.2       259.0169           189125.5\n   FREEHOLD_SE Intercept_TV AREA_SQM_TV     AGE_TV PROX_CBD_TV\n1     115954.0    3.9720784   11.614302  -1.615447 -3.22582173\n2     130110.0    3.3460017   20.087361  -9.344188 -6.32792021\n3     141031.5    3.5629010   13.247868  -4.102368 -4.62353528\n4     138239.1    0.5276150   33.577223 -15.524302  5.17080808\n5     210641.1    1.0784029    4.884795  -2.152474 -0.77155660\n6     374347.3   -0.1249043    2.572214  -1.817269  0.06207388\n7     182216.9   -4.2305303   18.849348  -6.595605 -2.84136028\n8     216649.4    0.9189786    4.879056  -2.041481 -0.65080678\n9     220473.7    2.1104224   10.150733  -1.221345  1.18682383\n10    206346.2    1.4343123   11.068059  -3.176418 -1.35360852\n   PROX_CHILDCARE_TV PROX_ELDERLYCARE_TV PROX_URA_GROWTH_AREA_TV PROX_MRT_TV\n1         1.00048819          -3.2612693            -2.846248368 -1.61864578\n2         1.47178634           3.8462625            -1.848971738 -8.92998600\n3        -0.34404755           4.1319138            -2.648105057 -3.40075727\n4         1.57665606           2.4756745            -5.691404992 -7.28705261\n5         0.12990138          -0.4196596             0.640289855 -0.12249416\n6        -0.13361179          -0.4237096            -0.005103357  1.00426206\n7        -0.33542751          -0.8235874             3.760298131 -7.31116712\n8         0.09462126          -0.2405003             0.520038994 -0.03439159\n9        -0.93339393          -0.3739225            -2.359121712 -1.67102293\n10        0.15961128           1.9461735            -0.627237944 -2.63204802\n   PROX_PARK_TV PROX_PRIMARY_SCH_TV PROX_SHOPPING_MALL_TV PROX_BUS_STOP_TV\n1   -0.83749312           1.5923022            2.75358842        2.0154464\n2    2.28192684           6.7019454           -0.88662640        4.4941192\n3    0.66565951           2.9058009           -1.05686949        3.0419145\n4   -3.34061770          12.9836105           -0.16709578       12.8383775\n5   -0.02820944           0.1220998           -0.02488294        0.9145046\n6    0.86781794           0.4696245            0.08821750        0.7656963\n7    2.38773567           5.1844351           -1.53719231        6.2029165\n8    0.16674816           0.2042469           -0.11271635        0.9493299\n9   -0.43301073          -0.1442145            0.95462153        3.3123012\n10   0.95831249           0.3290120           -1.71252687        3.3632555\n   NO_Of_UNITS_TV FAMILY_FRIENDLY_TV FREEHOLD_TV  Local_R2\n1     0.480589953        -0.06902748    2.621347 0.8846744\n2    -1.380026395         2.69655779    3.045280 0.8899773\n3    -0.045279967         0.04058290    1.197050 0.8947007\n4    -0.446007570        14.31276425    8.771149 0.9073605\n5     0.141120178         0.36714544    1.557983 0.9510057\n6    -0.355762335         0.60891234    1.260522 0.9247586\n7    -0.001731033         2.78285441    2.243875 0.8310458\n8     0.089093858         0.32346758    1.602012 0.9463936\n9     1.534793921        -0.13828365    2.285410 0.8380365\n10   -0.082251138        -0.53369623    1.033819 0.9080753\n                    geometry\n1  POINT (22085.12 29951.54)\n2   POINT (25656.84 34546.2)\n3   POINT (23963.99 32890.8)\n4  POINT (27044.28 32319.77)\n5  POINT (41042.56 33743.64)\n6   POINT (39717.04 32943.1)\n7   POINT (28419.1 33513.37)\n8  POINT (40763.57 33879.61)\n9  POINT (23595.63 28884.78)\n10 POINT (24586.56 33194.31)\n\ngwr.adaptive.output &lt;- as.data.frame(gwr.adaptive$SDF)\ncondo_resale.sf.adaptive &lt;- cbind(condo_resale.res.sf, as.matrix(gwr.adaptive.output))\n\nNext, glimpse() is used to display the content of condo_resale.sf.adaptive sf data frame.\n\nglimpse(condo_resale.sf.adaptive)\n\nRows: 1,436\nColumns: 77\n$ POSTCODE                &lt;dbl&gt; 118635, 288420, 267833, 258380, 467169, 466472…\n$ SELLING_PRICE           &lt;dbl&gt; 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ AREA_SQM                &lt;dbl&gt; 309, 290, 248, 127, 145, 139, 218, 141, 165, 1…\n$ AGE                     &lt;dbl&gt; 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22,…\n$ PROX_CBD                &lt;dbl&gt; 7.941259, 6.609797, 6.898000, 4.038861, 11.783…\n$ PROX_CHILDCARE          &lt;dbl&gt; 0.16597932, 0.28027246, 0.42922669, 0.39473543…\n$ PROX_ELDERLYCARE        &lt;dbl&gt; 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.…\n$ PROX_URA_GROWTH_AREA    &lt;dbl&gt; 6.618741, 7.505109, 6.463887, 4.906512, 6.4106…\n$ PROX_HAWKER_MARKET      &lt;dbl&gt; 1.76542207, 0.54507614, 0.37789301, 1.68259969…\n$ PROX_KINDERGARTEN       &lt;dbl&gt; 0.05835552, 0.61592412, 0.14120309, 0.38200076…\n$ PROX_MRT                &lt;dbl&gt; 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.…\n$ PROX_PARK               &lt;dbl&gt; 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.…\n$ PROX_PRIMARY_SCH        &lt;dbl&gt; 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.…\n$ PROX_TOP_PRIMARY_SCH    &lt;dbl&gt; 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.…\n$ PROX_SHOPPING_MALL      &lt;dbl&gt; 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.…\n$ PROX_SUPERMARKET        &lt;dbl&gt; 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.…\n$ PROX_BUS_STOP           &lt;dbl&gt; 0.10336166, 0.28673408, 0.28504777, 0.29872340…\n$ NO_Of_UNITS             &lt;dbl&gt; 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34…\n$ FAMILY_FRIENDLY         &lt;dbl&gt; 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD                &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ LOG_SELLING_PRICE       &lt;dbl&gt; 14.91412, 15.17135, 15.01698, 15.26243, 14.151…\n$ MLR_RES                 &lt;dbl&gt; -1489099.55, 415494.57, 194129.69, 1088992.71,…\n$ Intercept               &lt;dbl&gt; 2050011.67, 1633128.24, 3433608.17, 234358.91,…\n$ AREA_SQM.1              &lt;dbl&gt; 9561.892, 16576.853, 13091.861, 20730.601, 672…\n$ AGE.1                   &lt;dbl&gt; -9514.634, -58185.479, -26707.386, -93308.988,…\n$ PROX_CBD.1              &lt;dbl&gt; -120681.94, -149434.22, -259397.77, 2426853.66…\n$ PROX_CHILDCARE.1        &lt;dbl&gt; 319266.925, 441102.177, -120116.816, 480825.28…\n$ PROX_ELDERLYCARE.1      &lt;dbl&gt; -393417.795, 325188.741, 535855.806, 314783.72…\n$ PROX_URA_GROWTH_AREA.1  &lt;dbl&gt; -159980.203, -142290.389, -253621.206, -267929…\n$ PROX_MRT.1              &lt;dbl&gt; -299742.96, -2510522.23, -936853.28, -2039479.…\n$ PROX_PARK.1             &lt;dbl&gt; -172104.47, 523379.72, 209099.85, -759153.26, …\n$ PROX_PRIMARY_SCH.1      &lt;dbl&gt; 242668.03, 1106830.66, 571462.33, 3127477.21, …\n$ PROX_SHOPPING_MALL.1    &lt;dbl&gt; 300881.390, -87693.378, -126732.712, -29593.34…\n$ PROX_BUS_STOP.1         &lt;dbl&gt; 1210615.44, 1843587.22, 1411924.90, 7225577.51…\n$ NO_Of_UNITS.1           &lt;dbl&gt; 104.8290640, -288.3441183, -9.5532945, -161.35…\n$ FAMILY_FRIENDLY.1       &lt;dbl&gt; -9075.370, 310074.664, 5949.746, 1556178.531, …\n$ FREEHOLD.1              &lt;dbl&gt; 303955.61, 396221.27, 168821.75, 1212515.58, 3…\n$ y                       &lt;dbl&gt; 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ yhat                    &lt;dbl&gt; 2886531.8, 3466801.5, 3616527.2, 5435481.6, 13…\n$ residual                &lt;dbl&gt; 113468.16, 413198.52, -291527.20, -1185481.63,…\n$ CV_Score                &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Stud_residual           &lt;dbl&gt; 0.38207013, 1.01433140, -0.83780678, -2.846146…\n$ Intercept_SE            &lt;dbl&gt; 516105.5, 488083.5, 963711.4, 444185.5, 211962…\n$ AREA_SQM_SE             &lt;dbl&gt; 823.2860, 825.2380, 988.2240, 617.4007, 1376.2…\n$ AGE_SE                  &lt;dbl&gt; 5889.782, 6226.916, 6510.236, 6010.511, 8180.3…\n$ PROX_CBD_SE             &lt;dbl&gt; 37411.22, 23615.06, 56103.77, 469337.41, 41064…\n$ PROX_CHILDCARE_SE       &lt;dbl&gt; 319111.1, 299705.3, 349128.5, 304965.2, 698720…\n$ PROX_ELDERLYCARE_SE     &lt;dbl&gt; 120633.34, 84546.69, 129687.07, 127150.69, 327…\n$ PROX_URA_GROWTH_AREA_SE &lt;dbl&gt; 56207.39, 76956.50, 95774.60, 470762.12, 47433…\n$ PROX_MRT_SE             &lt;dbl&gt; 185181.3, 281133.9, 275483.7, 279877.1, 363830…\n$ PROX_PARK_SE            &lt;dbl&gt; 205499.6, 229358.7, 314124.3, 227249.4, 364580…\n$ PROX_PRIMARY_SCH_SE     &lt;dbl&gt; 152400.7, 165150.7, 196662.6, 240878.9, 249087…\n$ PROX_SHOPPING_MALL_SE   &lt;dbl&gt; 109268.8, 98906.8, 119913.3, 177104.1, 301032.…\n$ PROX_BUS_STOP_SE        &lt;dbl&gt; 600668.6, 410222.1, 464156.7, 562810.8, 740922…\n$ NO_Of_UNITS_SE          &lt;dbl&gt; 218.1258, 208.9410, 210.9828, 361.7767, 299.50…\n$ FAMILY_FRIENDLY_SE      &lt;dbl&gt; 131474.73, 114989.07, 146607.22, 108726.62, 16…\n$ FREEHOLD_SE             &lt;dbl&gt; 115954.0, 130110.0, 141031.5, 138239.1, 210641…\n$ Intercept_TV            &lt;dbl&gt; 3.9720784, 3.3460017, 3.5629010, 0.5276150, 1.…\n$ AREA_SQM_TV             &lt;dbl&gt; 11.614302, 20.087361, 13.247868, 33.577223, 4.…\n$ AGE_TV                  &lt;dbl&gt; -1.6154474, -9.3441881, -4.1023685, -15.524301…\n$ PROX_CBD_TV             &lt;dbl&gt; -3.22582173, -6.32792021, -4.62353528, 5.17080…\n$ PROX_CHILDCARE_TV       &lt;dbl&gt; 1.000488185, 1.471786337, -0.344047555, 1.5766…\n$ PROX_ELDERLYCARE_TV     &lt;dbl&gt; -3.26126929, 3.84626245, 4.13191383, 2.4756745…\n$ PROX_URA_GROWTH_AREA_TV &lt;dbl&gt; -2.846248368, -1.848971738, -2.648105057, -5.6…\n$ PROX_MRT_TV             &lt;dbl&gt; -1.61864578, -8.92998600, -3.40075727, -7.2870…\n$ PROX_PARK_TV            &lt;dbl&gt; -0.83749312, 2.28192684, 0.66565951, -3.340617…\n$ PROX_PRIMARY_SCH_TV     &lt;dbl&gt; 1.59230221, 6.70194543, 2.90580089, 12.9836104…\n$ PROX_SHOPPING_MALL_TV   &lt;dbl&gt; 2.753588422, -0.886626400, -1.056869486, -0.16…\n$ PROX_BUS_STOP_TV        &lt;dbl&gt; 2.0154464, 4.4941192, 3.0419145, 12.8383775, 0…\n$ NO_Of_UNITS_TV          &lt;dbl&gt; 0.480589953, -1.380026395, -0.045279967, -0.44…\n$ FAMILY_FRIENDLY_TV      &lt;dbl&gt; -0.06902748, 2.69655779, 0.04058290, 14.312764…\n$ FREEHOLD_TV             &lt;dbl&gt; 2.6213469, 3.0452799, 1.1970499, 8.7711485, 1.…\n$ Local_R2                &lt;dbl&gt; 0.8846744, 0.8899773, 0.8947007, 0.9073605, 0.…\n$ coords.x1               &lt;dbl&gt; 22085.12, 25656.84, 23963.99, 27044.28, 41042.…\n$ coords.x2               &lt;dbl&gt; 29951.54, 34546.20, 32890.80, 32319.77, 33743.…\n$ geometry                &lt;POINT [m]&gt; POINT (22085.12 29951.54), POINT (25656.…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#visualising-local-r2",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#visualising-local-r2",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "9.5 Visualising local R2",
    "text": "9.5 Visualising local R2\n\ntmap_mode(\"view\")\ntm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"Local_R2\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#visualising-coefficient-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#visualising-coefficient-estimates",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "9.6 Visualising coefficient estimates",
    "text": "9.6 Visualising coefficient estimates\n\ntmap_mode(\"view\")\nAREA_SQM_SE &lt;- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_SE\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\nAREA_SQM_TV &lt;- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_TV\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\ntmap_arrange(AREA_SQM_SE, AREA_SQM_TV, \n             asp=1, ncol=2,\n             sync = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n9.6.1 By URS Planning Region\n\ntm_shape(mpsz_svy21[mpsz_svy21$REGION_N==\"CENTRAL REGION\", ])+\n  tm_polygons()+\ntm_shape(condo_resale.sf.adaptive) + \n  tm_bubbles(col = \"Local_R2\",\n           size = 0.15,\n           border.col = \"gray60\",\n           border.lwd = 1)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#geospatial-data",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#geospatial-data",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "3.2 Geospatial Data",
    "text": "3.2 Geospatial Data\nFor the purpose of this exercise, three geospatial data will be used. They are:\n\nMPSZ-2019: This data provides the sub-zone boundary of URA Master Plan 2019, it helps us define the geographical boundary of Singapore.\nBusStop: This data provides the location of bus stop as at Jul 2023.\nAnalytical hexagon: Hexagonal grids of 375m (this distance is the perpendicular distance between the centre of the hexagon and its edges) to represent the traffic analysis zone.\n\nIn this section, we import the shapefiles into RStudio using st_read() function of sf package. st_transform() function of sf package is used to transform the projection to coordinate reference system (CRS) 3414, which is the EPSG code for the SVY21 projection used in Singapore.\n\nMaster Plan SubzoneBus StopAnalytical Hexagon\n\n\n\nmpsz &lt;- st_read(dsn=\"data/geospatial\",                   \n                layer=\"MPSZ-2019\")%&gt;%   \n  st_transform(crs = 3414)\n\nReading layer `MPSZ-2019' from data source \n  `C:\\kytjy\\ISSS624\\Take-Home_Ex\\Take-Home_Ex2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\nIn the code chunk below, tm_shape() of tmap package is used to define the input data (i.e mpsz) and tm_polygons() is used to draw the planning subzone polygons.\n\n\nShow the code\ntmap_mode(\"plot\")\n\ntm_shape(mpsz) +\n  tm_polygons(col='#C2D3CC', border.alpha = 0.1)\n\n\n\n\n\n\n\n\nbusstop &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"BusStop\") %&gt;% \n  st_transform(crs = 3414)\n\nReading layer `BusStop' from data source \n  `C:\\kytjy\\ISSS624\\Take-Home_Ex\\Take-Home_Ex2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\nBusstop represents sf point objects for 5161 bus stop in Singapore.\nTo visualise the points of the bus stops, we can use tm_shape() of tmap package with each bus stop point displayed as dots. tmap_mode allows us to view static maps with plot and interactive maps with view.\n\n\nShow the code\ntmap_mode(\"plot\")\ntm_shape(mpsz) +\n  tm_polygons(col='#C2D3CC', border.alpha = 0.1, alpha = 0.3) +\ntm_shape(busstop) +\n  tm_dots()+\ntm_view(set.zoom.limits = c(11,14)) # to fix the map extent, so cannot zoom in too much\n\n\n\n\n\nBefore proceeding, let’s check if there are any duplicated bus stops in the dataset.\n\nbs_dupes &lt;- busstop %&gt;%\n  group_by(BUS_STOP_N) %&gt;%\n  filter(n() &gt; 1) %&gt;%\n  ungroup() %&gt;%\n  arrange(BUS_STOP_N)\n\nknitr::kable(bs_dupes)\n\n\n\n\n\n\n\n\n\n\nBUS_STOP_N\nBUS_ROOF_N\nLOC_DESC\ngeometry\n\n\n\n\n11009\nB04\nGhim Moh Ter\nPOINT (23101.34 32594.17)\n\n\n11009\nB04-TMNL\nGHIM MOH TER\nPOINT (23100.58 32604.36)\n\n\n22501\nB02\nBlk 662A\nPOINT (13489.09 35536.4)\n\n\n22501\nB02\nBLK 662A\nPOINT (13488.02 35537.88)\n\n\n43709\nB06\nBLK 644\nPOINT (18963.42 36762.8)\n\n\n43709\nB06\nBLK 644\nPOINT (18952.02 36751.83)\n\n\n47201\nUNK\nNA\nPOINT (22616.75 47793.68)\n\n\n47201\nNIL\nW’LANDS NTH STN\nPOINT (22632.92 47934)\n\n\n51071\nB21\nMACRITCHIE RESERVOIR\nPOINT (28311.27 36036.92)\n\n\n51071\nB21\nMACRITCHIE RESERVOIR\nPOINT (28282.54 36033.93)\n\n\n52059\nB03\nOPP BLK 65\nPOINT (30770.3 34460.06)\n\n\n52059\nB09\nBLK 219\nPOINT (30565.45 36133.15)\n\n\n53041\nB05\nUpp Thomson Road\nPOINT (28105.8 37246.76)\n\n\n53041\nB07\nUpp Thomson Road\nPOINT (27956.34 37379.29)\n\n\n58031\nUNK\nOPP CANBERRA DR\nPOINT (27089.69 47570.9)\n\n\n58031\nUNK\nOPP CANBERRA DR\nPOINT (27111.07 47517.77)\n\n\n62251\nB03\nBef Blk 471B\nPOINT (35500.54 39943.41)\n\n\n62251\nB03\nBEF BLK 471B\nPOINT (35500.36 39943.34)\n\n\n67421\nB01\nCHENG LIM STN EXIT B\nPOINT (34548.54 42052.15)\n\n\n67421\nNIL\nCHENG LIM STN EXIT B\nPOINT (34741.77 42004.21)\n\n\n68091\nB01\nAFT BAKER ST\nPOINT (32164.11 42695.98)\n\n\n68091\nB08\nAFT BAKER ST\nPOINT (32038.84 43298.68)\n\n\n68099\nB02\nBEF BAKER ST\nPOINT (32154.9 42742.82)\n\n\n68099\nB07\nBEF BAKER ST\nPOINT (32004.05 43320.34)\n\n\n77329\nB01\nBEF PASIR RIS ST 53\nPOINT (40765.35 39452.18)\n\n\n77329\nB03\nPasir Ris Central\nPOINT (40728.15 39438.15)\n\n\n82221\nB01\nBLK 3A\nPOINT (35323.6 33257.05)\n\n\n82221\nB01\nBlk 3A\nPOINT (35308.74 33335.17)\n\n\n96319\nNA\nYusen Logistics\nPOINT (42187.23 34995.78)\n\n\n96319\nNIL\nYUSEN LOGISTICS\nPOINT (42187.23 34995.78)\n\n\n97079\nB14\nOPP ST. JOHN’S CRES\nPOINT (44144.57 38980.25)\n\n\n97079\nB14\nOPP ST. JOHN’S CRES\nPOINT (44055.75 38908.5)\n\n\n\n\n\nThe results displayed 16 pairs of duplicated BUS_STOP_N, with each pair showing a different geometry point for the same bus stop number. This could potentially suggest that these are temporary bus stops. In that case, it would be prudent to retain only one of them, as conventionally, only one bus stop is used at a time.\n\nbusstop &lt;- busstop %&gt;%\n  distinct(BUS_STOP_N, \n           .keep_all = TRUE)\n\nNotice that the number of bus stops has dropped from 5161 to 5145.\nNote from the choropleth map that there are 5 bus stops located outside Singapore, they are bus stops 46239, 46609, 47701, 46211, and 46219. The code chunk below uses filter() to exclude the 5 bus stops outside Singapore.\n\nbusstop &lt;- busstop %&gt;%   \n  filter(!BUS_STOP_N %in% c(46239, 46609, 47701, 46211, 46219))\n\nNotice that the number of bus stops has dropped from 5145 to 5140.\n\n\nA hexagonal grid is used to represent the traffic analysis zones, which helps to model travel demand through capturing the spatial aspects of trip origins and destinations.\nStep 1: Create Hexagonal Grids\nWe first create a hexagonal grid layer of 375m (refers to the perpendicular distance between the centre of the hexagon and its edges) with st_make_grid, st_sf to convert the grid into an sf object with the codes below, and row_number() to assign an ID to each hexagon.\n\n\n\n\n\n\nst_make_grid Arguments\n\n\n\n\n\nst_make_grid function is used to create a grid over a spatial object. It takes 4 arguments, they are:\n\nx: sf object; the input spatial data\ncellsize: for hexagonal cells the distance between opposite edges in the unit of the crs the spatial data is using. In this case, we take cellsize to be 375m * 2 = 750m\n\n\n\nwhat: character; one of: \"polygons\", \"corners\", or \"centers\"\nsquare: indicates whether you are a square grid (TRUE) or hexagon grid (FALSE)\n\n\n\n\n\narea_hexagon_grid = st_make_grid(busstop, \n                                 cellsize= 750, \n                                 what = \"polygons\", \n                                 square = FALSE,\n                                 crs = 3414) %&gt;% \n  st_sf() %&gt;% \n  mutate(grid_id = row_number())\n\nStep 2: Remove grids with no bus stops\nWe count the number of bus stops in each grid and retain only the grids with bus stops using the code chunks below.\nst_intersects is used to identify the bus stops falling inside each hexagon, while lengths returns the number of bus stops inside each hexagon.\n\n# Create a column containing the count of bus stops in each grid\narea_hexagon_grid$busstops = lengths(\n  st_intersects(\n    area_hexagon_grid, \n    busstop))\n\n# Retain hexagons with bus stops\narea_hexagon_grid = filter(area_hexagon_grid, \n                           busstops &gt; 0)\n\nNotice that 831 hexagons have been created.\nStep 3: Check & Visualise\n\nsum(area_hexagon_grid$busstops, na.rm = TRUE)\n\n[1] 5140\n\n\nNote that there are 5140 bus stops, which tallies to the 5140 from the Busstop shape file after deducting for the 5 bus stops outside Singapore boundary and the 16 duplicates, suggesting that the hexagons have managed to capture all expected bus stops.\nIn the bar chart below, it is evident that the distribution of bus stops per hexagon is right-skewed. While one hexagon contains as many as 19 bus stops, the majority have fewer than 10 bus stops.\n\n\nShow the code\nggplot(area_hexagon_grid, \n       aes(x= as.factor(busstops)))+   \n  geom_bar()+   \n  ggtitle(\"No. of Bus Stops per Hexagon\") +\n  geom_text(aes(label = after_stat(count)), \n            stat = \"count\", \n            vjust = -0.5, \n            colour = \"black\")+\n  labs(x= \"No. of Bus Stops\", y = \"Count\")\n\n\n\n\n\nLastly, using tm_shape from tmap package, we can quickly visualise the results of the hexagon grids we have created.\n\n\nShow the code\ntmap_mode (\"plot\")\ntm_shape(area_hexagon_grid)+\n  tm_fill(\n    col = \"busstops\",\n    palette = \"Blues\",\n    style = \"quantile\",\n    title = \"Number of Bus Stops\",\n    id = \"grid_id\",\n    showNA = FALSE,\n    alpha = 0.6,\n    popup.format = list(\n      grid_id = list(format = \"f\", digits = 0)\n    )\n  )+\n  tm_borders(col = \"grey40\", lwd = 0.7)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/In-class_Ex4.html",
    "href": "In-class_Ex/In-class_Ex4/In-class_Ex4.html",
    "title": "In-class Exercise 4: Preparing Spatial Interaction Modelling Variables",
    "section": "",
    "text": "Perform geocoding data downloaded from data.gov.sg using SLA OneMap API,\nConvert an aspatial data into a simple feature tibble data.frame,\nPerform point-in-polygon count analysis,\nAppend the propulsiveness and attractiveness variables onto a flow data, and\nCalibrate Geographically Weighted Poisson Regression"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/In-class_Ex4.html#importing-and-tidying-schools-data",
    "href": "In-class_Ex/In-class_Ex4/In-class_Ex4.html#importing-and-tidying-schools-data",
    "title": "In-class Exercise 4: Preparing Spatial Interaction Modelling Variables",
    "section": "4.1 Importing and tidying schools data",
    "text": "4.1 Importing and tidying schools data\n\nschools &lt;- read_csv(\"data/aspatial/schools.csv\") %&gt;% \n  rename(latitude=results.LATITUDE,\n         longitude=results.LONGITUDE) %&gt;% \n  dplyr::select(postal_code, school_name, latitude, longitude)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/In-class_Ex4.html#converting-an-aspatial-data-into-sf-tibble-data.frame",
    "href": "In-class_Ex/In-class_Ex4/In-class_Ex4.html#converting-an-aspatial-data-into-sf-tibble-data.frame",
    "title": "In-class Exercise 4: Preparing Spatial Interaction Modelling Variables",
    "section": "4.2 Converting an aspatial data into sf tibble data.frame",
    "text": "4.2 Converting an aspatial data into sf tibble data.frame\nNext, you will convert schools tibble data.frame data into a simple feature tibble data.frame called schools_sf by using values in latitude and longitude fields.\n\nschools_sf &lt;- st_as_sf(schools, \n                       coords=c(\"longitude\",\"latitude\"), \n                       crs=4326) %&gt;% \n  st_transform(crs=3414)\n\n3 variables in output sf tibble data frame. Lon&lat combined into 1 point column.\n\n4.3 Plotting a point simple feature layer\nTo ensure that schools sf tibble data.fame has been projected and converted correctly, plot the schools point data for visual inspection.\n\nmpsz &lt;- st_read(dsn=\"data/geospatial\",                   \n                layer=\"MPSZ-2019\")%&gt;%   \n  st_transform(crs = 3414)\n\nReading layer `MPSZ-2019' from data source \n  `C:\\kytjy\\ISSS624\\In-class_Ex\\In-class_Ex4\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\n#| code-fold: true\n#| code-summary: \"Show the code\"\n\ntmap_mode(\"view\")\ntm_shape(schools_sf) +\n  tm_dots()+\ntm_view(set.zoom.limits = c(11,14)) # to fix the map extent, so cannot zoom in too much\n\n\n\n\n\ntmap_mode(\"plot\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/In-class_Ex4.html#goodness-of-fit",
    "href": "In-class_Ex/In-class_Ex4/In-class_Ex4.html#goodness-of-fit",
    "title": "In-class Exercise 4: Preparing Spatial Interaction Modelling Variables",
    "section": "8.1. Goodness-of-Fit",
    "text": "8.1. Goodness-of-Fit\n\nCalcRSquared &lt;- function(observed, estimated) {\n  r &lt;- cor(observed, estimated)\n  R2 &lt;- r^2\n  R2\n}\n\nCalcRSquared(orcSIM_Poisson$data$TRIPS, orcSIM_Poisson$fitted.values)\n\n[1] 0.4362208\n\n\nUsed residuals in the orcSIM_Poisson table to see which one is useful"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/In-class_Ex4.html#root-mean-square-error",
    "href": "In-class_Ex/In-class_Ex4/In-class_Ex4.html#root-mean-square-error",
    "title": "In-class Exercise 4: Preparing Spatial Interaction Modelling Variables",
    "section": "8.2 Root mean square error",
    "text": "8.2 Root mean square error\n\nperformance_rmse(orcSIM_Poisson,\n                 normalized=FALSE) #only use raw values rather than standardised variables\n\n[1] 2613.236"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#geospatial-data-wrangling",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#geospatial-data-wrangling",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "3.3 Geospatial Data Wrangling",
    "text": "3.3 Geospatial Data Wrangling\n\n3.3.1 Combining Busstop and Hexagons\nCode chunk below populates the grid ID (i.e. grid_id) of area_hexagon_grid sf data frame into busstop sf data frame using the following functions:\n\nst_intersection() is used to perform point and polygon overly and the output will be in point sf object.\nselect() of dplyr package is then use to retain preferred variables from the data frames.\nst_stop_geometry() removes the geometry data to manipulate it like a regular dataframe using tidyr and dplyr functions\n\n\nbs_wgrids &lt;- st_intersection(busstop, area_hexagon_grid) %&gt;% \n  dplyr::select(BUS_STOP_N,BUS_ROOF_N,LOC_DESC, grid_id) %&gt;% \n  st_drop_geometry\n\nBefore we proceed, let’s perform a duplicates check on bs_wgrids.\n\nduplicate &lt;- bs_wgrids %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nduplicate\n\n# A tibble: 0 × 4\n# ℹ 4 variables: BUS_STOP_N &lt;chr&gt;, BUS_ROOF_N &lt;chr&gt;, LOC_DESC &lt;chr&gt;,\n#   grid_id &lt;int&gt;\n\n\nResults showed that there are no duplicated records.\n\n\n3.3.2 Populate Passenger Volume data with Grid IDs\nNext, we are going to append the Grid IDs based on origin bus stops from bs_wgrids data frame onto WDMpeak data frame. But before that, ensure that BUS_STOP_N of bs_wgrids is also in factor data type.\n\nbs_wgrids$BUS_STOP_N  &lt;- as.factor(bs_wgrids$BUS_STOP_N)\n\n\nod_data &lt;- left_join(WDMpeak , bs_wgrids,\n            by = c(\"ORIGIN_PT_CODE\" = \"BUS_STOP_N\")) %&gt;% \n  rename(ORIGIN_BS = ORIGIN_PT_CODE,\n         ORIGIN_GRID = grid_id,\n         ORIGIN_DESC = LOC_DESC,\n         DESTIN_BS = DESTINATION_PT_CODE)\n\nNext, we will update od_data data frame with the Grid IDs of destination bus stops.\n\nod_data &lt;- left_join(od_data , bs_wgrids,\n            by = c(\"DESTIN_BS\" = \"BUS_STOP_N\")) %&gt;% \n           rename(DESTIN_GRID = grid_id,\n                  DESTIN_DESC = LOC_DESC)\n\nglimpse(od_data)\n\nRows: 242,208\nColumns: 9\nGroups: ORIGIN_BS [5,029]\n$ ORIGIN_BS    &lt;fct&gt; 01012, 01012, 01012, 01012, 01012, 01012, 01012, 01012, 0…\n$ DESTIN_BS    &lt;fct&gt; 01112, 01113, 01121, 01211, 01311, 07371, 60011, 60021, 6…\n$ TRIPS        &lt;dbl&gt; 290, 118, 77, 118, 165, 14, 30, 16, 35, 26, 2, 8, 1, 2, 2…\n$ BUS_ROOF_N.x &lt;chr&gt; \"B03\", \"B03\", \"B03\", \"B03\", \"B03\", \"B03\", \"B03\", \"B03\", \"…\n$ ORIGIN_DESC  &lt;chr&gt; \"HOTEL GRAND PACIFIC\", \"HOTEL GRAND PACIFIC\", \"HOTEL GRAN…\n$ ORIGIN_GRID  &lt;int&gt; 1334, 1334, 1334, 1334, 1334, 1334, 1334, 1334, 1334, 133…\n$ BUS_ROOF_N.y &lt;chr&gt; \"B07\", \"B09\", \"B11\", \"B13\", \"B01\", \"B01\", \"B01\", \"B03\", \"…\n$ DESTIN_DESC  &lt;chr&gt; \"OPP BUGIS STN EXIT C\", \"BUGIS STN EXIT B\", \"STAMFORD PR …\n$ DESTIN_GRID  &lt;int&gt; 1354, 1354, 1392, 1392, 1411, 1411, 1393, 1431, 1450, 143…\n\n\nThe code chunk below allows us to check for duplicates to prevent double counting. The results indicate that there are no duplicates found.\n\nduplicate2 &lt;- od_data %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nduplicate2\n\n# A tibble: 0 × 9\n# ℹ 9 variables: ORIGIN_BS &lt;fct&gt;, DESTIN_BS &lt;fct&gt;, TRIPS &lt;dbl&gt;,\n#   BUS_ROOF_N.x &lt;chr&gt;, ORIGIN_DESC &lt;chr&gt;, ORIGIN_GRID &lt;int&gt;,\n#   BUS_ROOF_N.y &lt;chr&gt;, DESTIN_DESC &lt;chr&gt;, DESTIN_GRID &lt;int&gt;\n\n\nNext, the code chunk below removes rows with missing data using drop_na() and aggregates the total passenger trips at each origin-destination grid level with group_by() and summarise(). ORIGIN_nBS and DESTIN_nBS counts the number of bus stops, while ORIGIN_DESC and DESTIN_DESC provides the descriptions of each of the bus stops at origin and destination grids respectively.\n\nod_data &lt;- od_data %&gt;%\n  drop_na() %&gt;%\n  group_by(ORIGIN_GRID, DESTIN_GRID) %&gt;%\n  summarise(MORNING_PEAK = sum(TRIPS),\n            ORIGIN_nBS = n_distinct(ORIGIN_BS),\n            ORIGIN_DESC = str_c(unique(ORIGIN_DESC), collapse = \", \"),\n            DESTIN_nBS = n_distinct(DESTIN_BS),\n            DESTIN_DESC = str_c(unique(DESTIN_DESC), collapse = \", \")) %&gt;%\n  ungroup()\n\nOur resulting OD Matrix organises the commuter flows for weekday morning peak period in a column-wise format, with origin_grid representing the from and destin_grid representing the to. There are a total of 65,559 unique origin grid to destination grid combinations.\n\n\nShow the code\nDT::datatable(od_data,\n              options = list(pageLength = 5),\n              rownames = FALSE)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#removing-intra-zonal-flows",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#removing-intra-zonal-flows",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "4.1 Removing Intra-Zonal Flows",
    "text": "4.1 Removing Intra-Zonal Flows\nIntrazonal travels are considered localised and short duration trips within a transportation analysis zone (i.e. within a hexagon). For our analysis, we will be removing them.\n\nod_data1 &lt;- od_data[od_data$ORIGIN_GRID!=od_data$DESTIN_GRID,]\n\nThere are 623 intra-zonal travels noted from the decrease in observations from 65,559 to 64,936."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#creating-flow-lines",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#creating-flow-lines",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "4.2 Creating Flow Lines",
    "text": "4.2 Creating Flow Lines\nDesire lines visually represent the connections between originating and destination hexagons using straight lines. The od2line() function of stplanr package is utilized to create these lines. The width of each desire line is proportional to number of passenger trips, i.e. thicker lines would represent higher ridership.\n\n# Creating centroids representing desire line start and end points\nflowLine &lt;- od2line(flow = od_data1, \n                    zones = area_hexagon_grid,\n                    zone_code = \"grid_id\")\n\nSince there are 65,559 different flow lines resulting from combinations of origin to destination hexagons, an excess of intersecting lines can cause visual clutter and obscure analysis. Considering that the 90th percentile is 658, we will focus on inter-zonal flows with the top 10% of ridership.\n\n\nShow the code\ntmap_mode(\"view\")\ntmap_options(check.and.fix = TRUE)\n\n#tm_basemap(\"OneMapSG.Grey\") +\ntm_basemap(\"OpenStreetMap\") +\ntm_shape(mpsz) +\n  tm_polygons(alpha = 0) +\n  tm_borders(alpha = 0.5)+\ntm_shape(area_hexagon_grid) +\n  tm_fill(alpha=0.7, \n          palette=\"RdBu\") + \n  tm_borders(alpha = 0.5)+\nflowLine %&gt;%  \n  filter(MORNING_PEAK &gt;= 659) %&gt;% \ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.3,\n           lines.lwd = \"all\",\n           popup.vars = c(\"No. of Bus Stops at Origin: \" = \"ORIGIN_nBS\",\n                         \"Descriptions of Bus Stops at Origin: \" = \"ORIGIN_DESC\",\n                         \"No. of Bus Stops at Destination: \" = \"DESTIN_nBS\",\n                         \"Descriptions of Bus Stops at Destination: \" = \"DESTIN_DESC\",\n                         \"No. of Passenger Trips :\" = \"MORNING_PEAK\"))\n\n\n\n\n\n\n\nShow the code\n#tm_view(set.zoom.limits = c(11,14))\n\n\nThe map reveals that Yew Tee, Woodlands, and Yishun dominate bus ridership during weekday mornings, with notably wider desire lines. Key routes include travel within Yew Tee, between Woodlands Checkpoint and Woodlands MRT Station, as well as within Woodlands and Yishun. Interestingly, though broad, these desire lines are relatively short, often indicating bus travel to neighboring hexagons. This suggests a higher demand for feeder bus services in these areas during weekday mornings. Areas such as Boon Lay, Bedok, Choa Chu Kang, Clementi, Tampines, Pasir Ris, and Serangoon also display high concentrations and variations of desire lines with neighboring hexagons, indicating higher ridership within these areas.\nFurthermore, longer desire lines between the North and East (i.e., Woodlands and Changi) suggest passengers’ willingness to travel longer distances to their destinations.\nWhile OD flows provide valuable insights by quickly visualizing travel patterns, it is beneficial to complement them with other forms of analysis, such as spatial interaction models, for a more comprehensive understanding of the factors affecting urban commuting flow."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#converting-from-sf-data.table-to-spatialpolygonsdataframe",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#converting-from-sf-data.table-to-spatialpolygonsdataframe",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "5.1 Converting from sf data.table to SpatialPolygonsDataFrame",
    "text": "5.1 Converting from sf data.table to SpatialPolygonsDataFrame\nFirstly, as.Spatial() will be used to convert area_hexagon_grid from sf tibble data frame to SpatialPolygonsDataFrame of sp object as shown in the code chunk below.\n\nhexgrid_sp &lt;- as(area_hexagon_grid, \"Spatial\")\nhexgrid_sp\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 831 \nextent      : 3595.122, 48595.12, 26049.09, 50297.8  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 2\nnames       : grid_id, busstops \nmin values  :      21,        1 \nmax values  :    2267,       19"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#computing-distance-matrix-1",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#computing-distance-matrix-1",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "5.2 Computing Distance Matrix",
    "text": "5.2 Computing Distance Matrix\nNext, spDists() of sp package will be used to compute the Euclidean distance between the centroids of the planning subzones. spDists returns a full matrix of distances in the metric of the points if longlat=FALSE, or in kilometers if longlat=TRUE. With 831 hexagons, the return results will produce a 831 by 831 matrix of distance between each hexagon.\n\ndist &lt;- spDists(hexgrid_sp, \n                longlat = FALSE)\n\nhead(dist, n=c(6, 6))\n\n         [,1]     [,2]     [,3]     [,4]     [,5]     [,6]\n[1,]    0.000  750.000 3269.174 1500.000 2704.163 3968.627\n[2,]  750.000    0.000 2598.076  750.000 1984.313 3269.174\n[3,] 3269.174 2598.076    0.000 1984.313  750.000  750.000\n[4,] 1500.000  750.000 1984.313    0.000 1299.038 2598.076\n[5,] 2704.163 1984.313  750.000 1299.038    0.000 1299.038\n[6,] 3968.627 3269.174  750.000 2598.076 1299.038    0.000\n\n\nThe resulting output is a matrix object class.\nNote that column headers and row headers are not labeled with the grid IDs, in the next step, we rename the headers for better clarity.\n\ngrid_id &lt;- area_hexagon_grid$grid_id\n\ncolnames(dist) &lt;- paste0(grid_id)\nrownames(dist) &lt;- paste0(grid_id)\n\nhead(dist, n=c(6, 6))\n\n         21       40       42       60       61       62\n21    0.000  750.000 3269.174 1500.000 2704.163 3968.627\n40  750.000    0.000 2598.076  750.000 1984.313 3269.174\n42 3269.174 2598.076    0.000 1984.313  750.000  750.000\n60 1500.000  750.000 1984.313    0.000 1299.038 2598.076\n61 2704.163 1984.313  750.000 1299.038    0.000 1299.038\n62 3968.627 3269.174  750.000 2598.076 1299.038    0.000\n\n\nNotice that the column and row names have been updated to the grid IDs."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#pivoting-distance-value-by-grid-id",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#pivoting-distance-value-by-grid-id",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "5.3 Pivoting Distance Value by Grid ID",
    "text": "5.3 Pivoting Distance Value by Grid ID\nNext, we will pivot the distance matrix into a long table by using the row and column grid IDs using (melt())[https://www.rdocumentation.org/packages/reshape2/versions/1.4.4/topics/melt] of the reshape2 package, as shown in the code chunk below.\n\ndistPair &lt;- melt(dist) %&gt;%\n  rename(dist = value,\n         orig = Var1,\n         dest = Var2)\n\nhead(distPair, 5)\n\n  orig dest     dist\n1   21   21    0.000\n2   40   21  750.000\n3   42   21 3269.174\n4   60   21 1500.000\n5   61   21 2704.163\n\n\nNotice that the within-zone distance is 0."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#updating-intra-zonal-distances",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#updating-intra-zonal-distances",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "5.4 Updating Intra-Zonal Distances",
    "text": "5.4 Updating Intra-Zonal Distances\nIn this section, we are going to append a constant value to replace the intra-zonal distance of 0.\nFirst, we will select and find out the minimum value of the distance by using summary().\n\ndistPair %&gt;%\n  filter(dist &gt; 0) %&gt;%\n  summary()\n\n      orig           dest           dist      \n Min.   :  21   Min.   :  21   Min.   :  750  \n 1st Qu.: 789   1st Qu.: 789   1st Qu.: 8250  \n Median :1200   Median :1200   Median :13269  \n Mean   :1150   Mean   :1150   Mean   :14135  \n 3rd Qu.:1529   3rd Qu.:1529   3rd Qu.:18929  \n Max.   :2267   Max.   :2267   Max.   :44680  \n\n\nNext, an arbitrary constant distance value of 100m is added into intra-zones distance\n\ndistPair$dist &lt;- ifelse(distPair$dist == 0,\n                        100, \n                        distPair$dist)\n\nThe code chunk below will be used to check the result using summary().\n\nsummary(distPair)\n\n      orig           dest           dist      \n Min.   :  21   Min.   :  21   Min.   :  100  \n 1st Qu.: 789   1st Qu.: 789   1st Qu.: 8250  \n Median :1200   Median :1200   Median :13269  \n Mean   :1150   Mean   :1150   Mean   :14119  \n 3rd Qu.:1529   3rd Qu.:1529   3rd Qu.:18929  \n Max.   :2267   Max.   :2267   Max.   :44680"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#separating-intra-flow-from-passenger-volume-df",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#separating-intra-flow-from-passenger-volume-df",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "5.5 Separating intra-flow from passenger volume df",
    "text": "5.5 Separating intra-flow from passenger volume df\n\nflow_data &lt;- od_data %&gt;%\n  group_by(ORIGIN_GRID, DESTIN_GRID) %&gt;% \n  summarize(TRIPS = sum(MORNING_PEAK)) \n\nglimpse(flow_data)\n\nRows: 65,691\nColumns: 3\nGroups: ORIGIN_GRID [814]\n$ ORIGIN_GRID &lt;int&gt; 21, 21, 21, 21, 21, 21, 40, 40, 40, 40, 40, 40, 40, 40, 42…\n$ DESTIN_GRID &lt;int&gt; 61, 79, 116, 140, 159, 160, 21, 61, 78, 80, 116, 136, 140,…\n$ TRIPS       &lt;dbl&gt; 1, 1, 4, 3, 93, 1, 1, 2, 1, 2, 3, 1, 2, 40, 1, 1, 3, 2, 2,…\n\n\n\n#flow_data$ORIGIN_GRID &lt;- as.factor(flow_data$ORIGIN_GRID)\n#flow_data$DESTIN_GRID &lt;- as.factor(flow_data$DESTIN_GRID)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#combining-passenger-volume-data-with-distance-value",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#combining-passenger-volume-data-with-distance-value",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "5.5 Combining passenger volume data with distance value",
    "text": "5.5 Combining passenger volume data with distance value\nLet’s convert the origin and destination grid data in od_data and distPair into factor data type before we combine passenger volume data from od_data and distance from distPair using left_join().\n\nod_data$ORIGIN_GRID  &lt;- as.factor(od_data$ORIGIN_GRID)\nod_data$DESTIN_GRID  &lt;- as.factor(od_data$DESTIN_GRID)\n\ndistPair$orig  &lt;- as.factor(distPair$orig)\ndistPair$dest  &lt;- as.factor(distPair$dest)\n\nflow_data &lt;- od_data %&gt;%\n  left_join (distPair,\n             by = c(\"ORIGIN_GRID\" = \"orig\",\n                    \"DESTIN_GRID\" = \"dest\"))\n\nglimpse(flow_data)\n\nRows: 65,559\nColumns: 9\n$ ORIGIN_GRID  &lt;fct&gt; 21, 21, 21, 21, 21, 21, 40, 40, 40, 40, 40, 40, 40, 40, 4…\n$ DESTIN_GRID  &lt;fct&gt; 61, 79, 116, 140, 159, 160, 21, 61, 78, 80, 116, 136, 140…\n$ MORNING_PEAK &lt;dbl&gt; 1, 1, 4, 3, 93, 1, 1, 2, 1, 2, 3, 1, 2, 40, 1, 1, 3, 2, 2…\n$ ORIGIN_nBS   &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ ORIGIN_DESC  &lt;chr&gt; \"AFT TUAS STH BLVD\", \"AFT TUAS STH BLVD\", \"AFT TUAS STH B…\n$ DESTIN_nBS   &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, …\n$ DESTIN_DESC  &lt;chr&gt; \"THE INDEX\", \"ABBOTT\", \"AFT TUAS STH ST 7\", \"BEF TUAS AVE…\n$ Zone_Type    &lt;chr&gt; \"interzone\", \"interzone\", \"interzone\", \"interzone\", \"inte…\n$ dist         &lt;dbl&gt; 2704.163, 2250.000, 1984.313, 6873.864, 7611.669, 8842.37…"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#background",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#background",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "",
    "text": "Urban mobility, characterized by the daily commute of urban dwellers from homes to workplaces, presents complex challenges for transport operators and urban managers. Traditional approaches to understanding these mobility patterns, such as commuter surveys, are often hindered by high costs, time-consuming processes, and the rapid obsolescence of collected data. However, the digitalisation of city-wide urban infrastructures, including public buses, mass rapid transits, and other utilities, alongside the advent of pervasive computing technologies like GPS and SMART cards, offers a new paradigm in tracking and analyzing urban movement."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#o-d-data",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#o-d-data",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "3.1 O-D Data",
    "text": "3.1 O-D Data\n\nImporting csvAttributesExtracting Study Data\n\n\nPassenger Volume by Origin Destination Bus Stops dataset for October 2023, downloaded from LTA DataMall by using read_csv() or readr package.\n\nodbus &lt;- read_csv(\"data/aspatial/origin_destination_bus_202310.csv\")\n\n\n\nglimpse() of the dplyr package allows us to see all columns and their data type in the data frame.\n\nglimpse(odbus)\n\nRows: 5,694,297\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-10\", \"2023-10\", \"2023-10\", \"2023-10\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKENDS/HOLIDAY\", \"WEEKDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       &lt;dbl&gt; 16, 16, 14, 14, 17, 17, 17, 7, 14, 14, 10, 20, 20,…\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;chr&gt; \"04168\", \"04168\", \"80119\", \"80119\", \"44069\", \"2028…\n$ DESTINATION_PT_CODE &lt;chr&gt; \"10051\", \"10051\", \"90079\", \"90079\", \"17229\", \"2014…\n$ TOTAL_TRIPS         &lt;dbl&gt; 3, 5, 3, 5, 4, 1, 24, 2, 1, 7, 3, 2, 5, 1, 1, 1, 1…\n\n\nObservations:\n\nThere are 7 variables in the odbus tibble data, they are:\n\nYEAR_MONTH: Month in which data is collected\nDAY_TYPE: Weekdays or weekends/holidays\nTIME_PER_HOUR: Hour which the passenger trip is based on, in intervals from 0 to 23 hours\nPT_TYPE: Type of public transport, i.e. bus\nORIGIN_PT_CODE: Origin bus stop ID\nDESTINATION_PT_CODE: Destination bus stop ID\n\nTOTAL_TRIPS: Number of trips We also note that values in ORIGIN_PT_CODE and DESTINATON_PT_CODE are in numeric data type. These should be in factor data type for further processing and georeferencing.\n\nas.factor() can be used to convert the variables ORIGIN_PT_CODE and DESTINATON_PT_CODE from numeric to categorical data type. We use glimpse() again to check the results.\n\nodbus$ORIGIN_PT_CODE &lt;- as.factor(odbus$ORIGIN_PT_CODE)\nodbus$DESTINATION_PT_CODE &lt;- as.factor(odbus$DESTINATION_PT_CODE)\n\nglimpse(odbus)\n\nRows: 5,694,297\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-10\", \"2023-10\", \"2023-10\", \"2023-10\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKENDS/HOLIDAY\", \"WEEKDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       &lt;dbl&gt; 16, 16, 14, 14, 17, 17, 17, 7, 14, 14, 10, 20, 20,…\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;fct&gt; 04168, 04168, 80119, 80119, 44069, 20281, 20281, 1…\n$ DESTINATION_PT_CODE &lt;fct&gt; 10051, 10051, 90079, 90079, 17229, 20141, 20141, 1…\n$ TOTAL_TRIPS         &lt;dbl&gt; 3, 5, 3, 5, 4, 1, 24, 2, 1, 7, 3, 2, 5, 1, 1, 1, 1…\n\n\nNote that both of them are in factor data type now.\n\n\nIn our study, we would like to analyse the 1 of the peak hour periods identified. We will be analysing the Weekday Morning peak periods thereafter. Therefore, we can employ a combination of the following functions to obtain the relevant data:\nSummary of the functions used as follow:\n\nfilter(): Retains rows that satisfies our condition (i.e. Weekday Morning peak period)\nselect() of dplyr package: Retains the desired variables for further analysis.\ngroup_by() and summarise(): Aggregates the total trips at each combination of origin bus stop, destination bus stop, and peak period.\n\n\nWDMpeak &lt;- odbus %&gt;%\n  filter(DAY_TYPE==\"WEEKDAY\" & (TIME_PER_HOUR &gt;= 6 & TIME_PER_HOUR &lt;= 9)) %&gt;% \n  dplyr::select(5:7)  %&gt;% \n  group_by(ORIGIN_PT_CODE, DESTINATION_PT_CODE) %&gt;% \n  summarise(TRIPS=sum(TOTAL_TRIPS))\n\nLet’s check the output using the glimpse() function of dplyr.\n\nglimpse(WDMpeak)\n\nRows: 242,208\nColumns: 3\nGroups: ORIGIN_PT_CODE [5,029]\n$ ORIGIN_PT_CODE      &lt;fct&gt; 01012, 01012, 01012, 01012, 01012, 01012, 01012, 0…\n$ DESTINATION_PT_CODE &lt;fct&gt; 01112, 01113, 01121, 01211, 01311, 07371, 60011, 6…\n$ TRIPS               &lt;dbl&gt; 290, 118, 77, 118, 165, 14, 30, 16, 35, 26, 2, 8, …"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#od-flow-distribution",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#od-flow-distribution",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "4.2 OD Flow Distribution",
    "text": "4.2 OD Flow Distribution\n\n\nShow the code\nquantile(od_data1$MORNING_PEAK, \n         probs = seq(0, 1.0, by = .1))\n\n\n   0%   10%   20%   30%   40%   50%   60%   70%   80%   90%  100% \n    1     2     5    11    21    37    67   124   252   658 77433 \n\n\nFrom the summary statistics above, the minimum number of passenger trips for each combination of origin and destination bus stop is 1. The maximum observed is 77,433 passengers, occurring during the weekday morning peak period. Furthermore, the 90th percentile is 174 passengers. This data suggests a highly right-skewed distribution."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/In-class_Ex4.html#performing-point-in-polygon-count-process",
    "href": "In-class_Ex/In-class_Ex4/In-class_Ex4.html#performing-point-in-polygon-count-process",
    "title": "In-class Exercise 4: Preparing Spatial Interaction Modelling Variables",
    "section": "4.4 Performing Point-in-Polygon Count Process",
    "text": "4.4 Performing Point-in-Polygon Count Process\n\nmpsz$`SCHOOL_COUNT` &lt;- lengths(\n  st_intersects(\n    mpsz, schools_sf #must be in the same projection system\n  )\n)\n\nIt is always a good practice to examine the summary statistics of the derived variable.\n\n\nShow the code\nsummary(mpsz$SCHOOL_COUNT)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   0.000   1.054   2.000  12.000 \n\n\nThe summary statistics above reveals that there are excessive 0 values in SCHOOL_COUNT field. If log() is going to use to transform this field, additional step is required to ensure that all 0 will be replaced with a value between 0 and 1 but not 0 neither 1."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#distance-distribution",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#distance-distribution",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "5.6 Distance Distribution",
    "text": "5.6 Distance Distribution\n\n\nShow the code\nquantile(flow_data$dist, \n         probs = seq(0, 1.0, by = .1))\n\n\n       0%       10%       20%       30%       40%       50%       60%       70% \n  100.000  1500.000  2598.076  3436.932  4500.000  5408.327  6538.348  7937.254 \n      80%       90%      100% \n 9807.523 12346.558 24784.067 \n\n\nFrom the summary statistics above, the minimum number of passenger trips for each combination of origin and destination bus stop is 100m, which is the arbitrary intrazonal travel distance we have set. The maximum observed is 24,784m.\n\n\nShow the code\n# Extract column\ndistWDM_distance &lt;- flow_data$dist\n# Calculate mean \ndistWDM_distance_mean &lt;- mean(distWDM_distance)\n\nggplot(\n    data = data.frame(distWDM_distance),\n    aes(x = distWDM_distance)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"black\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = distWDM_distance_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  scale_x_continuous(breaks = pretty(distWDM_distance, n = 10))+\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 9000, \n    y = 7500,\n    label = paste(\"Mean =\", round(distWDM_distance_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Weekday Morning Peak\",\n    x = \"Distance of Bus Trips\",\n    y = \"Frequency\"\n  )"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#visualise-flow-lines",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#visualise-flow-lines",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "5.6 Visualise Flow Lines",
    "text": "5.6 Visualise Flow Lines\nSince the 90th percentile of the distance traveled is 12,346.558m, we will filter the data for distances greater than 12,347m to analyse the top 10% of the longest distances traveled.\n\n\nShow the code\n# Creating centroids representing desire line start and end points\nflowLine2 &lt;- od2line(flow = flow_data, \n                    zones = area_hexagon_grid,\n                    zone_code = \"grid_id\")\n\ntmap_mode(\"view\")\ntmap_options(check.and.fix = TRUE)\n\n#tm_basemap(\"OneMapSG.Grey\") +\ntm_basemap(\"OpenStreetMap\") +\ntm_shape(mpsz) +\n  tm_polygons(alpha = 0) +\n  tm_borders(alpha = 0.5)+\ntm_shape(area_hexagon_grid) +\n  tm_fill(alpha=0.7, \n          palette=\"RdBu\") + \n  tm_borders(alpha = 0.5)+\nflowLine2 %&gt;%  \n  filter(dist &gt;= 12347) %&gt;% \ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.3,\n           lines.lwd = \"all\",\n           popup.vars = c(\"No. of Bus Stops at Origin: \" = \"ORIGIN_nBS\",\n                         \"Descriptions of Bus Stops at Origin: \" = \"ORIGIN_DESC\",\n                         \"No. of Bus Stops at Destination: \" = \"DESTIN_nBS\",\n                         \"Descriptions of Bus Stops at Destination: \" = \"DESTIN_DESC\",\n                         \"No. of Passenger Trips :\" = \"MORNING_PEAK\"))\n\n\n\n\n\n\n\nShow the code\n#tm_view(set.zoom.limits = c(11,14))\n\n\nThe plot below reveals that longer travel distances predominantly occur between North and North-East regions (i.e., Woodlands/Yishun and Punggol), North and East (Woodlands and Tampines), West and South (Choa Chu Kang/Bukit Panjang and the Town area), and North and South (Yishun and the Town area). These patterns may reflect commuting trends between residential and commercial areas, suggesting that significant portion of the population undertake considerable daily commutes.\nThe sparseness of flow lines seen in the West-end also ascertains the trends noted in our previous Take-Home Exercise 1, where low-low autocorrelation were noted in that area.\nIn the subsequent sections, we explore the potential factors that could attract or propel passengers to travel by bus from one location to another. This exploration will include examining various urban elements such as the proximity to key amenities like schools, shopping centers, and employment hubs. Understanding these elements can provide valuable insights into improving public transportation systems and urban planning strategies."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#visualising-distribution-of-variables",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#visualising-distribution-of-variables",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "8.1 Visualising Distribution of Variables",
    "text": "8.1 Visualising Distribution of Variables\n\nTrips (Dependent Variable)Independent VariablesTrips against Distance\n\n\nFirstly, let us plot the distribution of the dependent variable (i.e. TRIPS) by using histogram method by using the code chunk below.\n\n\nShow the code\n# Extract column\ndist_Trips &lt;- flowdata_final$TRIPS\n# Calculate mean \ndist_Trips_mean &lt;- mean(dist_Trips)\n\nggplot(\n    data = data.frame(dist_Trips),\n    aes(x = dist_Trips)\n  ) +\n  geom_histogram(\n    bins = 20, \n    color = \"#FFFCF9\", \n    fill = \"black\",\n    alpha = .3\n  ) +\n  # Add line for mean\n  geom_vline(\n    xintercept = dist_Trips_mean, \n    color = \"#595DE5\", \n    linetype = \"dashed\", \n    linewidth = 1\n  ) +\n  # Add line annotations\n  annotate(\n    \"text\", \n    x = 10000, \n    y = 4000,\n    label = paste(\"Mean =\", round(dist_Trips_mean, 3)),\n    color = \"#595DE5\",\n    size = 3\n  ) +\n  labs(\n    title = \"Distribution of Trips\",\n    x = \"Bus Trips\",\n    y = \"Frequency\"\n  ) \n\n\n\n\n\nNotice that the distribution is highly right-skewed.\n\n\nThe code chunk below is used to create histograms for all origin and destination related variables. Then, ggarrange() is used to organised these histogram into a 3 columns by 3 rows of multiple small plots.\nOrigin Variables\n\n\nShow the code\nplot_ori_ts &lt;- ggplot(data=flowdata_final, aes(x= `ORI_TRAINEXITS`)) + \n  geom_histogram(bins = 20, color = \"#FFFCF9\", fill = \"black\", alpha = .3)\n\nplot_ori_biz &lt;- ggplot(data=flowdata_final, aes(x= `ORI_BIZ`)) +\n  geom_histogram(bins = 20, color = \"#FFFCF9\", fill = \"black\", alpha = .3)\n\nplot_ori_fs &lt;- ggplot(data=flowdata_final, aes(x= `ORI_FS`)) +\n  geom_histogram(bins = 20, color = \"#FFFCF9\", fill = \"black\", alpha = .3)\n\nplot_ori_recs &lt;- ggplot(data=flowdata_final, aes(x= `ORI_RECS`)) + \n  geom_histogram(bins = 20, color = \"#FFFCF9\", fill = \"black\", alpha = .3)\n\nplot_ori_retail &lt;- ggplot(data=flowdata_final, aes(x= `ORI_RETAIL`)) +\n  geom_histogram(bins = 20, color = \"#FFFCF9\", fill = \"black\", alpha = .3)\n\nplot_ori_schools &lt;- ggplot(data=flowdata_final, aes(x= `ORI_SCHOOLS`)) +\n  geom_histogram(bins = 20, color = \"#FFFCF9\", fill = \"black\", alpha = .3)\n\nplot_ori_hdbpop &lt;- ggplot(data=flowdata_final, aes(x= `ORI_HDBPOP`)) +\n  geom_histogram(bins = 20, color = \"#FFFCF9\", fill = \"black\", alpha = .3)\n\n\n\nggarrange(plot_ori_ts, plot_ori_biz, plot_ori_fs, \n          plot_ori_recs, plot_ori_retail, plot_ori_schools,\n          plot_ori_hdbpop,\n          ncol = 3, nrow = 3)\n\n\n\n\n\nDestination Variables\n\n\nShow the code\nplot_des_ts &lt;- ggplot(data=flowdata_final, aes(x= `DEST_TRAINEXITS`)) + \n  geom_histogram(bins = 20, color = \"#FFFCF9\", fill = \"black\", alpha = .3)\n\nplot_des_biz &lt;- ggplot(data=flowdata_final, aes(x= `DEST_BIZ`)) +\n  geom_histogram(bins = 20, color = \"#FFFCF9\", fill = \"black\", alpha = .3)\n\nplot_des_fs &lt;- ggplot(data=flowdata_final, aes(x= `DEST_FS`)) +\n  geom_histogram(bins = 20, color = \"#FFFCF9\", fill = \"black\", alpha = .3)\n\nplot_des_recs &lt;- ggplot(data=flowdata_final, aes(x= `DEST_RECS`)) + \n  geom_histogram(bins = 20, color = \"#FFFCF9\", fill = \"black\", alpha = .3)\n\nplot_des_retail &lt;- ggplot(data=flowdata_final, aes(x= `DEST_RETAIL`)) +\n  geom_histogram(bins = 20, color = \"#FFFCF9\", fill = \"black\", alpha = .3)\n\nplot_des_schools &lt;- ggplot(data=flowdata_final, aes(x= `DEST_SCHOOLS`)) +\n  geom_histogram(bins = 20, color = \"#FFFCF9\", fill = \"black\", alpha = .3)\n\nplot_des_hdbpop &lt;- ggplot(data=flowdata_final, aes(x= `DEST_HDBPOP`)) +\n  geom_histogram(bins = 20, color = \"#FFFCF9\", fill = \"black\", alpha = .3)\n\n\n\nggarrange(plot_des_ts, plot_des_biz, plot_des_fs, \n          plot_des_recs, plot_des_retail, plot_des_schools,\n          plot_des_hdbpop,\n          ncol = 3, nrow = 3)\n\n\n\n\n\nThe distribution for the dependent variables are highly right-skewed as well.\n\n\nNext, let us visualise the relation between the dependent variable and distance, which is one of the key independent variable in our Spatial Interaction Model.\n\n\nShow the code\ntripvdist &lt;- ggplot(data = flowdata_final,\n       aes(x = dist,\n           y = TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm)+\n  labs(\n    title = \"Graph of Trips against Distance Travelled\",\n    x = \"Distance\",\n    y = \"No. of Trips\"\n  ) +\n  theme(plot.title = element_text(size=10),\n        axis.title=element_text(size=10))\n\nlogtripvslogdist &lt;- ggplot(data = flowdata_final,\n       aes(x = log(dist),\n           y = log(TRIPS)))+\n  geom_point()+\n  geom_smooth(method = lm) +\n    labs(\n    title = \"Graph of log(Trips) against log(Distance)\",\n    x = \"log(Distance)\",\n    y = \"log(Trips)\"\n  ) +\n  theme(plot.title = element_text(size=10),\n        axis.title=element_text(size=10))\n\nggarrange(tripvdist, logtripvslogdist, nrow = 1, ncol = 2)\n\n\n\n\n\nThe scatter plot on the left using the original values indicates that the relationship between trips and distance does not demonstrate a linear relationship. However, when we plot the scatter plot using the log-transformed version of both variables, the relationship appears more like an inverse linear relationship. This pattern is indicative of distance decay, a concept in spatial analysis where the interaction between locations decreases as the distance between them increases. The log transformation helps in visualizing and quantifying this distance decay effect, where a greater distance is associated with a lower number of trips, reflecting a common trend in spatial interactions and movements."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#poisson-regression",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#poisson-regression",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "8.2 Poisson Regression",
    "text": "8.2 Poisson Regression\nPoisson regression is appropriate for our dataset for two main reasons:\n\nCount Dependent Variable: Our dependent variable (TRIPS) is a count (i.e., the number of occurrences of an event). Linear regression, on the other hand, assumes that the dependent variable is continuous and can take any value, including negative numbers, which is not applicable for count data.\nPredicting Non-Negative Values: Poisson regression naturally ensures that predictions are non-negative, which is essential for count data. Linear regression can predict negative values, which do not make sense for counts.\n\nIt is important here that the explanatory variables are never zero since Poisson Regression is base on log and log 0 is undefined. In the code chunk below, summary() of Base R is used to compute the summary statistics of all variables in flowdata_final data frame.\n\nsummary(flowdata_final)\n\n  ORIGIN_GRID     DESTIN_GRID        TRIPS           ORIGIN_nBS    \n 1334   :  294   1334   :  355   Min.   :    1.0   Min.   : 1.000  \n 1337   :  294   1314   :  336   1st Qu.:    7.0   1st Qu.: 1.000  \n 1774   :  294   1372   :  325   Median :   38.0   Median : 2.000  \n 1354   :  284   1337   :  296   Mean   :  383.1   Mean   : 2.011  \n 1640   :  279   1352   :  296   3rd Qu.:  178.0   3rd Qu.: 2.000  \n 1583   :  278   1296   :  290   Max.   :77433.0   Max.   :18.000  \n (Other):63836   (Other):63661                                     \n ORIGIN_DESC          DESTIN_nBS     DESTIN_DESC         Zone_Type        \n Length:65559       Min.   : 1.000   Length:65559       Length:65559      \n Class :character   1st Qu.: 1.000   Class :character   Class :character  \n Mode  :character   Median : 2.000   Mode  :character   Mode  :character  \n                    Mean   : 2.002                                        \n                    3rd Qu.: 2.000                                        \n                    Max.   :17.000                                        \n                                                                          \n      dist       ORI_TRAINEXITS      ORI_BIZ           ORI_FS      \n Min.   :  100   Min.   : 0.000   Min.   : 0.000   Min.   :  0.00  \n 1st Qu.: 2704   1st Qu.: 0.000   1st Qu.: 0.000   1st Qu.:  1.00  \n Median : 5408   Median : 0.000   Median : 1.000   Median :  3.00  \n Mean   : 6282   Mean   : 1.258   Mean   : 6.513   Mean   :  7.21  \n 3rd Qu.: 8842   3rd Qu.: 2.000   3rd Qu.: 6.000   3rd Qu.:  8.00  \n Max.   :24784   Max.   :13.000   Max.   :97.000   Max.   :130.00  \n                                                                   \n    ORI_RECS        ORI_RETAIL       ORI_SCHOOLS       ORI_HDBPOP   \n Min.   : 0.000   Min.   :   0.00   Min.   :0.0000   Min.   :    0  \n 1st Qu.: 0.000   1st Qu.:   7.00   1st Qu.:0.0000   1st Qu.:    0  \n Median : 1.000   Median :  28.00   Median :0.0000   Median : 2880  \n Mean   : 2.166   Mean   :  88.66   Mean   :0.5586   Mean   : 5707  \n 3rd Qu.: 3.000   3rd Qu.:  94.00   3rd Qu.:1.0000   3rd Qu.:10355  \n Max.   :41.000   Max.   :1669.00   Max.   :4.0000   Max.   :24553  \n                                                                    \n DEST_TRAINEXITS     DEST_BIZ         DEST_FS          DEST_RECS     \n Min.   : 0.000   Min.   : 0.000   Min.   :  0.000   Min.   : 0.000  \n 1st Qu.: 0.000   1st Qu.: 0.000   1st Qu.:  1.000   1st Qu.: 0.000  \n Median : 0.000   Median : 1.000   Median :  3.000   Median : 1.000  \n Mean   : 1.353   Mean   : 7.302   Mean   :  7.856   Mean   : 2.359  \n 3rd Qu.: 2.000   3rd Qu.: 6.000   3rd Qu.:  9.000   3rd Qu.: 3.000  \n Max.   :13.000   Max.   :97.000   Max.   :130.000   Max.   :41.000  \n                                                                     \n  DEST_RETAIL      DEST_SCHOOLS     DEST_HDBPOP   \n Min.   :   0.0   Min.   :0.0000   Min.   :    0  \n 1st Qu.:   7.0   1st Qu.:0.0000   1st Qu.:    0  \n Median :  29.0   Median :0.0000   Median : 2605  \n Mean   :  93.6   Mean   :0.5262   Mean   : 5349  \n 3rd Qu.: 102.0   3rd Qu.:1.0000   3rd Qu.: 9659  \n Max.   :1669.0   Max.   :4.0000   Max.   :24553  \n                                                  \n\n\nThe report above reveals that variables ORI_TRAINEXITS, ORI_BIZ, ORI_FS, ORI_RECS, ORI_RETAIL, ORI_SCHOOLS, ORI_HDBPOP, DEST_TRAINEXITS, DEST_BIZ, DEST_FS, DEST_RECS, DEST_RETAIL, DEST_SCHOOLS, DEST_HDBPOP consist of 0 values.\nIn view of this, code chunk below will be used to replace zero values to an arbitrary value of 0.99.\n\n\nShow the code\n# Origin Attributes\n\nflowdata_final$ORI_TRAINEXITS &lt;- ifelse(\n  flowdata_final$ORI_TRAINEXITS == 0,\n  0.99, \n  flowdata_final$ORI_TRAINEXITS)\n\nflowdata_final$ORI_BIZ &lt;- ifelse(\n  flowdata_final$ORI_BIZ == 0,\n  0.99, \n  flowdata_final$ORI_BIZ)\n\nflowdata_final$ORI_FS &lt;- ifelse(\n  flowdata_final$ORI_FS == 0,\n  0.99, \n  flowdata_final$ORI_FS)\n\nflowdata_final$ORI_RECS &lt;- ifelse(\n  flowdata_final$ORI_RECS == 0,\n  0.99, \n  flowdata_final$ORI_RECS)\n\nflowdata_final$ORI_RETAIL &lt;- ifelse(\n  flowdata_final$ORI_RETAIL == 0,\n  0.99, \n  flowdata_final$ORI_RETAIL)\n\nflowdata_final$ORI_SCHOOLS &lt;- ifelse(\n  flowdata_final$ORI_SCHOOLS == 0,\n  0.99, \n  flowdata_final$ORI_SCHOOLS)\n\nflowdata_final$ORI_HDBPOP &lt;- ifelse(\n  flowdata_final$ORI_HDBPOP == 0,\n  0.99, \n  flowdata_final$ORI_HDBPOP)\n\n# Destination Attributes\n\nflowdata_final$DEST_TRAINEXITS &lt;- ifelse(\n  flowdata_final$DEST_TRAINEXITS == 0,\n  0.99, \n  flowdata_final$DEST_TRAINEXITS)\n\nflowdata_final$DEST_BIZ &lt;- ifelse(\n  flowdata_final$DEST_BIZ == 0,\n  0.99, \n  flowdata_final$DEST_BIZ)\n\nflowdata_final$DEST_FS &lt;- ifelse(\n  flowdata_final$DEST_FS == 0,\n  0.99, \n  flowdata_final$DEST_FS)\n\nflowdata_final$DEST_RECS &lt;- ifelse(\n  flowdata_final$DEST_RECS == 0,\n  0.99, \n  flowdata_final$DEST_RECS)\n\nflowdata_final$DEST_RETAIL &lt;- ifelse(\n  flowdata_final$DEST_RETAIL == 0,\n  0.99, \n  flowdata_final$DEST_RETAIL)\n\nflowdata_final$DEST_SCHOOLS &lt;- ifelse(\n  flowdata_final$DEST_SCHOOLS == 0,\n  0.99, \n  flowdata_final$DEST_SCHOOLS)\n\nflowdata_final$DEST_HDBPOP &lt;- ifelse(\n  flowdata_final$DEST_HDBPOP == 0,\n  0.99, \n  flowdata_final$DEST_HDBPOP)\n\n\nWe run summary() again to check the results.\n\nsummary(flowdata_final)\n\n  ORIGIN_GRID     DESTIN_GRID        TRIPS           ORIGIN_nBS    \n 1334   :  294   1334   :  355   Min.   :    1.0   Min.   : 1.000  \n 1337   :  294   1314   :  336   1st Qu.:    7.0   1st Qu.: 1.000  \n 1774   :  294   1372   :  325   Median :   38.0   Median : 2.000  \n 1354   :  284   1337   :  296   Mean   :  383.1   Mean   : 2.011  \n 1640   :  279   1352   :  296   3rd Qu.:  178.0   3rd Qu.: 2.000  \n 1583   :  278   1296   :  290   Max.   :77433.0   Max.   :18.000  \n (Other):63836   (Other):63661                                     \n ORIGIN_DESC          DESTIN_nBS     DESTIN_DESC         Zone_Type        \n Length:65559       Min.   : 1.000   Length:65559       Length:65559      \n Class :character   1st Qu.: 1.000   Class :character   Class :character  \n Mode  :character   Median : 2.000   Mode  :character   Mode  :character  \n                    Mean   : 2.002                                        \n                    3rd Qu.: 2.000                                        \n                    Max.   :17.000                                        \n                                                                          \n      dist       ORI_TRAINEXITS      ORI_BIZ           ORI_FS       \n Min.   :  100   Min.   : 0.990   Min.   : 0.990   Min.   :  0.990  \n 1st Qu.: 2704   1st Qu.: 0.990   1st Qu.: 0.990   1st Qu.:  1.000  \n Median : 5408   Median : 0.990   Median : 1.000   Median :  3.000  \n Mean   : 6282   Mean   : 1.886   Mean   : 6.959   Mean   :  7.447  \n 3rd Qu.: 8842   3rd Qu.: 2.000   3rd Qu.: 6.000   3rd Qu.:  8.000  \n Max.   :24784   Max.   :13.000   Max.   :97.000   Max.   :130.000  \n                                                                    \n    ORI_RECS        ORI_RETAIL       ORI_SCHOOLS      ORI_HDBPOP      \n Min.   : 0.990   Min.   :   0.99   Min.   :0.990   Min.   :    0.99  \n 1st Qu.: 0.990   1st Qu.:   7.00   1st Qu.:0.990   1st Qu.:    0.99  \n Median : 1.000   Median :  28.00   Median :0.990   Median : 2879.88  \n Mean   : 2.572   Mean   :  88.73   Mean   :1.181   Mean   : 5707.14  \n 3rd Qu.: 3.000   3rd Qu.:  94.00   3rd Qu.:1.000   3rd Qu.:10354.59  \n Max.   :41.000   Max.   :1669.00   Max.   :4.000   Max.   :24553.14  \n                                                                      \n DEST_TRAINEXITS     DEST_BIZ        DEST_FS          DEST_RECS     \n Min.   : 0.990   Min.   : 0.99   Min.   :  0.990   Min.   : 0.990  \n 1st Qu.: 0.990   1st Qu.: 0.99   1st Qu.:  1.000   1st Qu.: 0.990  \n Median : 0.990   Median : 1.00   Median :  3.000   Median : 1.000  \n Mean   : 1.975   Mean   : 7.73   Mean   :  8.095   Mean   : 2.761  \n 3rd Qu.: 2.000   3rd Qu.: 6.00   3rd Qu.:  9.000   3rd Qu.: 3.000  \n Max.   :13.000   Max.   :97.00   Max.   :130.000   Max.   :41.000  \n                                                                    \n  DEST_RETAIL       DEST_SCHOOLS    DEST_HDBPOP      \n Min.   :   0.99   Min.   :0.990   Min.   :    0.99  \n 1st Qu.:   7.00   1st Qu.:0.990   1st Qu.:    0.99  \n Median :  29.00   Median :0.990   Median : 2604.87  \n Mean   :  93.67   Mean   :1.167   Mean   : 5349.79  \n 3rd Qu.: 102.00   3rd Qu.:1.000   3rd Qu.: 9659.34  \n Max.   :1669.00   Max.   :4.000   Max.   :24553.14"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#preparing-inter-zonal-flow-data",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#preparing-inter-zonal-flow-data",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "8.3 Preparing Inter-Zonal Flow Data",
    "text": "8.3 Preparing Inter-Zonal Flow Data\nIn general, we will calibrate separate Spatial Interaction Models for inter- and intra-zonal flows. In our analysis, we will focus our attention on inter-zonal flows. Therefore, it is necessary to exclude intra-zonal flows from the flow_data.\nFirst, a new column called FlowNoIntra will be created by using the code chunk below.\n\nflowdata_final$FlowNoIntra &lt;- ifelse(\n  flowdata_final$ORIGIN_GRID == flowdata_final$DESTIN_GRID, \n  0, \n  flowdata_final$TRIPS)\n\n#flowdata_final$offset &lt;- ifelse(\n#  flowdata_final$ORIGIN_GRID == flowdata_final$DESTIN_GRID, \n#  0.000001, \n#  1)\n\nIn FlowNoIntra field, all intra-zonal flow will be given a value of 0, else the original flow values will be retained.\nNext, inter-zonal flow will be selected from flow_data and saved into a new output data.frame called inter_zonal_flow using the code chunk below.\n\ninterzonal_flow &lt;- flowdata_final %&gt;%\n  filter(FlowNoIntra &gt; 0)\n\nThere are 64,935 interzonal flows in our dataset."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#correlation-analysis",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#correlation-analysis",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "8.4 Correlation Analysis",
    "text": "8.4 Correlation Analysis\nBefore building a Poisson regression model, it is important to ensure that the indepdent variables used are not highly correlated to each other. Multicollinearity in a regression model can compromise the quality of the model.\nThe code chunk below uses the corrplot package to plot a scatterplot matrix of the relationship between the independent variables in interzonal_flow data.frame. AOE order is used, tt orders the variables by using the angular order of the eigenvectors method suggested by Michael Friendly.\n\nInterzonal FlowIntrazonal Flow\n\n\n\n\nShow the code\ncol &lt;- colorRampPalette(c(\"#BB4444\", \"#EE9988\", \"#FFFFFF\", \"#77AADD\", \"#4477AA\"))\n\ncorrplot(cor(interzonal_flow[, c(10:23)]), \n         diag = FALSE, \n         order = \"AOE\",\n         tl.pos = \"td\", \n         tl.cex = 0.5, # Change size of headers\n         number.cex = 0.5, # Change size of coefficients\n         method=\"color\", col=col(200),\n         addCoef.col = \"black\", # Add coefficient of correlation\n         tl.col=\"black\", tl.srt=45, #Text label color and rotation\n         type = \"upper\")\n\n\n\n\n\nFrom the correlation matrix, it is observed that none of the variable pairs exhibit a correlation greater than 0.8. Consequently, with no issues of multicollinearity present, there is no need to exclude any variables from our analysis.\n\n\n\n\nShow the code\ncol &lt;- colorRampPalette(c(\"#BB4444\", \"#EE9988\", \"#FFFFFF\", \"#77AADD\", \"#4477AA\"))\n\ncorrplot(cor(intrazonal_flow[, c(10:23)]), \n         diag = FALSE, \n         order = \"AOE\",\n         tl.pos = \"td\", \n         tl.cex = 0.5, # Change size of headers\n         number.cex = 0.5, # Change size of coefficients\n         method=\"color\", col=col(200),\n         addCoef.col = \"black\", # Add coefficient of correlation\n         tl.col=\"black\", tl.srt=45, #Text label color and rotation\n         type = \"upper\")\n\n\n\n\n\nThe following pairs of variables exhibit high collinearity, each with a correlation coefficient of 1\n\nHDB population at origin and destination\nSchool count at origin and destination\nBusiness count at origin and destination\nRetail count at origin and destination\nFinancial services count at origin and destination\nTrain station exit count at origin and destintation\n\nThis high degree of collinearity is expected for intrazonal flows, where the origin and destination are the same. However, caution is advised in subsequent analytical steps to avoid using these highly correlated variables together, as they can lead to issues in statistical models."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#unconstrained-sim",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#unconstrained-sim",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "9.1 Unconstrained SIM",
    "text": "9.1 Unconstrained SIM\n\nModelCoefficients & p-Values\n\n\nIn this unconstrained model, the following variables are used:\n\nOrigin propulsiveness: ORI_TRAINEXITS, ORI_HDBPOP\nDestination attractiveness: DEST_TRAINEXITS, DEST_BIZ, DEST_FS, DEST_RECS, DEST_RETAIL, DEST_SCHOOLS\n\n\nuncSIM &lt;- glm(formula = TRIPS ~ \n                log(ORI_TRAINEXITS) +\n                #log(ORI_BIZ) +\n                #log(ORI_FS) +\n                #log(ORI_RECS) +\n                #log(ORI_RETAIL) +\n                #log(ORI_SCHOOLS) +\n                log(ORI_HDBPOP) +\n                log(DEST_TRAINEXITS) +\n                log(DEST_BIZ) +\n                log(DEST_FS) +\n                log(DEST_RECS) +\n                log(DEST_RETAIL) +\n                log(DEST_SCHOOLS) +\n                #log(DEST_HDBPOP) +\n                log(dist),\n              family = poisson(link = \"log\"),\n              data = interzonal_flow,\n              na.action = na.exclude) # excludes any NAs in the data\n\n\n\n\n\nShow the code\nsummary(uncSIM)\n\n\n\nCall:\nglm(formula = TRIPS ~ log(ORI_TRAINEXITS) + log(ORI_HDBPOP) + \n    log(DEST_TRAINEXITS) + log(DEST_BIZ) + log(DEST_FS) + log(DEST_RECS) + \n    log(DEST_RETAIL) + log(DEST_SCHOOLS) + log(dist), family = poisson(link = \"log\"), \n    data = interzonal_flow, na.action = na.exclude)\n\nCoefficients:\n                       Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)          15.7436081  0.0020049  7852.4   &lt;2e-16 ***\nlog(ORI_TRAINEXITS)   0.2137691  0.0003052   700.5   &lt;2e-16 ***\nlog(ORI_HDBPOP)       0.1604707  0.0000695  2308.9   &lt;2e-16 ***\nlog(DEST_TRAINEXITS)  0.4545605  0.0003721  1221.5   &lt;2e-16 ***\nlog(DEST_BIZ)         0.0518013  0.0001926   268.9   &lt;2e-16 ***\nlog(DEST_FS)          0.2456109  0.0003651   672.8   &lt;2e-16 ***\nlog(DEST_RECS)       -0.3898754  0.0003429 -1137.1   &lt;2e-16 ***\nlog(DEST_RETAIL)      0.0330330  0.0002125   155.4   &lt;2e-16 ***\nlog(DEST_SCHOOLS)     0.2561115  0.0006443   397.5   &lt;2e-16 ***\nlog(dist)            -1.4437915  0.0002508 -5757.0   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 96655476  on 64935  degrees of freedom\nResidual deviance: 47031281  on 64926  degrees of freedom\nAIC: 47387887\n\nNumber of Fisher Scoring iterations: 6\n\n\nThe p-values associated with each predictor variable is &lt; 0.05, this suggests that all the coefficients used in the model have a statistically significant relationship with the weekday morning peak period bus trips.\nFrom the results, we can also see that the top 2 coefficients with positive relationships are: number of train station exits at destination (0.46) and number of schools at destination (0.27).\nThe top 2 coefficients with inverse relationships are: distance (-1.45) and number of leisure / recreational places at destination (-0.39).\n\n\nShow the code\ndata.frame(\n  Coefficient = sort(uncSIM$coefficients, decreasing = TRUE)\n\n)\n\n\n                     Coefficient\n(Intercept)          15.74360813\nlog(DEST_TRAINEXITS)  0.45456047\nlog(DEST_SCHOOLS)     0.25611151\nlog(DEST_FS)          0.24561086\nlog(ORI_TRAINEXITS)   0.21376910\nlog(ORI_HDBPOP)       0.16047066\nlog(DEST_BIZ)         0.05180131\nlog(DEST_RETAIL)      0.03303304\nlog(DEST_RECS)       -0.38987540\nlog(dist)            -1.44379152"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#origin-constrained-sim",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#origin-constrained-sim",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "9.2 Origin-Constrained SIM",
    "text": "9.2 Origin-Constrained SIM\n\nModelCoefficients & p-Values\n\n\nFor origin-constrained model, only explanatory variables representing the attractiveness at the destinations will be used. ORIGIN_GRID, in the categorial data type, is used to model 𝜇𝑖.\n-1 is added in the equation after the distance variable. The -1 serves the purpose of removing the intercept that glm will insert into the model by default.\n\norcSIM &lt;- glm(formula = TRIPS ~ \n                ORIGIN_GRID +\n                #log(ORI_TRAINEXITS) +\n                #log(ORI_BIZ) +\n                #log(ORI_FS) +\n                #log(ORI_RECS) +\n                #log(ORI_RETAIL) +\n                #log(ORI_SCHOOLS) +\n                #log(ORI_HDBPOP) +\n                log(DEST_TRAINEXITS) +\n                log(DEST_BIZ) +\n                log(DEST_FS) +\n                log(DEST_RECS) +\n                log(DEST_RETAIL) +\n                log(DEST_SCHOOLS) +\n                #log(DEST_HDBPOP) +\n                log(dist) - 1,\n              family = poisson(link = \"log\"),\n              data = interzonal_flow,\n              na.action = na.exclude) # excludes any NAs in the data\n\n\n\n\n\nShow the code\nsummary(orcSIM)\n\n\n\nCall:\nglm(formula = TRIPS ~ ORIGIN_GRID + log(DEST_TRAINEXITS) + log(DEST_BIZ) + \n    log(DEST_FS) + log(DEST_RECS) + log(DEST_RETAIL) + log(DEST_SCHOOLS) + \n    log(dist) - 1, family = poisson(link = \"log\"), data = interzonal_flow, \n    na.action = na.exclude)\n\nCoefficients:\n                       Estimate Std. Error   z value Pr(&gt;|z|)    \nORIGIN_GRID21        14.8150341  0.0985551   150.322   &lt;2e-16 ***\nORIGIN_GRID40        12.7061168  0.1386850    91.619   &lt;2e-16 ***\nORIGIN_GRID42        13.4522151  0.0873910   153.931   &lt;2e-16 ***\nORIGIN_GRID60        13.5727946  0.1250131   108.571   &lt;2e-16 ***\nORIGIN_GRID61        15.5407671  0.0248916   624.338   &lt;2e-16 ***\nORIGIN_GRID62        12.6350096  0.1291129    97.860   &lt;2e-16 ***\nORIGIN_GRID78        14.2929747  0.0735452   194.343   &lt;2e-16 ***\nORIGIN_GRID79        14.3095711  0.0811338   176.370   &lt;2e-16 ***\nORIGIN_GRID80        16.0925891  0.0186018   865.110   &lt;2e-16 ***\nORIGIN_GRID81        14.3487536  0.0496043   289.264   &lt;2e-16 ***\nORIGIN_GRID82        13.2056397  0.1324666    99.690   &lt;2e-16 ***\nORIGIN_GRID99        13.9360314  0.0990337   140.720   &lt;2e-16 ***\nORIGIN_GRID100       14.9286020  0.0716413   208.380   &lt;2e-16 ***\nORIGIN_GRID101       17.3084462  0.0114275  1514.630   &lt;2e-16 ***\nORIGIN_GRID102       13.2233738  0.0641792   206.038   &lt;2e-16 ***\nORIGIN_GRID116       16.5384997  0.0223324   740.562   &lt;2e-16 ***\nORIGIN_GRID117       13.6896863  0.1889935    72.435   &lt;2e-16 ***\nORIGIN_GRID118       13.8276966  0.0602219   229.613   &lt;2e-16 ***\nORIGIN_GRID119       14.6064044  0.0352962   413.824   &lt;2e-16 ***\nORIGIN_GRID120       14.2017197  0.0479850   295.961   &lt;2e-16 ***\nORIGIN_GRID121       14.0519723  0.0377370   372.366   &lt;2e-16 ***\nORIGIN_GRID122       16.3649371  0.0233101   702.054   &lt;2e-16 ***\nORIGIN_GRID136       16.8201021  0.0198007   849.469   &lt;2e-16 ***\nORIGIN_GRID137       14.4500130  0.0586542   246.359   &lt;2e-16 ***\nORIGIN_GRID138       13.8870113  0.0811323   171.165   &lt;2e-16 ***\nORIGIN_GRID139       14.3879235  0.0415651   346.154   &lt;2e-16 ***\nORIGIN_GRID140       17.0723861  0.0090060  1895.668   &lt;2e-16 ***\nORIGIN_GRID141       14.2104097  0.0328469   432.626   &lt;2e-16 ***\nORIGIN_GRID142       15.1442555  0.0385929   392.410   &lt;2e-16 ***\nORIGIN_GRID156       15.6970853  0.0758378   206.982   &lt;2e-16 ***\nORIGIN_GRID158       14.3912070  0.0463106   310.754   &lt;2e-16 ***\nORIGIN_GRID159       16.6540160  0.0101585  1639.419   &lt;2e-16 ***\nORIGIN_GRID160       17.8242520  0.0061429  2901.593   &lt;2e-16 ***\nORIGIN_GRID177       13.3592923  0.0808653   165.204   &lt;2e-16 ***\nORIGIN_GRID178       13.7857778  0.0419281   328.795   &lt;2e-16 ***\nORIGIN_GRID179       13.1011909  0.1097799   119.341   &lt;2e-16 ***\nORIGIN_GRID195       13.9839331  0.0825028   169.496   &lt;2e-16 ***\nORIGIN_GRID196       18.0902430  0.0052629  3437.319   &lt;2e-16 ***\nORIGIN_GRID197       15.4470871  0.0204006   757.186   &lt;2e-16 ***\nORIGIN_GRID215       12.8700942  0.1561855    82.403   &lt;2e-16 ***\nORIGIN_GRID216       14.0119539  0.0510677   274.380   &lt;2e-16 ***\nORIGIN_GRID217       13.1934903  0.1581265    83.436   &lt;2e-16 ***\nORIGIN_GRID233       13.9128605  0.0564656   246.396   &lt;2e-16 ***\nORIGIN_GRID234       14.6898175  0.0271131   541.798   &lt;2e-16 ***\nORIGIN_GRID235       14.5387528  0.0403049   360.719   &lt;2e-16 ***\nORIGIN_GRID252       15.0508993  0.0383382   392.582   &lt;2e-16 ***\nORIGIN_GRID253       13.8990426  0.0428387   324.450   &lt;2e-16 ***\nORIGIN_GRID254       14.2418830  0.0451704   315.292   &lt;2e-16 ***\nORIGIN_GRID270       11.6392187  0.3333386    34.917   &lt;2e-16 ***\nORIGIN_GRID271       13.9164908  0.0496015   280.566   &lt;2e-16 ***\nORIGIN_GRID272       16.9401526  0.0086910  1949.157   &lt;2e-16 ***\nORIGIN_GRID290       13.7217098  0.0636552   215.563   &lt;2e-16 ***\nORIGIN_GRID291       14.4610419  0.0710923   203.412   &lt;2e-16 ***\nORIGIN_GRID292       15.0206316  0.0467208   321.498   &lt;2e-16 ***\nORIGIN_GRID308       15.5410867  0.0272616   570.072   &lt;2e-16 ***\nORIGIN_GRID309       13.7988985  0.0441907   312.258   &lt;2e-16 ***\nORIGIN_GRID310       14.2338138  0.0411435   345.955   &lt;2e-16 ***\nORIGIN_GRID329       15.0279497  0.0369577   406.626   &lt;2e-16 ***\nORIGIN_GRID330       15.1722925  0.0264848   572.868   &lt;2e-16 ***\nORIGIN_GRID347       14.8025982  0.0311733   474.849   &lt;2e-16 ***\nORIGIN_GRID348       13.5732127  0.0520920   260.563   &lt;2e-16 ***\nORIGIN_GRID349       14.6704048  0.0460146   318.821   &lt;2e-16 ***\nORIGIN_GRID366       15.3340810  0.0339735   451.354   &lt;2e-16 ***\nORIGIN_GRID367       14.2212425  0.0486012   292.611   &lt;2e-16 ***\nORIGIN_GRID368       18.9179780  0.0030758  6150.673   &lt;2e-16 ***\nORIGIN_GRID369       14.8037929  0.0453557   326.393   &lt;2e-16 ***\nORIGIN_GRID370       15.6728061  0.0227421   689.153   &lt;2e-16 ***\nORIGIN_GRID385       13.0213389  0.0880644   147.862   &lt;2e-16 ***\nORIGIN_GRID386       14.7610900  0.0294725   500.844   &lt;2e-16 ***\nORIGIN_GRID387       13.9955920  0.0354082   395.264   &lt;2e-16 ***\nORIGIN_GRID388       13.8672225  0.0778750   178.070   &lt;2e-16 ***\nORIGIN_GRID389       15.9165684  0.0225933   704.482   &lt;2e-16 ***\nORIGIN_GRID404       14.5974697  0.0587541   248.450   &lt;2e-16 ***\nORIGIN_GRID405       14.0641635  0.0444960   316.077   &lt;2e-16 ***\nORIGIN_GRID406       14.7983915  0.0278346   531.655   &lt;2e-16 ***\nORIGIN_GRID407       17.7804298  0.0062304  2853.799   &lt;2e-16 ***\nORIGIN_GRID408       15.6632019  0.0195360   801.762   &lt;2e-16 ***\nORIGIN_GRID424       15.0377237  0.0276087   544.674   &lt;2e-16 ***\nORIGIN_GRID425       15.5649172  0.0175087   888.981   &lt;2e-16 ***\nORIGIN_GRID426       18.0998950  0.0046969  3853.604   &lt;2e-16 ***\nORIGIN_GRID427       16.5256458  0.0159948  1033.189   &lt;2e-16 ***\nORIGIN_GRID442       14.5775823  0.0573872   254.021   &lt;2e-16 ***\nORIGIN_GRID443       11.8477048  0.2500072    47.389   &lt;2e-16 ***\nORIGIN_GRID444       16.4334956  0.0114831  1431.097   &lt;2e-16 ***\nORIGIN_GRID445       16.9816709  0.0074581  2276.956   &lt;2e-16 ***\nORIGIN_GRID447       12.5336188  0.1386894    90.372   &lt;2e-16 ***\nORIGIN_GRID448       14.5749628  0.0588584   247.627   &lt;2e-16 ***\nORIGIN_GRID461       14.8250443  0.0337437   439.343   &lt;2e-16 ***\nORIGIN_GRID462       15.0842323  0.0246171   612.755   &lt;2e-16 ***\nORIGIN_GRID463       16.0672695  0.0106596  1507.310   &lt;2e-16 ***\nORIGIN_GRID464       18.5753421  0.0034817  5335.212   &lt;2e-16 ***\nORIGIN_GRID465       15.4253269  0.0239810   643.231   &lt;2e-16 ***\nORIGIN_GRID466       15.0152943  0.0367626   408.440   &lt;2e-16 ***\nORIGIN_GRID467       12.8419470  0.1373751    93.481   &lt;2e-16 ***\nORIGIN_GRID480       13.9165954  0.0808679   172.090   &lt;2e-16 ***\nORIGIN_GRID481       15.2160960  0.0201679   754.471   &lt;2e-16 ***\nORIGIN_GRID482       14.7513570  0.0229736   642.099   &lt;2e-16 ***\nORIGIN_GRID483       18.3280653  0.0035295  5192.776   &lt;2e-16 ***\nORIGIN_GRID484       18.7009507  0.0038386  4871.841   &lt;2e-16 ***\nORIGIN_GRID486       15.3493731  0.0250382   613.039   &lt;2e-16 ***\nORIGIN_GRID487       12.9872791  0.1373763    94.538   &lt;2e-16 ***\nORIGIN_GRID488       12.7372018  0.2041353    62.396   &lt;2e-16 ***\nORIGIN_GRID489       10.6813759  0.5773531    18.501   &lt;2e-16 ***\nORIGIN_GRID499       13.9689840  0.0539472   258.938   &lt;2e-16 ***\nORIGIN_GRID500       15.7087408  0.0364711   430.718   &lt;2e-16 ***\nORIGIN_GRID501       14.8572405  0.0189408   784.405   &lt;2e-16 ***\nORIGIN_GRID502       18.2386077  0.0037703  4837.433   &lt;2e-16 ***\nORIGIN_GRID503       17.8308425  0.0068452  2604.850   &lt;2e-16 ***\nORIGIN_GRID507       13.6087065  0.0932718   145.904   &lt;2e-16 ***\nORIGIN_GRID508       15.4457290  0.0473480   326.217   &lt;2e-16 ***\nORIGIN_GRID518       11.7233887  0.2236144    52.427   &lt;2e-16 ***\nORIGIN_GRID519       14.1750638  0.0435168   325.738   &lt;2e-16 ***\nORIGIN_GRID520       14.8445550  0.0360911   411.308   &lt;2e-16 ***\nORIGIN_GRID521       19.2281804  0.0026065  7376.934   &lt;2e-16 ***\nORIGIN_GRID522       17.8041656  0.0049527  3594.867   &lt;2e-16 ***\nORIGIN_GRID524       13.0158001  0.1072293   121.383   &lt;2e-16 ***\nORIGIN_GRID528       13.2557858  0.1066171   124.331   &lt;2e-16 ***\nORIGIN_GRID529       12.4522850  0.1961254    63.491   &lt;2e-16 ***\nORIGIN_GRID530       15.6234788  0.0550944   283.576   &lt;2e-16 ***\nORIGIN_GRID537       14.3907056  0.0494869   290.798   &lt;2e-16 ***\nORIGIN_GRID538       15.1617545  0.0258610   586.279   &lt;2e-16 ***\nORIGIN_GRID539       14.6660831  0.0197708   741.804   &lt;2e-16 ***\nORIGIN_GRID540       17.6385943  0.0044055  4003.812   &lt;2e-16 ***\nORIGIN_GRID541       14.4979946  0.0588554   246.333   &lt;2e-16 ***\nORIGIN_GRID547       13.5344965  0.1084835   124.761   &lt;2e-16 ***\nORIGIN_GRID548       11.8500083  0.2672680    44.338   &lt;2e-16 ***\nORIGIN_GRID557       13.7771869  0.0438944   313.871   &lt;2e-16 ***\nORIGIN_GRID558       14.6737383  0.0290139   505.749   &lt;2e-16 ***\nORIGIN_GRID559       15.2926902  0.0173740   880.204   &lt;2e-16 ***\nORIGIN_GRID560       18.1818606  0.0039322  4623.798   &lt;2e-16 ***\nORIGIN_GRID562       15.0505349  0.0323739   464.896   &lt;2e-16 ***\nORIGIN_GRID577       14.0390231  0.0392076   358.069   &lt;2e-16 ***\nORIGIN_GRID578       17.7372517  0.0042562  4167.413   &lt;2e-16 ***\nORIGIN_GRID595       15.6402791  0.0161563   968.059   &lt;2e-16 ***\nORIGIN_GRID596       17.0141309  0.0063995  2658.661   &lt;2e-16 ***\nORIGIN_GRID597       17.3701434  0.0054485  3188.032   &lt;2e-16 ***\nORIGIN_GRID598       18.3676136  0.0034650  5300.967   &lt;2e-16 ***\nORIGIN_GRID600       17.9077049  0.0071669  2498.680   &lt;2e-16 ***\nORIGIN_GRID613       15.7111293  0.0223957   701.523   &lt;2e-16 ***\nORIGIN_GRID614       13.6108029  0.0436046   312.141   &lt;2e-16 ***\nORIGIN_GRID615       18.1983046  0.0037546  4846.884   &lt;2e-16 ***\nORIGIN_GRID616       18.2461046  0.0037201  4904.777   &lt;2e-16 ***\nORIGIN_GRID617       17.2501183  0.0084019  2053.133   &lt;2e-16 ***\nORIGIN_GRID633       15.1901956  0.0220140   690.024   &lt;2e-16 ***\nORIGIN_GRID634       17.1781816  0.0061340  2800.504   &lt;2e-16 ***\nORIGIN_GRID635       17.3019417  0.0061803  2799.523   &lt;2e-16 ***\nORIGIN_GRID636       18.1936367  0.0036659  4962.949   &lt;2e-16 ***\nORIGIN_GRID638       14.8595525  0.0319251   465.451   &lt;2e-16 ***\nORIGIN_GRID654       15.1219282  0.0178756   845.955   &lt;2e-16 ***\nORIGIN_GRID657       14.1153390  0.0435641   324.013   &lt;2e-16 ***\nORIGIN_GRID671       15.7379814  0.0163073   965.088   &lt;2e-16 ***\nORIGIN_GRID673       15.6004304  0.0123086  1267.436   &lt;2e-16 ***\nORIGIN_GRID674       17.6165983  0.0045893  3838.636   &lt;2e-16 ***\nORIGIN_GRID689       15.2112125  0.0271159   560.970   &lt;2e-16 ***\nORIGIN_GRID690       17.2370883  0.0070315  2451.395   &lt;2e-16 ***\nORIGIN_GRID691       14.0704777  0.0275932   509.926   &lt;2e-16 ***\nORIGIN_GRID692       18.0836123  0.0036257  4987.622   &lt;2e-16 ***\nORIGIN_GRID693       17.0911986  0.0081679  2092.472   &lt;2e-16 ***\nORIGIN_GRID695       18.6295797  0.0038334  4859.745   &lt;2e-16 ***\nORIGIN_GRID700       13.6402010  0.0720093   189.423   &lt;2e-16 ***\nORIGIN_GRID710       14.3149723  0.0234624   610.123   &lt;2e-16 ***\nORIGIN_GRID711       17.2929953  0.0044777  3861.984   &lt;2e-16 ***\nORIGIN_GRID712       16.8506639  0.0060646  2778.514   &lt;2e-16 ***\nORIGIN_GRID713       17.4595357  0.0072238  2416.944   &lt;2e-16 ***\nORIGIN_GRID714       17.9298546  0.0053128  3374.813   &lt;2e-16 ***\nORIGIN_GRID715       16.3681627  0.0104028  1573.435   &lt;2e-16 ***\nORIGIN_GRID727       13.8409169  0.0487752   283.769   &lt;2e-16 ***\nORIGIN_GRID728       18.1419241  0.0042657  4252.943   &lt;2e-16 ***\nORIGIN_GRID729       17.9355736  0.0036311  4939.391   &lt;2e-16 ***\nORIGIN_GRID730       17.4593231  0.0044374  3934.628   &lt;2e-16 ***\nORIGIN_GRID731       18.2464964  0.0043378  4206.379   &lt;2e-16 ***\nORIGIN_GRID732       16.6728836  0.0108890  1531.163   &lt;2e-16 ***\nORIGIN_GRID733       18.1485033  0.0036414  4983.926   &lt;2e-16 ***\nORIGIN_GRID734       17.4693769  0.0055552  3144.675   &lt;2e-16 ***\nORIGIN_GRID738       15.1872897  0.0275088   552.088   &lt;2e-16 ***\nORIGIN_GRID746       14.4296707  0.0383398   376.363   &lt;2e-16 ***\nORIGIN_GRID748       15.7178535  0.0100091  1570.355   &lt;2e-16 ***\nORIGIN_GRID749       17.7545016  0.0039793  4461.681   &lt;2e-16 ***\nORIGIN_GRID750       17.8078170  0.0038784  4591.567   &lt;2e-16 ***\nORIGIN_GRID751       17.8720743  0.0046313  3859.017   &lt;2e-16 ***\nORIGIN_GRID752       17.8127033  0.0051666  3447.634   &lt;2e-16 ***\nORIGIN_GRID753       18.6631084  0.0031720  5883.778   &lt;2e-16 ***\nORIGIN_GRID754       17.8106287  0.0060654  2936.435   &lt;2e-16 ***\nORIGIN_GRID757       14.8367312  0.0292607   507.053   &lt;2e-16 ***\nORIGIN_GRID764       13.2511782  0.0778740   170.162   &lt;2e-16 ***\nORIGIN_GRID766       17.2612020  0.0053110  3250.107   &lt;2e-16 ***\nORIGIN_GRID767       16.1208302  0.0089217  1806.924   &lt;2e-16 ***\nORIGIN_GRID768       17.2658744  0.0048781  3539.497   &lt;2e-16 ***\nORIGIN_GRID769       16.4144185  0.0078065  2102.652   &lt;2e-16 ***\nORIGIN_GRID770       17.2788315  0.0054628  3162.980   &lt;2e-16 ***\nORIGIN_GRID771       17.6240796  0.0042595  4137.572   &lt;2e-16 ***\nORIGIN_GRID772       17.0897840  0.0060276  2835.246   &lt;2e-16 ***\nORIGIN_GRID773       18.9892569  0.0037593  5051.305   &lt;2e-16 ***\nORIGIN_GRID774       15.2271370  0.0258506   589.043   &lt;2e-16 ***\nORIGIN_GRID775       14.2093942  0.0434387   327.114   &lt;2e-16 ***\nORIGIN_GRID776       15.8464052  0.0179532   882.653   &lt;2e-16 ***\nORIGIN_GRID784       14.8261738  0.0317933   466.330   &lt;2e-16 ***\nORIGIN_GRID785       16.0157489  0.0118367  1353.054   &lt;2e-16 ***\nORIGIN_GRID786       15.2047821  0.0176468   861.616   &lt;2e-16 ***\nORIGIN_GRID787       17.8357238  0.0058449  3051.505   &lt;2e-16 ***\nORIGIN_GRID788       18.3147870  0.0032296  5670.950   &lt;2e-16 ***\nORIGIN_GRID789       17.8753884  0.0058338  3064.124   &lt;2e-16 ***\nORIGIN_GRID790       15.9040831  0.0108267  1468.968   &lt;2e-16 ***\nORIGIN_GRID791       16.0170543  0.0100512  1593.551   &lt;2e-16 ***\nORIGIN_GRID792       16.4522375  0.0080566  2042.073   &lt;2e-16 ***\nORIGIN_GRID793       13.3362884  0.0720079   185.206   &lt;2e-16 ***\nORIGIN_GRID794       14.4738924  0.0314770   459.824   &lt;2e-16 ***\nORIGIN_GRID795       13.9248785  0.0400423   347.754   &lt;2e-16 ***\nORIGIN_GRID803       15.7471447  0.0133555  1179.074   &lt;2e-16 ***\nORIGIN_GRID804       17.0253772  0.0068848  2472.888   &lt;2e-16 ***\nORIGIN_GRID805       13.9635498  0.0338627   412.358   &lt;2e-16 ***\nORIGIN_GRID806       17.8725496  0.0038377  4657.126   &lt;2e-16 ***\nORIGIN_GRID807       16.6236051  0.0111430  1491.839   &lt;2e-16 ***\nORIGIN_GRID809       17.7044085  0.0040549  4366.207   &lt;2e-16 ***\nORIGIN_GRID810       15.8565343  0.0108626  1459.739   &lt;2e-16 ***\nORIGIN_GRID811       15.5522932  0.0151241  1028.310   &lt;2e-16 ***\nORIGIN_GRID812       15.0897631  0.0253141   596.101   &lt;2e-16 ***\nORIGIN_GRID813       13.2272018  0.0639142   206.952   &lt;2e-16 ***\nORIGIN_GRID814       15.0238604  0.0290643   516.918   &lt;2e-16 ***\nORIGIN_GRID822       16.9354582  0.0118761  1426.017   &lt;2e-16 ***\nORIGIN_GRID823       17.0732296  0.0056739  3009.094   &lt;2e-16 ***\nORIGIN_GRID824       15.0213618  0.0171502   875.869   &lt;2e-16 ***\nORIGIN_GRID825       16.3213267  0.0086066  1896.370   &lt;2e-16 ***\nORIGIN_GRID826       17.5691623  0.0043820  4009.411   &lt;2e-16 ***\nORIGIN_GRID829       17.6138124  0.0043490  4050.098   &lt;2e-16 ***\nORIGIN_GRID831       17.1733892  0.0072557  2366.871   &lt;2e-16 ***\nORIGIN_GRID832       14.0954067  0.0361126   390.319   &lt;2e-16 ***\nORIGIN_GRID833       16.6200749  0.0089027  1866.852   &lt;2e-16 ***\nORIGIN_GRID840       16.1358212  0.0133164  1211.730   &lt;2e-16 ***\nORIGIN_GRID841       17.4845800  0.0045899  3809.320   &lt;2e-16 ***\nORIGIN_GRID842       18.1891947  0.0032517  5593.685   &lt;2e-16 ***\nORIGIN_GRID843       15.2046180  0.0165452   918.972   &lt;2e-16 ***\nORIGIN_GRID844       15.7264176  0.0173754   905.098   &lt;2e-16 ***\nORIGIN_GRID845       17.3876580  0.0055672  3123.255   &lt;2e-16 ***\nORIGIN_GRID846       14.9471654  0.0171225   872.956   &lt;2e-16 ***\nORIGIN_GRID847       18.4853044  0.0032404  5704.666   &lt;2e-16 ***\nORIGIN_GRID850       11.9291927  0.2132098    55.950   &lt;2e-16 ***\nORIGIN_GRID851       18.5509705  0.0038138  4864.167   &lt;2e-16 ***\nORIGIN_GRID852       13.7126792  0.0604411   226.877   &lt;2e-16 ***\nORIGIN_GRID859       15.9398532  0.0125684  1268.252   &lt;2e-16 ***\nORIGIN_GRID860       17.8981542  0.0048570  3685.050   &lt;2e-16 ***\nORIGIN_GRID861       18.6806599  0.0029352  6364.353   &lt;2e-16 ***\nORIGIN_GRID862       15.5703676  0.0208515   746.727   &lt;2e-16 ***\nORIGIN_GRID863       16.5013635  0.0093035  1773.677   &lt;2e-16 ***\nORIGIN_GRID864       14.9934332  0.0165527   905.797   &lt;2e-16 ***\nORIGIN_GRID865       17.1862586  0.0056203  3057.866   &lt;2e-16 ***\nORIGIN_GRID866       15.5979094  0.0112967  1380.746   &lt;2e-16 ***\nORIGIN_GRID867       17.5108763  0.0054941  3187.236   &lt;2e-16 ***\nORIGIN_GRID869       14.4537313  0.0483746   298.788   &lt;2e-16 ***\nORIGIN_GRID871       14.2568609  0.0297546   479.148   &lt;2e-16 ***\nORIGIN_GRID872        9.4442143  1.0000020     9.444   &lt;2e-16 ***\nORIGIN_GRID878       16.4689364  0.0078692  2092.847   &lt;2e-16 ***\nORIGIN_GRID879       17.6728983  0.0038904  4542.646   &lt;2e-16 ***\nORIGIN_GRID880       17.4353754  0.0047467  3673.156   &lt;2e-16 ***\nORIGIN_GRID882       16.7674814  0.0072565  2310.672   &lt;2e-16 ***\nORIGIN_GRID883       16.3309879  0.0087714  1861.837   &lt;2e-16 ***\nORIGIN_GRID884       14.9681581  0.0166535   898.798   &lt;2e-16 ***\nORIGIN_GRID885       18.0060837  0.0037602  4788.651   &lt;2e-16 ***\nORIGIN_GRID886       17.5898020  0.0068133  2581.674   &lt;2e-16 ***\nORIGIN_GRID890       15.5188562  0.0142474  1089.243   &lt;2e-16 ***\nORIGIN_GRID891       19.6746653  0.0036879  5334.949   &lt;2e-16 ***\nORIGIN_GRID897       16.3548184  0.0087636  1866.229   &lt;2e-16 ***\nORIGIN_GRID898       16.7724682  0.0067857  2471.748   &lt;2e-16 ***\nORIGIN_GRID899       16.3892673  0.0073129  2241.158   &lt;2e-16 ***\nORIGIN_GRID900       15.8066893  0.0108065  1462.708   &lt;2e-16 ***\nORIGIN_GRID901       17.1921653  0.0055222  3113.284   &lt;2e-16 ***\nORIGIN_GRID902       16.7038129  0.0074485  2242.578   &lt;2e-16 ***\nORIGIN_GRID903       15.1505113  0.0290732   521.116   &lt;2e-16 ***\nORIGIN_GRID904       18.1286334  0.0039389  4602.482   &lt;2e-16 ***\nORIGIN_GRID905       17.9862417  0.0053212  3380.120   &lt;2e-16 ***\nORIGIN_GRID907       15.4864800  0.0243487   636.029   &lt;2e-16 ***\nORIGIN_GRID909       18.0693841  0.0042515  4250.110   &lt;2e-16 ***\nORIGIN_GRID910       18.9306456  0.0032183  5882.245   &lt;2e-16 ***\nORIGIN_GRID915       14.8267287  0.0300994   492.592   &lt;2e-16 ***\nORIGIN_GRID916       14.5614315  0.0317780   458.223   &lt;2e-16 ***\nORIGIN_GRID917       15.1891846  0.0158281   959.637   &lt;2e-16 ***\nORIGIN_GRID918       15.8176149  0.0106074  1491.193   &lt;2e-16 ***\nORIGIN_GRID919       15.1515757  0.0158449   956.241   &lt;2e-16 ***\nORIGIN_GRID920       16.7130179  0.0071323  2343.285   &lt;2e-16 ***\nORIGIN_GRID922       17.0692549  0.0096832  1762.765   &lt;2e-16 ***\nORIGIN_GRID923       18.4512745  0.0045960  4014.599   &lt;2e-16 ***\nORIGIN_GRID927       17.0010874  0.0091799  1852.000   &lt;2e-16 ***\nORIGIN_GRID928       18.1105850  0.0043371  4175.765   &lt;2e-16 ***\nORIGIN_GRID929       13.6482687  0.0500364   272.767   &lt;2e-16 ***\nORIGIN_GRID935       15.8992955  0.0110559  1438.083   &lt;2e-16 ***\nORIGIN_GRID936       16.6482593  0.0071201  2338.213   &lt;2e-16 ***\nORIGIN_GRID937       17.2219508  0.0054047  3186.483   &lt;2e-16 ***\nORIGIN_GRID938       15.2967074  0.0138364  1105.543   &lt;2e-16 ***\nORIGIN_GRID939       16.4910225  0.0069765  2363.789   &lt;2e-16 ***\nORIGIN_GRID945       15.4466889  0.0246560   626.488   &lt;2e-16 ***\nORIGIN_GRID947       17.7541886  0.0044491  3990.501   &lt;2e-16 ***\nORIGIN_GRID948       17.8272023  0.0050060  3561.192   &lt;2e-16 ***\nORIGIN_GRID953       17.1684876  0.0057080  3007.817   &lt;2e-16 ***\nORIGIN_GRID954       16.3828405  0.0077201  2122.107   &lt;2e-16 ***\nORIGIN_GRID955       17.2368570  0.0051888  3321.964   &lt;2e-16 ***\nORIGIN_GRID956       16.1402881  0.0091431  1765.291   &lt;2e-16 ***\nORIGIN_GRID964       12.4859376  0.2500098    49.942   &lt;2e-16 ***\nORIGIN_GRID966       17.6379602  0.0049308  3577.085   &lt;2e-16 ***\nORIGIN_GRID967       11.7976623  0.1507673    78.251   &lt;2e-16 ***\nORIGIN_GRID972       16.7133355  0.0075241  2221.311   &lt;2e-16 ***\nORIGIN_GRID973       16.1349866  0.0099949  1614.322   &lt;2e-16 ***\nORIGIN_GRID974       15.9405882  0.0085826  1857.319   &lt;2e-16 ***\nORIGIN_GRID975       15.9630575  0.0100399  1589.964   &lt;2e-16 ***\nORIGIN_GRID977       17.4037547  0.0051217  3398.058   &lt;2e-16 ***\nORIGIN_GRID983       12.9804499  0.1414341    91.777   &lt;2e-16 ***\nORIGIN_GRID985       17.5656622  0.0057312  3064.916   &lt;2e-16 ***\nORIGIN_GRID986       16.0914722  0.0117534  1369.096   &lt;2e-16 ***\nORIGIN_GRID990       14.7529370  0.0435295   338.918   &lt;2e-16 ***\nORIGIN_GRID991       14.4383864  0.0327739   440.545   &lt;2e-16 ***\nORIGIN_GRID992       15.6821606  0.0202085   776.018   &lt;2e-16 ***\nORIGIN_GRID993       17.7212972  0.0038586  4592.734   &lt;2e-16 ***\nORIGIN_GRID994       15.0947020  0.0179863   839.234   &lt;2e-16 ***\nORIGIN_GRID995       16.7089783  0.0067924  2459.950   &lt;2e-16 ***\nORIGIN_GRID1001      14.3922949  0.0612359   235.030   &lt;2e-16 ***\nORIGIN_GRID1002      13.4603221  0.0916918   146.800   &lt;2e-16 ***\nORIGIN_GRID1003      15.2169579  0.0273841   555.686   &lt;2e-16 ***\nORIGIN_GRID1004      19.2394378  0.0026933  7143.384   &lt;2e-16 ***\nORIGIN_GRID1005      14.7377177  0.0286841   513.794   &lt;2e-16 ***\nORIGIN_GRID1010      16.4926813  0.0084187  1959.060   &lt;2e-16 ***\nORIGIN_GRID1011      14.7705433  0.0173651   850.589   &lt;2e-16 ***\nORIGIN_GRID1012      14.8018160  0.0190019   778.965   &lt;2e-16 ***\nORIGIN_GRID1013      15.8530571  0.0096584  1641.373   &lt;2e-16 ***\nORIGIN_GRID1014      15.7288058  0.0130614  1204.217   &lt;2e-16 ***\nORIGIN_GRID1023      17.9449929  0.0046584  3852.140   &lt;2e-16 ***\nORIGIN_GRID1024      18.1787312  0.0039657  4584.036   &lt;2e-16 ***\nORIGIN_GRID1025      16.2155518  0.0145587  1113.807   &lt;2e-16 ***\nORIGIN_GRID1028      15.2657019  0.0152376  1001.845   &lt;2e-16 ***\nORIGIN_GRID1030      14.2319239  0.0284840   499.646   &lt;2e-16 ***\nORIGIN_GRID1031      16.8985081  0.0052400  3224.894   &lt;2e-16 ***\nORIGIN_GRID1033      16.8584954  0.0063434  2657.642   &lt;2e-16 ***\nORIGIN_GRID1040      14.5996657  0.0516154   282.855   &lt;2e-16 ***\nORIGIN_GRID1041      15.8866862  0.0171573   925.942   &lt;2e-16 ***\nORIGIN_GRID1042      18.2278275  0.0036478  4996.901   &lt;2e-16 ***\nORIGIN_GRID1043      17.2928057  0.0064089  2698.264   &lt;2e-16 ***\nORIGIN_GRID1048      15.6516378  0.0110248  1419.680   &lt;2e-16 ***\nORIGIN_GRID1049      16.7282926  0.0057937  2887.339   &lt;2e-16 ***\nORIGIN_GRID1050      17.5975107  0.0039580  4446.100   &lt;2e-16 ***\nORIGIN_GRID1061      18.4094834  0.0039013  4718.799   &lt;2e-16 ***\nORIGIN_GRID1062      18.3375262  0.0037898  4838.654   &lt;2e-16 ***\nORIGIN_GRID1063      16.0155719  0.0126971  1261.360   &lt;2e-16 ***\nORIGIN_GRID1064      12.1495117  0.2672678    45.458   &lt;2e-16 ***\nORIGIN_GRID1066      15.6998765  0.0103550  1516.165   &lt;2e-16 ***\nORIGIN_GRID1067      16.3538203  0.0069268  2360.956   &lt;2e-16 ***\nORIGIN_GRID1068      17.2130210  0.0044911  3832.663   &lt;2e-16 ***\nORIGIN_GRID1069      16.3874942  0.0066363  2469.377   &lt;2e-16 ***\nORIGIN_GRID1071      15.6317631  0.0116931  1336.838   &lt;2e-16 ***\nORIGIN_GRID1078      14.8050500  0.0478803   309.209   &lt;2e-16 ***\nORIGIN_GRID1080      17.6112458  0.0061604  2858.768   &lt;2e-16 ***\nORIGIN_GRID1081      17.5442077  0.0052174  3362.622   &lt;2e-16 ***\nORIGIN_GRID1082      15.8066694  0.0145154  1088.962   &lt;2e-16 ***\nORIGIN_GRID1086      16.6200361  0.0067420  2465.137   &lt;2e-16 ***\nORIGIN_GRID1087      16.3017632  0.0071707  2273.374   &lt;2e-16 ***\nORIGIN_GRID1089      16.7879261  0.0060355  2781.535   &lt;2e-16 ***\nORIGIN_GRID1090      16.6079050  0.0069361  2394.415   &lt;2e-16 ***\nORIGIN_GRID1097      14.0772999  0.0891124   157.972   &lt;2e-16 ***\nORIGIN_GRID1100      18.1130256  0.0041577  4356.471   &lt;2e-16 ***\nORIGIN_GRID1101      14.9969444  0.0396693   378.049   &lt;2e-16 ***\nORIGIN_GRID1102      14.1636091  0.0413555   342.484   &lt;2e-16 ***\nORIGIN_GRID1104      17.5649272  0.0043327  4054.075   &lt;2e-16 ***\nORIGIN_GRID1105      17.0672318  0.0047500  3593.084   &lt;2e-16 ***\nORIGIN_GRID1106      16.7665043  0.0098110  1708.949   &lt;2e-16 ***\nORIGIN_GRID1107      14.8108286  0.0167090   886.398   &lt;2e-16 ***\nORIGIN_GRID1108      15.6535009  0.0106588  1468.598   &lt;2e-16 ***\nORIGIN_GRID1115      12.0558060  0.1889920    63.790   &lt;2e-16 ***\nORIGIN_GRID1116      13.5894143  0.1118239   121.525   &lt;2e-16 ***\nORIGIN_GRID1119      15.6049039  0.0136813  1140.597   &lt;2e-16 ***\nORIGIN_GRID1120      15.9872307  0.0136051  1175.094   &lt;2e-16 ***\nORIGIN_GRID1123      15.7941072  0.0100738  1567.835   &lt;2e-16 ***\nORIGIN_GRID1124      16.4634976  0.0068991  2386.325   &lt;2e-16 ***\nORIGIN_GRID1125      16.8957439  0.0050595  3339.410   &lt;2e-16 ***\nORIGIN_GRID1128      15.8515199  0.0092125  1720.648   &lt;2e-16 ***\nORIGIN_GRID1138      16.9577603  0.0073827  2296.945   &lt;2e-16 ***\nORIGIN_GRID1139      17.8509325  0.0051739  3450.186   &lt;2e-16 ***\nORIGIN_GRID1140      15.9353135  0.0145820  1092.804   &lt;2e-16 ***\nORIGIN_GRID1142      16.2348982  0.0082645  1964.418   &lt;2e-16 ***\nORIGIN_GRID1143      16.6839563  0.0054230  3076.540   &lt;2e-16 ***\nORIGIN_GRID1144      15.5627686  0.0118034  1318.501   &lt;2e-16 ***\nORIGIN_GRID1145      15.1355742  0.0139681  1083.578   &lt;2e-16 ***\nORIGIN_GRID1146      16.5233936  0.0078158  2114.114   &lt;2e-16 ***\nORIGIN_GRID1147      14.5521823  0.0268273   542.439   &lt;2e-16 ***\nORIGIN_GRID1152      12.3102576  0.1154866   106.595   &lt;2e-16 ***\nORIGIN_GRID1153      16.1743618  0.0119256  1356.269   &lt;2e-16 ***\nORIGIN_GRID1157      17.9550632  0.0041381  4338.934   &lt;2e-16 ***\nORIGIN_GRID1158      15.5985228  0.0138442  1126.716   &lt;2e-16 ***\nORIGIN_GRID1161      17.7824130  0.0040896  4348.249   &lt;2e-16 ***\nORIGIN_GRID1162      17.0419161  0.0049613  3434.960   &lt;2e-16 ***\nORIGIN_GRID1163      17.7209839  0.0036822  4812.592   &lt;2e-16 ***\nORIGIN_GRID1164      15.8786588  0.0100912  1573.509   &lt;2e-16 ***\nORIGIN_GRID1167      13.9645136  0.0461747   302.428   &lt;2e-16 ***\nORIGIN_GRID1171      12.8602930  0.0891109   144.318   &lt;2e-16 ***\nORIGIN_GRID1172      17.6839398  0.0060876  2904.902   &lt;2e-16 ***\nORIGIN_GRID1173      15.2594138  0.0205943   740.955   &lt;2e-16 ***\nORIGIN_GRID1176      16.8780388  0.0068468  2465.105   &lt;2e-16 ***\nORIGIN_GRID1177      17.5228016  0.0061380  2854.815   &lt;2e-16 ***\nORIGIN_GRID1180      17.6531713  0.0040584  4349.789   &lt;2e-16 ***\nORIGIN_GRID1181      17.0298906  0.0044037  3867.203   &lt;2e-16 ***\nORIGIN_GRID1183      13.3249138  0.0375826   354.550   &lt;2e-16 ***\nORIGIN_GRID1184      16.6537535  0.0062880  2648.494   &lt;2e-16 ***\nORIGIN_GRID1186      12.4310282  0.1348550    92.181   &lt;2e-16 ***\nORIGIN_GRID1192      14.2232570  0.0331394   429.195   &lt;2e-16 ***\nORIGIN_GRID1193      16.0016203  0.0112412  1423.477   &lt;2e-16 ***\nORIGIN_GRID1194      15.4032811  0.0153204  1005.407   &lt;2e-16 ***\nORIGIN_GRID1195      18.1461478  0.0039943  4542.991   &lt;2e-16 ***\nORIGIN_GRID1196      16.8484881  0.0088925  1894.690   &lt;2e-16 ***\nORIGIN_GRID1199      15.3418448  0.0123071  1246.586   &lt;2e-16 ***\nORIGIN_GRID1200      17.2084769  0.0043279  3976.181   &lt;2e-16 ***\nORIGIN_GRID1201      16.8687044  0.0047800  3529.040   &lt;2e-16 ***\nORIGIN_GRID1202      15.4434095  0.0095789  1612.238   &lt;2e-16 ***\nORIGIN_GRID1203      15.7577615  0.0116106  1357.192   &lt;2e-16 ***\nORIGIN_GRID1204      16.5729636  0.0081494  2033.638   &lt;2e-16 ***\nORIGIN_GRID1205      11.8197609  0.3015182    39.201   &lt;2e-16 ***\nORIGIN_GRID1207      15.6342521  0.0121841  1283.168   &lt;2e-16 ***\nORIGIN_GRID1208      16.0252633  0.0112455  1425.041   &lt;2e-16 ***\nORIGIN_GRID1209      15.4630449  0.0164952   937.429   &lt;2e-16 ***\nORIGIN_GRID1210      13.0766906  0.1072314   121.948   &lt;2e-16 ***\nORIGIN_GRID1211      13.6425375  0.0487253   279.989   &lt;2e-16 ***\nORIGIN_GRID1212      12.4073246  0.0814021   152.420   &lt;2e-16 ***\nORIGIN_GRID1213      18.1134366  0.0038705  4679.909   &lt;2e-16 ***\nORIGIN_GRID1214      16.5337535  0.0088938  1859.016   &lt;2e-16 ***\nORIGIN_GRID1215      11.5238281  0.7071107    16.297   &lt;2e-16 ***\nORIGIN_GRID1218      16.7634932  0.0063522  2638.997   &lt;2e-16 ***\nORIGIN_GRID1219      17.6342509  0.0036903  4778.506   &lt;2e-16 ***\nORIGIN_GRID1220      15.9664361  0.0064379  2480.063   &lt;2e-16 ***\nORIGIN_GRID1221      15.7722232  0.0081528  1934.567   &lt;2e-16 ***\nORIGIN_GRID1222      15.9779899  0.0111056  1438.727   &lt;2e-16 ***\nORIGIN_GRID1225      15.7787060  0.0098463  1602.494   &lt;2e-16 ***\nORIGIN_GRID1226      15.5924794  0.0120813  1290.630   &lt;2e-16 ***\nORIGIN_GRID1227      16.4271125  0.0084093  1953.450   &lt;2e-16 ***\nORIGIN_GRID1229      15.5517573  0.0187195   830.780   &lt;2e-16 ***\nORIGIN_GRID1230      16.8187708  0.0072995  2304.102   &lt;2e-16 ***\nORIGIN_GRID1231      17.2968920  0.0052576  3289.891   &lt;2e-16 ***\nORIGIN_GRID1232      17.3619050  0.0053939  3218.786   &lt;2e-16 ***\nORIGIN_GRID1233      18.3658361  0.0040859  4494.958   &lt;2e-16 ***\nORIGIN_GRID1234      14.3378009  0.0451726   317.400   &lt;2e-16 ***\nORIGIN_GRID1238      15.5794926  0.0085372  1824.905   &lt;2e-16 ***\nORIGIN_GRID1239      15.3581896  0.0088813  1729.272   &lt;2e-16 ***\nORIGIN_GRID1240      16.5277837  0.0051824  3189.211   &lt;2e-16 ***\nORIGIN_GRID1241      15.8627993  0.0099051  1601.485   &lt;2e-16 ***\nORIGIN_GRID1242      15.4122877  0.0131336  1173.503   &lt;2e-16 ***\nORIGIN_GRID1243      13.5644514  0.0466213   290.950   &lt;2e-16 ***\nORIGIN_GRID1244      15.1634916  0.0122647  1236.348   &lt;2e-16 ***\nORIGIN_GRID1245      16.7346298  0.0077000  2173.324   &lt;2e-16 ***\nORIGIN_GRID1246      16.1743420  0.0123085  1314.076   &lt;2e-16 ***\nORIGIN_GRID1249      14.5841275  0.0344166   423.753   &lt;2e-16 ***\nORIGIN_GRID1250      18.3750257  0.0033500  5485.100   &lt;2e-16 ***\nORIGIN_GRID1251      17.9901649  0.0038878  4627.395   &lt;2e-16 ***\nORIGIN_GRID1252      17.5092404  0.0063256  2768.007   &lt;2e-16 ***\nORIGIN_GRID1253      14.9788228  0.0240229   623.524   &lt;2e-16 ***\nORIGIN_GRID1256      16.0578698  0.0068644  2339.285   &lt;2e-16 ***\nORIGIN_GRID1257      14.9342916  0.0103482  1443.184   &lt;2e-16 ***\nORIGIN_GRID1258      15.8659945  0.0067766  2341.288   &lt;2e-16 ***\nORIGIN_GRID1259      15.6919056  0.0083645  1876.008   &lt;2e-16 ***\nORIGIN_GRID1260      15.4100922  0.0157904   975.914   &lt;2e-16 ***\nORIGIN_GRID1261      14.8031328  0.0150441   983.982   &lt;2e-16 ***\nORIGIN_GRID1262      16.0114903  0.0076619  2089.755   &lt;2e-16 ***\nORIGIN_GRID1263      16.0828724  0.0074869  2148.122   &lt;2e-16 ***\nORIGIN_GRID1264      17.2138980  0.0051842  3320.443   &lt;2e-16 ***\nORIGIN_GRID1265      17.2683598  0.0052985  3259.123   &lt;2e-16 ***\nORIGIN_GRID1266      16.3178152  0.0109300  1492.936   &lt;2e-16 ***\nORIGIN_GRID1268      17.5799111  0.0065104  2700.297   &lt;2e-16 ***\nORIGIN_GRID1269      17.7028067  0.0041115  4305.630   &lt;2e-16 ***\nORIGIN_GRID1270      17.8526293  0.0044389  4021.859   &lt;2e-16 ***\nORIGIN_GRID1272      17.4744965  0.0149245  1170.856   &lt;2e-16 ***\nORIGIN_GRID1276      15.5835744  0.0076187  2045.431   &lt;2e-16 ***\nORIGIN_GRID1277      15.4476337  0.0080349  1922.569   &lt;2e-16 ***\nORIGIN_GRID1278      15.8383776  0.0063939  2477.102   &lt;2e-16 ***\nORIGIN_GRID1279      16.8411166  0.0049558  3398.264   &lt;2e-16 ***\nORIGIN_GRID1280      16.2346354  0.0064897  2501.583   &lt;2e-16 ***\nORIGIN_GRID1281      15.6837010  0.0092885  1688.505   &lt;2e-16 ***\nORIGIN_GRID1282      16.3500515  0.0071356  2291.336   &lt;2e-16 ***\nORIGIN_GRID1283      16.3658008  0.0065315  2505.669   &lt;2e-16 ***\nORIGIN_GRID1284      17.2455605  0.0049558  3479.856   &lt;2e-16 ***\nORIGIN_GRID1285      16.7930623  0.0066250  2534.817   &lt;2e-16 ***\nORIGIN_GRID1288      17.7590581  0.0050213  3536.738   &lt;2e-16 ***\nORIGIN_GRID1289      18.7112165  0.0034427  5435.098   &lt;2e-16 ***\nORIGIN_GRID1294      16.2602034  0.0060604  2683.018   &lt;2e-16 ***\nORIGIN_GRID1295      16.2563246  0.0051133  3179.239   &lt;2e-16 ***\nORIGIN_GRID1296      16.3215553  0.0049311  3309.924   &lt;2e-16 ***\nORIGIN_GRID1297      15.0044456  0.0158487   946.727   &lt;2e-16 ***\nORIGIN_GRID1298      16.6375158  0.0055314  3007.841   &lt;2e-16 ***\nORIGIN_GRID1299      17.2394183  0.0042274  4077.975   &lt;2e-16 ***\nORIGIN_GRID1300      14.1879074  0.0225006   630.556   &lt;2e-16 ***\nORIGIN_GRID1301      17.3297348  0.0044834  3865.335   &lt;2e-16 ***\nORIGIN_GRID1302      17.7167063  0.0035893  4935.940   &lt;2e-16 ***\nORIGIN_GRID1303      18.4104095  0.0032173  5722.404   &lt;2e-16 ***\nORIGIN_GRID1304      14.8062920  0.0201358   735.322   &lt;2e-16 ***\nORIGIN_GRID1306      17.3561974  0.0066225  2620.807   &lt;2e-16 ***\nORIGIN_GRID1307      18.4373852  0.0037533  4912.259   &lt;2e-16 ***\nORIGIN_GRID1308      17.6116252  0.0073069  2410.268   &lt;2e-16 ***\nORIGIN_GRID1314      15.4092486  0.0076724  2008.408   &lt;2e-16 ***\nORIGIN_GRID1315      15.5801528  0.0074802  2082.863   &lt;2e-16 ***\nORIGIN_GRID1316      14.5787489  0.0181581   802.879   &lt;2e-16 ***\nORIGIN_GRID1317      15.9650129  0.0081504  1958.808   &lt;2e-16 ***\nORIGIN_GRID1318      16.6509871  0.0059739  2787.291   &lt;2e-16 ***\nORIGIN_GRID1319      17.4894494  0.0042525  4112.767   &lt;2e-16 ***\nORIGIN_GRID1320      17.5388993  0.0039098  4485.832   &lt;2e-16 ***\nORIGIN_GRID1321      17.1743732  0.0047215  3637.454   &lt;2e-16 ***\nORIGIN_GRID1322      16.4731122  0.0063315  2601.755   &lt;2e-16 ***\nORIGIN_GRID1323      15.1396819  0.0166196   910.954   &lt;2e-16 ***\nORIGIN_GRID1326      18.7055503  0.0036042  5189.959   &lt;2e-16 ***\nORIGIN_GRID1327      18.3182533  0.0047166  3883.798   &lt;2e-16 ***\nORIGIN_GRID1332      13.9298502  0.0189021   736.949   &lt;2e-16 ***\nORIGIN_GRID1333      14.9536026  0.0097470  1534.170   &lt;2e-16 ***\nORIGIN_GRID1334      16.0344628  0.0054129  2962.277   &lt;2e-16 ***\nORIGIN_GRID1335      17.0849693  0.0042794  3992.389   &lt;2e-16 ***\nORIGIN_GRID1336      16.5707596  0.0062458  2653.106   &lt;2e-16 ***\nORIGIN_GRID1337      18.0045461  0.0030930  5820.977   &lt;2e-16 ***\nORIGIN_GRID1338      16.4183910  0.0063551  2583.510   &lt;2e-16 ***\nORIGIN_GRID1339      16.6295692  0.0057703  2881.908   &lt;2e-16 ***\nORIGIN_GRID1340      18.3578180  0.0030150  6088.839   &lt;2e-16 ***\nORIGIN_GRID1341      15.9355452  0.0099621  1599.618   &lt;2e-16 ***\nORIGIN_GRID1342      15.9411706  0.0125601  1269.196   &lt;2e-16 ***\nORIGIN_GRID1345      18.1221301  0.0048516  3735.301   &lt;2e-16 ***\nORIGIN_GRID1352      15.2139699  0.0115904  1312.632   &lt;2e-16 ***\nORIGIN_GRID1353      15.3656773  0.0077777  1975.617   &lt;2e-16 ***\nORIGIN_GRID1354      16.4768063  0.0046678  3529.894   &lt;2e-16 ***\nORIGIN_GRID1355      16.8174328  0.0051643  3256.500   &lt;2e-16 ***\nORIGIN_GRID1356      17.3834813  0.0041629  4175.835   &lt;2e-16 ***\nORIGIN_GRID1357      17.6288989  0.0037539  4696.197   &lt;2e-16 ***\nORIGIN_GRID1358      17.5558982  0.0053204  3299.756   &lt;2e-16 ***\nORIGIN_GRID1359      17.6769142  0.0038148  4633.800   &lt;2e-16 ***\nORIGIN_GRID1360      17.3327056  0.0046592  3720.089   &lt;2e-16 ***\nORIGIN_GRID1364      13.0954506  0.1084834   120.714   &lt;2e-16 ***\nORIGIN_GRID1371      14.2032796  0.0210970   673.237   &lt;2e-16 ***\nORIGIN_GRID1372      15.8162171  0.0065581  2411.692   &lt;2e-16 ***\nORIGIN_GRID1373      16.0368027  0.0067354  2380.981   &lt;2e-16 ***\nORIGIN_GRID1374      16.3387724  0.0072327  2259.018   &lt;2e-16 ***\nORIGIN_GRID1375      17.8143436  0.0047969  3713.733   &lt;2e-16 ***\nORIGIN_GRID1376      16.3447236  0.0068511  2385.715   &lt;2e-16 ***\nORIGIN_GRID1377      15.5942810  0.0108960  1431.198   &lt;2e-16 ***\nORIGIN_GRID1378      17.9499241  0.0035717  5025.634   &lt;2e-16 ***\nORIGIN_GRID1379      16.2892666  0.0148630  1095.960   &lt;2e-16 ***\nORIGIN_GRID1380      16.5844077  0.0091072  1821.025   &lt;2e-16 ***\nORIGIN_GRID1383      16.0599301  0.0158727  1011.798   &lt;2e-16 ***\nORIGIN_GRID1389      12.9931135  0.0720056   180.446   &lt;2e-16 ***\nORIGIN_GRID1390      13.3865798  0.0321473   416.414   &lt;2e-16 ***\nORIGIN_GRID1391      14.4803710  0.0155266   932.618   &lt;2e-16 ***\nORIGIN_GRID1392      16.0040870  0.0060370  2651.003   &lt;2e-16 ***\nORIGIN_GRID1393      16.5260198  0.0050653  3262.570   &lt;2e-16 ***\nORIGIN_GRID1394      17.2616507  0.0043619  3957.405   &lt;2e-16 ***\nORIGIN_GRID1395      18.5196450  0.0048952  3783.243   &lt;2e-16 ***\nORIGIN_GRID1396      15.5134601  0.0143413  1081.731   &lt;2e-16 ***\nORIGIN_GRID1397      15.8851769  0.0195014   814.568   &lt;2e-16 ***\nORIGIN_GRID1398      17.2291761  0.0063470  2714.539   &lt;2e-16 ***\nORIGIN_GRID1401      13.4821609  0.0577684   233.383   &lt;2e-16 ***\nORIGIN_GRID1408      14.1113670  0.0531809   265.346   &lt;2e-16 ***\nORIGIN_GRID1409      13.5341681  0.0307769   439.751   &lt;2e-16 ***\nORIGIN_GRID1410      14.9131792  0.0175719   848.697   &lt;2e-16 ***\nORIGIN_GRID1411      16.6535594  0.0047638  3495.863   &lt;2e-16 ***\nORIGIN_GRID1412      17.5700794  0.0036704  4786.970   &lt;2e-16 ***\nORIGIN_GRID1413      17.6976726  0.0045585  3882.369   &lt;2e-16 ***\nORIGIN_GRID1414      14.6502705  0.0190298   769.860   &lt;2e-16 ***\nORIGIN_GRID1415      16.3048468  0.0071027  2295.593   &lt;2e-16 ***\nORIGIN_GRID1416      15.4746991  0.0126311  1225.125   &lt;2e-16 ***\nORIGIN_GRID1417      15.5352516  0.0132719  1170.533   &lt;2e-16 ***\nORIGIN_GRID1418      15.0853835  0.0191026   789.703   &lt;2e-16 ***\nORIGIN_GRID1419      13.1732833  0.0764971   172.206   &lt;2e-16 ***\nORIGIN_GRID1420      13.7282807  0.0612300   224.208   &lt;2e-16 ***\nORIGIN_GRID1428      11.1995846  0.7071099    15.839   &lt;2e-16 ***\nORIGIN_GRID1430      15.3820235  0.0147578  1042.295   &lt;2e-16 ***\nORIGIN_GRID1431      14.0113393  0.0195712   715.915   &lt;2e-16 ***\nORIGIN_GRID1432      17.3568805  0.0038670  4488.474   &lt;2e-16 ***\nORIGIN_GRID1433      15.9203643  0.0196316   810.954   &lt;2e-16 ***\nORIGIN_GRID1434      16.0026660  0.0098583  1623.267   &lt;2e-16 ***\nORIGIN_GRID1435      16.4504419  0.0086629  1898.963   &lt;2e-16 ***\nORIGIN_GRID1436      15.5778079  0.0119797  1300.356   &lt;2e-16 ***\nORIGIN_GRID1439      12.5813733  0.1118208   112.514   &lt;2e-16 ***\nORIGIN_GRID1440      13.7664631  0.0574847   239.481   &lt;2e-16 ***\nORIGIN_GRID1448      17.3945511  0.0090642  1919.048   &lt;2e-16 ***\nORIGIN_GRID1449      15.8512976  0.0072000  2201.577   &lt;2e-16 ***\nORIGIN_GRID1450      16.7643107  0.0058624  2859.616   &lt;2e-16 ***\nORIGIN_GRID1451      17.6187791  0.0039234  4490.700   &lt;2e-16 ***\nORIGIN_GRID1452      16.0668322  0.0075674  2123.152   &lt;2e-16 ***\nORIGIN_GRID1453      17.3933130  0.0041987  4142.515   &lt;2e-16 ***\nORIGIN_GRID1454      17.0593503  0.0087497  1949.715   &lt;2e-16 ***\nORIGIN_GRID1455      16.0662481  0.0091507  1755.734   &lt;2e-16 ***\nORIGIN_GRID1456      17.7619032  0.0043912  4044.891   &lt;2e-16 ***\nORIGIN_GRID1457      17.4978902  0.0054618  3203.706   &lt;2e-16 ***\nORIGIN_GRID1458      14.1145981  0.0622906   226.593   &lt;2e-16 ***\nORIGIN_GRID1468      16.0799086  0.0197152   815.608   &lt;2e-16 ***\nORIGIN_GRID1469      17.2080293  0.0040504  4248.452   &lt;2e-16 ***\nORIGIN_GRID1470      16.0431346  0.0078949  2032.090   &lt;2e-16 ***\nORIGIN_GRID1471      17.4050438  0.0045684  3809.846   &lt;2e-16 ***\nORIGIN_GRID1472      17.9795514  0.0034209  5255.777   &lt;2e-16 ***\nORIGIN_GRID1473      16.4130389  0.0067681  2425.062   &lt;2e-16 ***\nORIGIN_GRID1474      18.1107266  0.0035024  5171.017   &lt;2e-16 ***\nORIGIN_GRID1475      16.9131187  0.0066488  2543.788   &lt;2e-16 ***\nORIGIN_GRID1476      16.7870708  0.0075364  2227.459   &lt;2e-16 ***\nORIGIN_GRID1477      13.2870784  0.0591639   224.581   &lt;2e-16 ***\nORIGIN_GRID1486      15.0507227  0.0270277   556.863   &lt;2e-16 ***\nORIGIN_GRID1487      17.1043441  0.0043838  3901.688   &lt;2e-16 ***\nORIGIN_GRID1488      15.0317022  0.0157831   952.390   &lt;2e-16 ***\nORIGIN_GRID1489      16.5987826  0.0058912  2817.534   &lt;2e-16 ***\nORIGIN_GRID1490      16.4073154  0.0085300  1923.477   &lt;2e-16 ***\nORIGIN_GRID1491      16.7187863  0.0055247  3026.215   &lt;2e-16 ***\nORIGIN_GRID1492      17.2656617  0.0046992  3674.195   &lt;2e-16 ***\nORIGIN_GRID1493      17.9448003  0.0037248  4817.612   &lt;2e-16 ***\nORIGIN_GRID1494      17.6832904  0.0051120  3459.170   &lt;2e-16 ***\nORIGIN_GRID1506      12.3180102  0.1666768    73.904   &lt;2e-16 ***\nORIGIN_GRID1507      17.3241210  0.0039830  4349.478   &lt;2e-16 ***\nORIGIN_GRID1508      16.0596665  0.0067649  2373.964   &lt;2e-16 ***\nORIGIN_GRID1509      17.1744857  0.0102116  1681.860   &lt;2e-16 ***\nORIGIN_GRID1510      17.2438340  0.0046000  3748.628   &lt;2e-16 ***\nORIGIN_GRID1512      18.1254814  0.0034782  5211.213   &lt;2e-16 ***\nORIGIN_GRID1513      18.5957958  0.0049982  3720.491   &lt;2e-16 ***\nORIGIN_GRID1514      17.7062414  0.0056296  3145.195   &lt;2e-16 ***\nORIGIN_GRID1524      16.5140769  0.0116690  1415.206   &lt;2e-16 ***\nORIGIN_GRID1525      16.9674711  0.0052278  3245.593   &lt;2e-16 ***\nORIGIN_GRID1526      16.7056171  0.0052435  3185.996   &lt;2e-16 ***\nORIGIN_GRID1527      16.5686478  0.0071263  2325.001   &lt;2e-16 ***\nORIGIN_GRID1528      16.0103447  0.0081296  1969.387   &lt;2e-16 ***\nORIGIN_GRID1529      15.5414578  0.0118476  1311.781   &lt;2e-16 ***\nORIGIN_GRID1530      17.0497554  0.0063485  2685.638   &lt;2e-16 ***\nORIGIN_GRID1531      17.6550843  0.0043494  4059.166   &lt;2e-16 ***\nORIGIN_GRID1532      16.7973159  0.0078357  2143.690   &lt;2e-16 ***\nORIGIN_GRID1544      16.9616764  0.0060745  2792.278   &lt;2e-16 ***\nORIGIN_GRID1545      16.7539155  0.0049494  3385.026   &lt;2e-16 ***\nORIGIN_GRID1546      17.3655431  0.0040994  4236.115   &lt;2e-16 ***\nORIGIN_GRID1547      16.4168945  0.0065412  2509.767   &lt;2e-16 ***\nORIGIN_GRID1548      17.6450521  0.0041850  4216.241   &lt;2e-16 ***\nORIGIN_GRID1549      17.3665654  0.0048675  3567.845   &lt;2e-16 ***\nORIGIN_GRID1550      18.0071113  0.0034357  5241.245   &lt;2e-16 ***\nORIGIN_GRID1551      15.4708321  0.0122450  1263.437   &lt;2e-16 ***\nORIGIN_GRID1552      17.8687004  0.0045532  3924.452   &lt;2e-16 ***\nORIGIN_GRID1563      17.0679444  0.0051724  3299.809   &lt;2e-16 ***\nORIGIN_GRID1564      16.9125454  0.0047509  3559.880   &lt;2e-16 ***\nORIGIN_GRID1565      16.5496092  0.0055610  2975.988   &lt;2e-16 ***\nORIGIN_GRID1566      14.7130068  0.0199875   736.112   &lt;2e-16 ***\nORIGIN_GRID1567      17.1011702  0.0053856  3175.323   &lt;2e-16 ***\nORIGIN_GRID1568      17.7303530  0.0037325  4750.215   &lt;2e-16 ***\nORIGIN_GRID1569      17.3847898  0.0044789  3881.481   &lt;2e-16 ***\nORIGIN_GRID1570      17.5386458  0.0042735  4104.094   &lt;2e-16 ***\nORIGIN_GRID1571      18.6145758  0.0056916  3270.556   &lt;2e-16 ***\nORIGIN_GRID1582      15.9908145  0.0092174  1734.857   &lt;2e-16 ***\nORIGIN_GRID1583      16.7840162  0.0050150  3346.766   &lt;2e-16 ***\nORIGIN_GRID1584      15.9212074  0.0071676  2221.285   &lt;2e-16 ***\nORIGIN_GRID1585      15.7378426  0.0104754  1502.357   &lt;2e-16 ***\nORIGIN_GRID1587      17.7797826  0.0039348  4518.560   &lt;2e-16 ***\nORIGIN_GRID1588      18.0170588  0.0034640  5201.212   &lt;2e-16 ***\nORIGIN_GRID1589      17.3653454  0.0044176  3930.976   &lt;2e-16 ***\nORIGIN_GRID1590      17.2310796  0.0052254  3297.531   &lt;2e-16 ***\nORIGIN_GRID1591      15.1519966  0.0244058   620.835   &lt;2e-16 ***\nORIGIN_GRID1601      16.7173885  0.0057164  2924.477   &lt;2e-16 ***\nORIGIN_GRID1602      16.5154359  0.0095696  1725.826   &lt;2e-16 ***\nORIGIN_GRID1603      15.6129912  0.0099013  1576.863   &lt;2e-16 ***\nORIGIN_GRID1604      15.2409810  0.0233279   653.338   &lt;2e-16 ***\nORIGIN_GRID1606      17.4172055  0.0043409  4012.327   &lt;2e-16 ***\nORIGIN_GRID1607      16.9331306  0.0053995  3136.031   &lt;2e-16 ***\nORIGIN_GRID1608      17.9740573  0.0035001  5135.304   &lt;2e-16 ***\nORIGIN_GRID1609      17.9621904  0.0039312  4569.116   &lt;2e-16 ***\nORIGIN_GRID1610      16.8093555  0.0107499  1563.677   &lt;2e-16 ***\nORIGIN_GRID1620      17.4132680  0.0048826  3566.399   &lt;2e-16 ***\nORIGIN_GRID1621      16.6014008  0.0063066  2632.380   &lt;2e-16 ***\nORIGIN_GRID1622      16.7269350  0.0064807  2581.049   &lt;2e-16 ***\nORIGIN_GRID1623      15.0752274  0.0133893  1125.914   &lt;2e-16 ***\nORIGIN_GRID1624      15.4402374  0.0273951   563.612   &lt;2e-16 ***\nORIGIN_GRID1625      14.1991932  0.0327483   433.586   &lt;2e-16 ***\nORIGIN_GRID1626      17.7738639  0.0042339  4198.014   &lt;2e-16 ***\nORIGIN_GRID1627      17.6801212  0.0039371  4490.657   &lt;2e-16 ***\nORIGIN_GRID1628      17.7830320  0.0039225  4533.653   &lt;2e-16 ***\nORIGIN_GRID1629      16.8402579  0.0075004  2245.262   &lt;2e-16 ***\nORIGIN_GRID1630      15.4327095  0.0268565   574.635   &lt;2e-16 ***\nORIGIN_GRID1639      16.5000683  0.0072068  2289.515   &lt;2e-16 ***\nORIGIN_GRID1640      17.6164848  0.0037361  4715.154   &lt;2e-16 ***\nORIGIN_GRID1641      17.4951290  0.0039885  4386.350   &lt;2e-16 ***\nORIGIN_GRID1645      17.4224194  0.0052271  3333.071   &lt;2e-16 ***\nORIGIN_GRID1646      17.4901669  0.0043500  4020.736   &lt;2e-16 ***\nORIGIN_GRID1647      17.8313403  0.0037460  4760.051   &lt;2e-16 ***\nORIGIN_GRID1648      14.7167952  0.0328054   448.609   &lt;2e-16 ***\nORIGIN_GRID1658      17.2423433  0.0052813  3264.763   &lt;2e-16 ***\nORIGIN_GRID1659      16.6576354  0.0059070  2820.004   &lt;2e-16 ***\nORIGIN_GRID1660      17.1282528  0.0046106  3714.963   &lt;2e-16 ***\nORIGIN_GRID1661      16.4546062  0.0073099  2251.010   &lt;2e-16 ***\nORIGIN_GRID1663      14.1676291  0.0607775   233.106   &lt;2e-16 ***\nORIGIN_GRID1665      16.9014003  0.0065503  2580.259   &lt;2e-16 ***\nORIGIN_GRID1666      18.6785559  0.0029052  6429.361   &lt;2e-16 ***\nORIGIN_GRID1667      14.2421230  0.0343467   414.658   &lt;2e-16 ***\nORIGIN_GRID1668      17.5794331  0.0103903  1691.903   &lt;2e-16 ***\nORIGIN_GRID1677      17.0968689  0.0050070  3414.613   &lt;2e-16 ***\nORIGIN_GRID1678      17.3740720  0.0046695  3720.776   &lt;2e-16 ***\nORIGIN_GRID1679      17.5847099  0.0042206  4166.425   &lt;2e-16 ***\nORIGIN_GRID1682      15.4253703  0.0252453   611.020   &lt;2e-16 ***\nORIGIN_GRID1684      17.7832652  0.0081541  2180.902   &lt;2e-16 ***\nORIGIN_GRID1685      17.6827578  0.0045045  3925.560   &lt;2e-16 ***\nORIGIN_GRID1696      17.3804983  0.0059475  2922.300   &lt;2e-16 ***\nORIGIN_GRID1697      15.6861336  0.0123256  1272.645   &lt;2e-16 ***\nORIGIN_GRID1698      17.5358654  0.0096225  1822.379   &lt;2e-16 ***\nORIGIN_GRID1699      17.2518461  0.0048093  3587.221   &lt;2e-16 ***\nORIGIN_GRID1702      14.1008477  0.0506104   278.616   &lt;2e-16 ***\nORIGIN_GRID1704      17.6035107  0.0048843  3604.089   &lt;2e-16 ***\nORIGIN_GRID1705      17.3914173  0.0085459  2035.063   &lt;2e-16 ***\nORIGIN_GRID1715      17.3871970  0.0047515  3659.272   &lt;2e-16 ***\nORIGIN_GRID1716      15.8030680  0.0096928  1630.385   &lt;2e-16 ***\nORIGIN_GRID1717      16.6333437  0.0087304  1905.226   &lt;2e-16 ***\nORIGIN_GRID1718      11.9442149  0.1324683    90.167   &lt;2e-16 ***\nORIGIN_GRID1721      14.1283589  0.0588590   240.038   &lt;2e-16 ***\nORIGIN_GRID1723      16.7221652  0.0086110  1941.960   &lt;2e-16 ***\nORIGIN_GRID1735      16.0932386  0.0089612  1795.877   &lt;2e-16 ***\nORIGIN_GRID1736      17.7255783  0.0056040  3163.018   &lt;2e-16 ***\nORIGIN_GRID1737      17.2266942  0.0051337  3355.629   &lt;2e-16 ***\nORIGIN_GRID1740      15.2976350  0.0282074   542.328   &lt;2e-16 ***\nORIGIN_GRID1742      16.7766406  0.0091005  1843.486   &lt;2e-16 ***\nORIGIN_GRID1753      16.7849344  0.0067146  2499.777   &lt;2e-16 ***\nORIGIN_GRID1754      17.5228343  0.0044598  3929.039   &lt;2e-16 ***\nORIGIN_GRID1755      18.0481001  0.0040225  4486.732   &lt;2e-16 ***\nORIGIN_GRID1758      14.1308711  0.0469207   301.165   &lt;2e-16 ***\nORIGIN_GRID1773      16.4299569  0.0084203  1951.241   &lt;2e-16 ***\nORIGIN_GRID1774      18.3657213  0.0030596  6002.728   &lt;2e-16 ***\nORIGIN_GRID1775      16.9814547  0.0067254  2524.970   &lt;2e-16 ***\nORIGIN_GRID1776      17.9604136  0.0043618  4117.673   &lt;2e-16 ***\nORIGIN_GRID1778      13.1819100  0.0880643   149.685   &lt;2e-16 ***\nORIGIN_GRID1791      16.7143943  0.0077081  2168.427   &lt;2e-16 ***\nORIGIN_GRID1792      15.1996790  0.0135261  1123.733   &lt;2e-16 ***\nORIGIN_GRID1793      17.6221637  0.0043219  4077.375   &lt;2e-16 ***\nORIGIN_GRID1794      16.5814937  0.0107106  1548.132   &lt;2e-16 ***\nORIGIN_GRID1795      18.0599356  0.0043302  4170.726   &lt;2e-16 ***\nORIGIN_GRID1796      16.7686228  0.0073192  2291.061   &lt;2e-16 ***\nORIGIN_GRID1797      17.2423666  0.0061929  2784.198   &lt;2e-16 ***\nORIGIN_GRID1811      16.9838045  0.0058124  2922.008   &lt;2e-16 ***\nORIGIN_GRID1812      17.7019629  0.0038566  4590.080   &lt;2e-16 ***\nORIGIN_GRID1813      17.2804492  0.0050453  3425.037   &lt;2e-16 ***\nORIGIN_GRID1814      18.1631377  0.0041064  4423.155   &lt;2e-16 ***\nORIGIN_GRID1815      17.9651201  0.0041583  4320.266   &lt;2e-16 ***\nORIGIN_GRID1816      16.5036873  0.0090494  1823.739   &lt;2e-16 ***\nORIGIN_GRID1817      15.8646442  0.0157164  1009.433   &lt;2e-16 ***\nORIGIN_GRID1830      17.6186973  0.0056799  3101.934   &lt;2e-16 ***\nORIGIN_GRID1831      17.9602040  0.0037603  4776.260   &lt;2e-16 ***\nORIGIN_GRID1832      17.3380174  0.0047237  3670.399   &lt;2e-16 ***\nORIGIN_GRID1833      17.5225203  0.0045512  3850.076   &lt;2e-16 ***\nORIGIN_GRID1834      16.1049197  0.0113931  1413.564   &lt;2e-16 ***\nORIGIN_GRID1835      18.1451655  0.0040226  4510.857   &lt;2e-16 ***\nORIGIN_GRID1849      16.7772688  0.0074746  2244.558   &lt;2e-16 ***\nORIGIN_GRID1850      17.6643070  0.0042437  4162.483   &lt;2e-16 ***\nORIGIN_GRID1851      13.4187332  0.0743563   180.465   &lt;2e-16 ***\nORIGIN_GRID1852      17.5868925  0.0039123  4495.277   &lt;2e-16 ***\nORIGIN_GRID1853      17.5752270  0.0050125  3506.285   &lt;2e-16 ***\nORIGIN_GRID1854      17.7041215  0.0045804  3865.171   &lt;2e-16 ***\nORIGIN_GRID1855      16.7291825  0.0135092  1238.351   &lt;2e-16 ***\nORIGIN_GRID1868      17.6440325  0.0048009  3675.188   &lt;2e-16 ***\nORIGIN_GRID1869      16.2194700  0.0081861  1981.347   &lt;2e-16 ***\nORIGIN_GRID1870      16.0113970  0.0204697   782.199   &lt;2e-16 ***\nORIGIN_GRID1871      18.7294617  0.0028764  6511.485   &lt;2e-16 ***\nORIGIN_GRID1872      17.6465405  0.0066639  2648.080   &lt;2e-16 ***\nORIGIN_GRID1873      17.5329008  0.0054026  3245.285   &lt;2e-16 ***\nORIGIN_GRID1887      16.3643721  0.0092157  1775.705   &lt;2e-16 ***\nORIGIN_GRID1888      17.8680187  0.0040625  4398.247   &lt;2e-16 ***\nORIGIN_GRID1889      16.6204653  0.0070575  2355.007   &lt;2e-16 ***\nORIGIN_GRID1890      17.2757736  0.0045177  3824.052   &lt;2e-16 ***\nORIGIN_GRID1891      16.9800832  0.0063631  2668.539   &lt;2e-16 ***\nORIGIN_GRID1892      18.2635789  0.0035324  5170.298   &lt;2e-16 ***\nORIGIN_GRID1893      14.1194840  0.0679111   207.911   &lt;2e-16 ***\nORIGIN_GRID1905      14.2177262  0.1010415   140.712   &lt;2e-16 ***\nORIGIN_GRID1906      14.9018618  0.0186624   798.497   &lt;2e-16 ***\nORIGIN_GRID1907      15.9735544  0.0090768  1759.829   &lt;2e-16 ***\nORIGIN_GRID1908      17.2592634  0.0053239  3241.842   &lt;2e-16 ***\nORIGIN_GRID1909      17.4301434  0.0044432  3922.907   &lt;2e-16 ***\nORIGIN_GRID1910      16.9367630  0.0070796  2392.324   &lt;2e-16 ***\nORIGIN_GRID1911      14.7539051  0.0392061   376.316   &lt;2e-16 ***\nORIGIN_GRID1926      15.9702193  0.0128472  1243.086   &lt;2e-16 ***\nORIGIN_GRID1927      15.3069801  0.0143565  1066.204   &lt;2e-16 ***\nORIGIN_GRID1928      17.7271012  0.0039053  4539.264   &lt;2e-16 ***\nORIGIN_GRID1929      18.0406919  0.0043809  4118.032   &lt;2e-16 ***\nORIGIN_GRID1930      17.1922723  0.0058613  2933.182   &lt;2e-16 ***\nORIGIN_GRID1944      16.6779447  0.0108835  1532.400   &lt;2e-16 ***\nORIGIN_GRID1945      15.0330138  0.0166503   902.868   &lt;2e-16 ***\nORIGIN_GRID1946      17.6645145  0.0044722  3949.812   &lt;2e-16 ***\nORIGIN_GRID1947      18.1269895  0.0035063  5169.838   &lt;2e-16 ***\nORIGIN_GRID1948      18.2618233  0.0037866  4822.791   &lt;2e-16 ***\nORIGIN_GRID1949      17.6925139  0.0054734  3232.466   &lt;2e-16 ***\nORIGIN_GRID1965      16.6808983  0.0068937  2419.730   &lt;2e-16 ***\nORIGIN_GRID1966      16.9012906  0.0076073  2221.719   &lt;2e-16 ***\nORIGIN_GRID1967      17.2298480  0.0051104  3371.556   &lt;2e-16 ***\nORIGIN_GRID1968      17.6460770  0.0051020  3458.629   &lt;2e-16 ***\nORIGIN_GRID1983      16.4223353  0.0099494  1650.582   &lt;2e-16 ***\nORIGIN_GRID1984      16.0655914  0.0106424  1509.580   &lt;2e-16 ***\nORIGIN_GRID1985      17.1356747  0.0058635  2922.436   &lt;2e-16 ***\nORIGIN_GRID1986      17.4576843  0.0050049  3488.108   &lt;2e-16 ***\nORIGIN_GRID1987      16.9632790  0.0198385   855.068   &lt;2e-16 ***\nORIGIN_GRID2002      14.3222582  0.0798353   179.398   &lt;2e-16 ***\nORIGIN_GRID2003      13.7765507  0.0382258   360.400   &lt;2e-16 ***\nORIGIN_GRID2004      15.3113295  0.0240873   635.659   &lt;2e-16 ***\nORIGIN_GRID2005      17.1625816  0.0064447  2663.037   &lt;2e-16 ***\nORIGIN_GRID2006      16.2308783  0.0105155  1543.516   &lt;2e-16 ***\nORIGIN_GRID2021      14.2434911  0.0387063   367.989   &lt;2e-16 ***\nORIGIN_GRID2022      16.2075107  0.0192829   840.511   &lt;2e-16 ***\nORIGIN_GRID2023      16.0466463  0.0127496  1258.604   &lt;2e-16 ***\nORIGIN_GRID2024      15.9925699  0.0124989  1279.519   &lt;2e-16 ***\nORIGIN_GRID2025      13.8379588  0.0534092   259.093   &lt;2e-16 ***\nORIGIN_GRID2042      14.1311676  0.0501617   281.712   &lt;2e-16 ***\nORIGIN_GRID2043      15.6543221  0.0182913   855.835   &lt;2e-16 ***\nORIGIN_GRID2044      15.0454455  0.0174532   862.045   &lt;2e-16 ***\nORIGIN_GRID2045      14.9093791  0.0350591   425.265   &lt;2e-16 ***\nORIGIN_GRID2061      15.2432328  0.0391829   389.028   &lt;2e-16 ***\nORIGIN_GRID2062      16.2057634  0.0148262  1093.051   &lt;2e-16 ***\nORIGIN_GRID2063      15.1700121  0.0189318   801.299   &lt;2e-16 ***\nORIGIN_GRID2064      13.3551440  0.1005224   132.857   &lt;2e-16 ***\nORIGIN_GRID2079      17.4444549  0.0087798  1986.890   &lt;2e-16 ***\nORIGIN_GRID2082      13.6498906  0.0594768   229.500   &lt;2e-16 ***\nORIGIN_GRID2083      15.3976143  0.0181486   848.420   &lt;2e-16 ***\nORIGIN_GRID2098      15.7681611  0.0181192   870.245   &lt;2e-16 ***\nORIGIN_GRID2099      16.7957427  0.0099539  1687.351   &lt;2e-16 ***\nORIGIN_GRID2102      16.4437403  0.0119318  1378.143   &lt;2e-16 ***\nORIGIN_GRID2115      17.5073256  0.0151330  1156.895   &lt;2e-16 ***\nORIGIN_GRID2119      17.0962052  0.0089235  1915.871   &lt;2e-16 ***\nORIGIN_GRID2121      16.0790744  0.0139145  1155.563   &lt;2e-16 ***\nORIGIN_GRID2137      16.7769816  0.0104335  1607.992   &lt;2e-16 ***\nORIGIN_GRID2140      13.5188688  0.0644473   209.766   &lt;2e-16 ***\nORIGIN_GRID2153      17.0949923  0.0170581  1002.166   &lt;2e-16 ***\nORIGIN_GRID2158      16.6174073  0.0143569  1157.449   &lt;2e-16 ***\nORIGIN_GRID2177      16.3649701  0.0141961  1152.777   &lt;2e-16 ***\nORIGIN_GRID2178      14.9364353  0.0331216   450.958   &lt;2e-16 ***\nORIGIN_GRID2196      16.7434484  0.0262522   637.793   &lt;2e-16 ***\nORIGIN_GRID2197      17.3189170  0.0104145  1662.957   &lt;2e-16 ***\nORIGIN_GRID2267      16.6901032  0.0362938   459.861   &lt;2e-16 ***\nlog(DEST_TRAINEXITS)  0.4990032  0.0003932  1269.076   &lt;2e-16 ***\nlog(DEST_BIZ)         0.0840975  0.0001997   421.087   &lt;2e-16 ***\nlog(DEST_FS)          0.2604151  0.0003767   691.263   &lt;2e-16 ***\nlog(DEST_RECS)       -0.2417482  0.0003547  -681.557   &lt;2e-16 ***\nlog(DEST_RETAIL)      0.0605559  0.0002250   269.176   &lt;2e-16 ***\nlog(DEST_SCHOOLS)     0.2063673  0.0006714   307.373   &lt;2e-16 ***\nlog(dist)            -1.5094978  0.0002641 -5714.554   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 333487427  on 64936  degrees of freedom\nResidual deviance:  34706805  on 64115  degrees of freedom\nAIC: 35065034\n\nNumber of Fisher Scoring iterations: 7\n\n\nThe p-values associated with each predictor variable is &lt; 0.05, this suggests that all coefficients are statistically significant in determining weekday morning peak period bus trips.\nFrom the results below, we can also see that the top 2 coefficients with positive relationships are: number of train station exits at destination (0.50) and the number of financial services locations at destination (0.26).\nThe top 2 coefficients with inverse relationships are: distance (-1.51) and number of leisure / recreational places at destination (-0.24).\n\n\nShow the code\ndata.frame(\n  Coefficient = sort(orcSIM$coefficients[815:821]\n                     , decreasing = TRUE\n  )\n)\n\n\n                     Coefficient\nlog(DEST_TRAINEXITS)  0.49900321\nlog(DEST_FS)          0.26041513\nlog(DEST_SCHOOLS)     0.20636728\nlog(DEST_BIZ)         0.08409749\nlog(DEST_RETAIL)      0.06055590\nlog(DEST_RECS)       -0.24174819\nlog(dist)            -1.50949783"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#destination-constrained-sim",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#destination-constrained-sim",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "9.3 Destination-Constrained SIM",
    "text": "9.3 Destination-Constrained SIM\n\nModelCoefficients & p-Values\n\n\n\ndecSIM &lt;- glm(formula = TRIPS ~ \n                DESTIN_GRID +\n                log(ORI_TRAINEXITS) +\n                #log(ORI_BIZ) +\n                #log(ORI_FS) +\n                #log(ORI_RECS) +\n                #log(ORI_RETAIL) +\n                #log(ORI_SCHOOLS) +\n                log(ORI_HDBPOP) +\n                #log(DEST_TRAINEXITS) +\n                #log(DEST_BIZ) +\n                #log(DEST_FS) +\n                #log(DEST_RECS) +\n                #log(DEST_RETAIL) +\n                #log(DEST_SCHOOLS) +\n                #log(DEST_HDBPOP) +\n                log(dist) - 1,\n              family = poisson(link = \"log\"),\n              data = interzonal_flow,\n              na.action = na.exclude) # excludes any NAs in the data\n\n\n\n\n\nShow the code\nsummary(decSIM)\n\n\n\nCall:\nglm(formula = TRIPS ~ DESTIN_GRID + log(ORI_TRAINEXITS) + log(ORI_HDBPOP) + \n    log(dist) - 1, family = poisson(link = \"log\"), data = interzonal_flow, \n    na.action = na.exclude)\n\nCoefficients:\n                      Estimate Std. Error  z value Pr(&gt;|z|)    \nDESTIN_GRID21        1.556e+01  4.597e-02   338.43   &lt;2e-16 ***\nDESTIN_GRID40        1.803e+01  2.114e-02   852.66   &lt;2e-16 ***\nDESTIN_GRID42        1.691e+01  1.986e-02   851.30   &lt;2e-16 ***\nDESTIN_GRID60        1.626e+01  4.348e-02   374.03   &lt;2e-16 ***\nDESTIN_GRID61        1.680e+01  1.305e-02  1287.40   &lt;2e-16 ***\nDESTIN_GRID62        1.694e+01  1.907e-02   888.29   &lt;2e-16 ***\nDESTIN_GRID78        1.553e+01  3.447e-02   450.44   &lt;2e-16 ***\nDESTIN_GRID79        1.417e+01  8.706e-02   162.80   &lt;2e-16 ***\nDESTIN_GRID80        1.600e+01  1.672e-02   956.70   &lt;2e-16 ***\nDESTIN_GRID81        1.660e+01  2.138e-02   776.43   &lt;2e-16 ***\nDESTIN_GRID82        1.295e+01  5.000e-01    25.89   &lt;2e-16 ***\nDESTIN_GRID99        1.622e+01  2.539e-02   638.88   &lt;2e-16 ***\nDESTIN_GRID100       1.386e+01  1.005e-01   137.86   &lt;2e-16 ***\nDESTIN_GRID101       1.710e+01  1.126e-02  1518.50   &lt;2e-16 ***\nDESTIN_GRID102       1.494e+01  3.003e-02   497.42   &lt;2e-16 ***\nDESTIN_GRID116       1.641e+01  2.205e-02   744.22   &lt;2e-16 ***\nDESTIN_GRID117       1.341e+01  1.125e-01   119.17   &lt;2e-16 ***\nDESTIN_GRID118       1.604e+01  2.182e-02   734.95   &lt;2e-16 ***\nDESTIN_GRID119       1.549e+01  2.438e-02   635.36   &lt;2e-16 ***\nDESTIN_GRID120       1.671e+01  1.479e-02  1129.99   &lt;2e-16 ***\nDESTIN_GRID121       1.633e+01  1.236e-02  1321.13   &lt;2e-16 ***\nDESTIN_GRID122       1.653e+01  1.169e-02  1413.82   &lt;2e-16 ***\nDESTIN_GRID136       1.624e+01  2.505e-02   648.45   &lt;2e-16 ***\nDESTIN_GRID137       1.612e+01  2.119e-02   760.65   &lt;2e-16 ***\nDESTIN_GRID138       1.745e+01  1.343e-02  1298.84   &lt;2e-16 ***\nDESTIN_GRID139       1.683e+01  1.261e-02  1334.32   &lt;2e-16 ***\nDESTIN_GRID140       1.502e+01  2.657e-02   565.03   &lt;2e-16 ***\nDESTIN_GRID141       1.574e+01  1.716e-02   917.28   &lt;2e-16 ***\nDESTIN_GRID142       1.640e+01  1.848e-02   887.66   &lt;2e-16 ***\nDESTIN_GRID156       1.485e+01  4.428e-02   335.44   &lt;2e-16 ***\nDESTIN_GRID158       1.656e+01  1.436e-02  1153.17   &lt;2e-16 ***\nDESTIN_GRID159       1.652e+01  1.038e-02  1591.06   &lt;2e-16 ***\nDESTIN_GRID160       1.491e+01  2.683e-02   555.60   &lt;2e-16 ***\nDESTIN_GRID177       1.531e+01  2.978e-02   514.17   &lt;2e-16 ***\nDESTIN_GRID178       1.668e+01  1.009e-02  1653.32   &lt;2e-16 ***\nDESTIN_GRID179       1.381e+01  8.641e-02   159.81   &lt;2e-16 ***\nDESTIN_GRID195       1.640e+01  2.747e-02   597.10   &lt;2e-16 ***\nDESTIN_GRID196       1.583e+01  1.579e-02  1003.05   &lt;2e-16 ***\nDESTIN_GRID197       1.713e+01  8.962e-03  1911.13   &lt;2e-16 ***\nDESTIN_GRID215       1.574e+01  2.848e-02   552.81   &lt;2e-16 ***\nDESTIN_GRID216       1.606e+01  1.472e-02  1091.55   &lt;2e-16 ***\nDESTIN_GRID217       1.597e+01  2.961e-02   539.43   &lt;2e-16 ***\nDESTIN_GRID233       1.670e+01  1.480e-02  1128.41   &lt;2e-16 ***\nDESTIN_GRID234       1.551e+01  1.933e-02   802.14   &lt;2e-16 ***\nDESTIN_GRID235       1.693e+01  1.203e-02  1406.80   &lt;2e-16 ***\nDESTIN_GRID252       1.660e+01  1.529e-02  1085.75   &lt;2e-16 ***\nDESTIN_GRID253       1.627e+01  1.260e-02  1291.12   &lt;2e-16 ***\nDESTIN_GRID254       1.683e+01  1.206e-02  1395.22   &lt;2e-16 ***\nDESTIN_GRID270       1.357e+01  1.325e-01   102.46   &lt;2e-16 ***\nDESTIN_GRID271       1.656e+01  1.617e-02  1024.43   &lt;2e-16 ***\nDESTIN_GRID272       1.582e+01  1.679e-02   942.11   &lt;2e-16 ***\nDESTIN_GRID290       1.672e+01  1.314e-02  1272.60   &lt;2e-16 ***\nDESTIN_GRID291       1.590e+01  2.280e-02   697.47   &lt;2e-16 ***\nDESTIN_GRID292       1.764e+01  1.155e-02  1526.78   &lt;2e-16 ***\nDESTIN_GRID308       1.799e+01  1.087e-02  1655.08   &lt;2e-16 ***\nDESTIN_GRID309       1.674e+01  1.177e-02  1422.25   &lt;2e-16 ***\nDESTIN_GRID310       1.738e+01  1.011e-02  1719.47   &lt;2e-16 ***\nDESTIN_GRID329       1.663e+01  1.329e-02  1250.76   &lt;2e-16 ***\nDESTIN_GRID330       1.820e+01  7.549e-03  2410.66   &lt;2e-16 ***\nDESTIN_GRID347       1.698e+01  8.768e-03  1936.62   &lt;2e-16 ***\nDESTIN_GRID348       1.750e+01  8.179e-03  2139.53   &lt;2e-16 ***\nDESTIN_GRID349       1.707e+01  1.485e-02  1149.23   &lt;2e-16 ***\nDESTIN_GRID366       1.748e+01  1.479e-02  1181.78   &lt;2e-16 ***\nDESTIN_GRID367       1.730e+01  1.016e-02  1703.62   &lt;2e-16 ***\nDESTIN_GRID368       1.714e+01  5.181e-03  3307.17   &lt;2e-16 ***\nDESTIN_GRID369       1.745e+01  8.484e-03  2056.26   &lt;2e-16 ***\nDESTIN_GRID370       1.840e+01  4.664e-03  3945.26   &lt;2e-16 ***\nDESTIN_GRID385       1.580e+01  2.368e-02   667.35   &lt;2e-16 ***\nDESTIN_GRID386       1.681e+01  1.029e-02  1634.64   &lt;2e-16 ***\nDESTIN_GRID387       1.415e+01  2.315e-02   611.12   &lt;2e-16 ***\nDESTIN_GRID388       1.638e+01  1.039e-02  1576.19   &lt;2e-16 ***\nDESTIN_GRID389       1.585e+01  2.271e-02   697.78   &lt;2e-16 ***\nDESTIN_GRID404       1.640e+01  2.208e-02   742.75   &lt;2e-16 ***\nDESTIN_GRID405       1.580e+01  1.719e-02   919.16   &lt;2e-16 ***\nDESTIN_GRID406       1.636e+01  1.153e-02  1418.95   &lt;2e-16 ***\nDESTIN_GRID407       1.636e+01  7.695e-03  2126.19   &lt;2e-16 ***\nDESTIN_GRID408       1.586e+01  1.189e-02  1333.90   &lt;2e-16 ***\nDESTIN_GRID424       1.678e+01  1.014e-02  1655.06   &lt;2e-16 ***\nDESTIN_GRID425       1.588e+01  8.579e-03  1851.45   &lt;2e-16 ***\nDESTIN_GRID426       1.636e+01  6.858e-03  2385.99   &lt;2e-16 ***\nDESTIN_GRID427       1.602e+01  1.543e-02  1038.59   &lt;2e-16 ***\nDESTIN_GRID442       1.602e+01  2.228e-02   718.92   &lt;2e-16 ***\nDESTIN_GRID443       1.433e+01  4.724e-02   303.33   &lt;2e-16 ***\nDESTIN_GRID444       1.659e+01  8.457e-03  1961.40   &lt;2e-16 ***\nDESTIN_GRID445       1.463e+01  1.485e-02   985.20   &lt;2e-16 ***\nDESTIN_GRID447       1.377e+01  4.937e-02   278.86   &lt;2e-16 ***\nDESTIN_GRID448       1.547e+01  2.182e-02   708.83   &lt;2e-16 ***\nDESTIN_GRID461       1.596e+01  1.460e-02  1093.62   &lt;2e-16 ***\nDESTIN_GRID462       1.667e+01  9.808e-03  1700.04   &lt;2e-16 ***\nDESTIN_GRID463       1.621e+01  6.634e-03  2442.88   &lt;2e-16 ***\nDESTIN_GRID464       1.616e+01  6.195e-03  2609.04   &lt;2e-16 ***\nDESTIN_GRID465       1.708e+01  7.324e-03  2332.46   &lt;2e-16 ***\nDESTIN_GRID466       1.645e+01  1.175e-02  1399.41   &lt;2e-16 ***\nDESTIN_GRID467       1.551e+01  2.905e-02   533.86   &lt;2e-16 ***\nDESTIN_GRID480       1.522e+01  2.959e-02   514.58   &lt;2e-16 ***\nDESTIN_GRID481       1.773e+01  5.917e-03  2996.69   &lt;2e-16 ***\nDESTIN_GRID482       1.625e+01  8.833e-03  1839.84   &lt;2e-16 ***\nDESTIN_GRID483       1.771e+01  3.279e-03  5401.32   &lt;2e-16 ***\nDESTIN_GRID484       1.631e+01  6.412e-03  2543.39   &lt;2e-16 ***\nDESTIN_GRID486       1.550e+01  1.763e-02   879.53   &lt;2e-16 ***\nDESTIN_GRID487       1.517e+01  3.353e-02   452.27   &lt;2e-16 ***\nDESTIN_GRID488       1.450e+01  4.242e-02   341.73   &lt;2e-16 ***\nDESTIN_GRID489       1.151e+01  5.774e-01    19.93   &lt;2e-16 ***\nDESTIN_GRID499       1.597e+01  1.771e-02   901.72   &lt;2e-16 ***\nDESTIN_GRID500       1.774e+01  1.046e-02  1696.18   &lt;2e-16 ***\nDESTIN_GRID501       1.578e+01  8.536e-03  1848.48   &lt;2e-16 ***\nDESTIN_GRID502       1.584e+01  6.884e-03  2301.77   &lt;2e-16 ***\nDESTIN_GRID503       1.676e+01  7.543e-03  2222.34   &lt;2e-16 ***\nDESTIN_GRID507       1.427e+01  5.435e-02   262.62   &lt;2e-16 ***\nDESTIN_GRID508       1.650e+01  1.620e-02  1018.84   &lt;2e-16 ***\nDESTIN_GRID509       1.466e+01  6.731e-02   217.85   &lt;2e-16 ***\nDESTIN_GRID518       1.582e+01  3.241e-02   488.30   &lt;2e-16 ***\nDESTIN_GRID519       1.703e+01  1.003e-02  1696.79   &lt;2e-16 ***\nDESTIN_GRID520       1.619e+01  1.624e-02   996.95   &lt;2e-16 ***\nDESTIN_GRID521       1.839e+01  2.602e-03  7066.61   &lt;2e-16 ***\nDESTIN_GRID522       1.613e+01  6.421e-03  2512.62   &lt;2e-16 ***\nDESTIN_GRID524       1.279e+01  1.066e-01   119.94   &lt;2e-16 ***\nDESTIN_GRID528       1.392e+01  6.583e-02   211.42   &lt;2e-16 ***\nDESTIN_GRID529       1.247e+01  2.182e-01    57.14   &lt;2e-16 ***\nDESTIN_GRID530       1.552e+01  3.486e-02   445.23   &lt;2e-16 ***\nDESTIN_GRID537       1.521e+01  2.373e-02   641.18   &lt;2e-16 ***\nDESTIN_GRID538       1.631e+01  1.326e-02  1230.29   &lt;2e-16 ***\nDESTIN_GRID539       1.675e+01  5.887e-03  2845.29   &lt;2e-16 ***\nDESTIN_GRID540       1.624e+01  5.300e-03  3063.53   &lt;2e-16 ***\nDESTIN_GRID541       1.573e+01  1.540e-02  1021.43   &lt;2e-16 ***\nDESTIN_GRID547       1.418e+01  5.107e-02   277.73   &lt;2e-16 ***\nDESTIN_GRID548       1.562e+01  4.448e-02   351.16   &lt;2e-16 ***\nDESTIN_GRID557       1.542e+01  1.457e-02  1058.22   &lt;2e-16 ***\nDESTIN_GRID558       1.644e+01  8.446e-03  1946.48   &lt;2e-16 ***\nDESTIN_GRID559       1.532e+01  9.190e-03  1667.26   &lt;2e-16 ***\nDESTIN_GRID560       1.602e+01  6.297e-03  2544.59   &lt;2e-16 ***\nDESTIN_GRID562       1.643e+01  1.097e-02  1497.89   &lt;2e-16 ***\nDESTIN_GRID577       1.599e+01  1.073e-02  1490.68   &lt;2e-16 ***\nDESTIN_GRID578       1.606e+01  5.817e-03  2761.42   &lt;2e-16 ***\nDESTIN_GRID595       1.689e+01  6.953e-03  2429.10   &lt;2e-16 ***\nDESTIN_GRID596       1.637e+01  6.046e-03  2706.83   &lt;2e-16 ***\nDESTIN_GRID597       1.627e+01  5.773e-03  2818.20   &lt;2e-16 ***\nDESTIN_GRID598       1.682e+01  4.208e-03  3996.84   &lt;2e-16 ***\nDESTIN_GRID600       1.635e+01  1.113e-02  1468.43   &lt;2e-16 ***\nDESTIN_GRID613       1.698e+01  9.241e-03  1837.77   &lt;2e-16 ***\nDESTIN_GRID614       1.513e+01  1.379e-02  1096.84   &lt;2e-16 ***\nDESTIN_GRID615       1.655e+01  5.086e-03  3254.69   &lt;2e-16 ***\nDESTIN_GRID616       1.815e+01  2.773e-03  6545.72   &lt;2e-16 ***\nDESTIN_GRID617       1.474e+01  1.788e-02   824.57   &lt;2e-16 ***\nDESTIN_GRID633       1.638e+01  8.758e-03  1870.65   &lt;2e-16 ***\nDESTIN_GRID634       1.614e+01  6.806e-03  2371.68   &lt;2e-16 ***\nDESTIN_GRID635       1.406e+01  1.907e-02   736.94   &lt;2e-16 ***\nDESTIN_GRID636       1.643e+01  4.906e-03  3349.66   &lt;2e-16 ***\nDESTIN_GRID638       1.648e+01  1.017e-02  1620.17   &lt;2e-16 ***\nDESTIN_GRID654       1.551e+01  9.657e-03  1606.42   &lt;2e-16 ***\nDESTIN_GRID657       1.426e+01  2.680e-02   532.03   &lt;2e-16 ***\nDESTIN_GRID671       1.693e+01  7.017e-03  2413.03   &lt;2e-16 ***\nDESTIN_GRID673       1.368e+01  2.092e-02   653.76   &lt;2e-16 ***\nDESTIN_GRID674       1.648e+01  5.031e-03  3275.11   &lt;2e-16 ***\nDESTIN_GRID689       1.708e+01  8.145e-03  2097.72   &lt;2e-16 ***\nDESTIN_GRID690       1.535e+01  1.261e-02  1217.28   &lt;2e-16 ***\nDESTIN_GRID691       1.378e+01  2.037e-02   676.63   &lt;2e-16 ***\nDESTIN_GRID692       1.699e+01  3.750e-03  4529.49   &lt;2e-16 ***\nDESTIN_GRID693       1.577e+01  9.208e-03  1712.18   &lt;2e-16 ***\nDESTIN_GRID695       1.629e+01  6.809e-03  2392.97   &lt;2e-16 ***\nDESTIN_GRID700       1.502e+01  3.454e-02   434.89   &lt;2e-16 ***\nDESTIN_GRID710       1.427e+01  1.984e-02   718.86   &lt;2e-16 ***\nDESTIN_GRID711       1.598e+01  5.655e-03  2824.73   &lt;2e-16 ***\nDESTIN_GRID712       1.621e+01  5.094e-03  3182.93   &lt;2e-16 ***\nDESTIN_GRID713       1.578e+01  9.494e-03  1662.50   &lt;2e-16 ***\nDESTIN_GRID714       1.480e+01  1.393e-02  1062.35   &lt;2e-16 ***\nDESTIN_GRID715       1.466e+01  1.674e-02   875.83   &lt;2e-16 ***\nDESTIN_GRID727       1.583e+01  1.369e-02  1156.73   &lt;2e-16 ***\nDESTIN_GRID728       1.630e+01  6.714e-03  2428.66   &lt;2e-16 ***\nDESTIN_GRID729       1.752e+01  3.213e-03  5454.75   &lt;2e-16 ***\nDESTIN_GRID730       1.589e+01  5.929e-03  2680.34   &lt;2e-16 ***\nDESTIN_GRID731       1.600e+01  6.966e-03  2296.26   &lt;2e-16 ***\nDESTIN_GRID732       1.435e+01  1.968e-02   728.95   &lt;2e-16 ***\nDESTIN_GRID733       1.615e+01  5.438e-03  2969.43   &lt;2e-16 ***\nDESTIN_GRID734       1.573e+01  8.554e-03  1838.25   &lt;2e-16 ***\nDESTIN_GRID738       1.582e+01  1.928e-02   820.48   &lt;2e-16 ***\nDESTIN_GRID746       1.601e+01  1.334e-02  1200.23   &lt;2e-16 ***\nDESTIN_GRID748       1.601e+01  6.163e-03  2596.83   &lt;2e-16 ***\nDESTIN_GRID749       1.597e+01  6.314e-03  2528.87   &lt;2e-16 ***\nDESTIN_GRID750       1.621e+01  4.961e-03  3267.49   &lt;2e-16 ***\nDESTIN_GRID751       1.555e+01  8.224e-03  1890.84   &lt;2e-16 ***\nDESTIN_GRID752       1.482e+01  1.269e-02  1167.36   &lt;2e-16 ***\nDESTIN_GRID753       1.793e+01  2.857e-03  6276.08   &lt;2e-16 ***\nDESTIN_GRID754       1.796e+01  3.527e-03  5092.21   &lt;2e-16 ***\nDESTIN_GRID757       1.544e+01  1.926e-02   801.63   &lt;2e-16 ***\nDESTIN_GRID764       1.567e+01  1.782e-02   879.44   &lt;2e-16 ***\nDESTIN_GRID766       1.598e+01  7.008e-03  2280.32   &lt;2e-16 ***\nDESTIN_GRID767       1.691e+01  4.634e-03  3648.60   &lt;2e-16 ***\nDESTIN_GRID768       1.585e+01  6.341e-03  2499.33   &lt;2e-16 ***\nDESTIN_GRID769       1.523e+01  8.238e-03  1848.65   &lt;2e-16 ***\nDESTIN_GRID770       1.602e+01  5.809e-03  2757.57   &lt;2e-16 ***\nDESTIN_GRID771       1.575e+01  6.214e-03  2535.22   &lt;2e-16 ***\nDESTIN_GRID772       1.557e+01  8.339e-03  1866.91   &lt;2e-16 ***\nDESTIN_GRID773       1.644e+01  7.969e-03  2062.70   &lt;2e-16 ***\nDESTIN_GRID774       1.618e+01  1.408e-02  1148.55   &lt;2e-16 ***\nDESTIN_GRID775       1.536e+01  1.950e-02   788.08   &lt;2e-16 ***\nDESTIN_GRID776       1.450e+01  3.126e-02   463.78   &lt;2e-16 ***\nDESTIN_GRID784       1.639e+01  9.968e-03  1644.78   &lt;2e-16 ***\nDESTIN_GRID785       1.726e+01  4.683e-03  3686.35   &lt;2e-16 ***\nDESTIN_GRID786       1.696e+01  5.424e-03  3126.32   &lt;2e-16 ***\nDESTIN_GRID787       1.781e+01  5.041e-03  3532.71   &lt;2e-16 ***\nDESTIN_GRID788       1.742e+01  3.169e-03  5496.29   &lt;2e-16 ***\nDESTIN_GRID789       1.764e+01  3.927e-03  4493.25   &lt;2e-16 ***\nDESTIN_GRID790       1.620e+01  5.642e-03  2870.54   &lt;2e-16 ***\nDESTIN_GRID791       1.584e+01  7.897e-03  2005.14   &lt;2e-16 ***\nDESTIN_GRID792       1.463e+01  1.320e-02  1107.59   &lt;2e-16 ***\nDESTIN_GRID793       1.476e+01  2.818e-02   523.74   &lt;2e-16 ***\nDESTIN_GRID794       1.537e+01  1.908e-02   805.19   &lt;2e-16 ***\nDESTIN_GRID795       1.623e+01  1.406e-02  1154.21   &lt;2e-16 ***\nDESTIN_GRID803       1.600e+01  8.279e-03  1932.80   &lt;2e-16 ***\nDESTIN_GRID804       1.468e+01  1.355e-02  1083.41   &lt;2e-16 ***\nDESTIN_GRID805       1.559e+01  1.277e-02  1221.12   &lt;2e-16 ***\nDESTIN_GRID806       1.655e+01  4.962e-03  3334.15   &lt;2e-16 ***\nDESTIN_GRID807       1.510e+01  1.421e-02  1062.60   &lt;2e-16 ***\nDESTIN_GRID809       1.650e+01  4.578e-03  3604.14   &lt;2e-16 ***\nDESTIN_GRID810       1.487e+01  1.167e-02  1274.14   &lt;2e-16 ***\nDESTIN_GRID811       1.594e+01  9.390e-03  1697.87   &lt;2e-16 ***\nDESTIN_GRID812       1.424e+01  2.999e-02   474.80   &lt;2e-16 ***\nDESTIN_GRID813       1.414e+01  2.718e-02   520.30   &lt;2e-16 ***\nDESTIN_GRID814       1.603e+01  1.411e-02  1135.86   &lt;2e-16 ***\nDESTIN_GRID822       1.674e+01  1.043e-02  1605.51   &lt;2e-16 ***\nDESTIN_GRID823       1.587e+01  6.499e-03  2441.89   &lt;2e-16 ***\nDESTIN_GRID824       1.500e+01  1.186e-02  1264.98   &lt;2e-16 ***\nDESTIN_GRID825       1.734e+01  4.078e-03  4251.24   &lt;2e-16 ***\nDESTIN_GRID826       1.569e+01  7.211e-03  2175.81   &lt;2e-16 ***\nDESTIN_GRID829       1.601e+01  6.029e-03  2654.84   &lt;2e-16 ***\nDESTIN_GRID831       1.714e+01  5.726e-03  2993.57   &lt;2e-16 ***\nDESTIN_GRID832       1.370e+01  3.989e-02   343.37   &lt;2e-16 ***\nDESTIN_GRID833       1.535e+01  1.455e-02  1054.33   &lt;2e-16 ***\nDESTIN_GRID840       1.487e+01  1.701e-02   874.28   &lt;2e-16 ***\nDESTIN_GRID841       1.578e+01  6.961e-03  2266.60   &lt;2e-16 ***\nDESTIN_GRID842       1.693e+01  3.943e-03  4293.00   &lt;2e-16 ***\nDESTIN_GRID843       1.565e+01  1.021e-02  1533.01   &lt;2e-16 ***\nDESTIN_GRID844       1.417e+01  2.433e-02   582.44   &lt;2e-16 ***\nDESTIN_GRID845       1.614e+01  7.553e-03  2136.61   &lt;2e-16 ***\nDESTIN_GRID846       1.578e+01  8.191e-03  1926.99   &lt;2e-16 ***\nDESTIN_GRID847       1.793e+01  2.829e-03  6338.85   &lt;2e-16 ***\nDESTIN_GRID850       1.229e+01  1.741e-01    70.57   &lt;2e-16 ***\nDESTIN_GRID851       1.814e+01  3.691e-03  4913.77   &lt;2e-16 ***\nDESTIN_GRID852       1.530e+01  1.863e-02   821.35   &lt;2e-16 ***\nDESTIN_GRID859       1.496e+01  1.447e-02  1033.90   &lt;2e-16 ***\nDESTIN_GRID860       1.697e+01  5.055e-03  3356.98   &lt;2e-16 ***\nDESTIN_GRID861       1.773e+01  2.998e-03  5914.52   &lt;2e-16 ***\nDESTIN_GRID862       1.667e+01  7.754e-03  2150.06   &lt;2e-16 ***\nDESTIN_GRID863       1.603e+01  8.585e-03  1867.80   &lt;2e-16 ***\nDESTIN_GRID864       1.428e+01  1.711e-02   834.90   &lt;2e-16 ***\nDESTIN_GRID865       1.707e+01  4.542e-03  3757.53   &lt;2e-16 ***\nDESTIN_GRID866       1.533e+01  9.181e-03  1669.33   &lt;2e-16 ***\nDESTIN_GRID867       1.580e+01  8.474e-03  1864.74   &lt;2e-16 ***\nDESTIN_GRID869       1.566e+01  2.194e-02   714.02   &lt;2e-16 ***\nDESTIN_GRID871       1.582e+01  1.194e-02  1324.24   &lt;2e-16 ***\nDESTIN_GRID872       1.787e+01  4.863e-03  3675.11   &lt;2e-16 ***\nDESTIN_GRID878       1.627e+01  6.250e-03  2603.21   &lt;2e-16 ***\nDESTIN_GRID879       1.639e+01  4.688e-03  3496.15   &lt;2e-16 ***\nDESTIN_GRID880       1.572e+01  7.032e-03  2235.64   &lt;2e-16 ***\nDESTIN_GRID882       1.541e+01  1.047e-02  1472.36   &lt;2e-16 ***\nDESTIN_GRID883       1.452e+01  1.606e-02   904.03   &lt;2e-16 ***\nDESTIN_GRID884       1.516e+01  1.118e-02  1355.41   &lt;2e-16 ***\nDESTIN_GRID885       1.582e+01  6.461e-03  2448.28   &lt;2e-16 ***\nDESTIN_GRID886       1.558e+01  1.079e-02  1444.44   &lt;2e-16 ***\nDESTIN_GRID890       1.525e+01  1.078e-02  1414.80   &lt;2e-16 ***\nDESTIN_GRID897       1.630e+01  6.848e-03  2379.99   &lt;2e-16 ***\nDESTIN_GRID898       1.649e+01  5.501e-03  2997.45   &lt;2e-16 ***\nDESTIN_GRID899       1.502e+01  9.562e-03  1570.69   &lt;2e-16 ***\nDESTIN_GRID900       1.498e+01  1.122e-02  1335.13   &lt;2e-16 ***\nDESTIN_GRID901       1.583e+01  7.959e-03  1988.63   &lt;2e-16 ***\nDESTIN_GRID902       1.543e+01  1.081e-02  1427.08   &lt;2e-16 ***\nDESTIN_GRID903       1.616e+01  1.304e-02  1239.10   &lt;2e-16 ***\nDESTIN_GRID904       1.643e+01  5.898e-03  2785.65   &lt;2e-16 ***\nDESTIN_GRID905       1.556e+01  9.739e-03  1598.12   &lt;2e-16 ***\nDESTIN_GRID907       1.588e+01  1.547e-02  1026.07   &lt;2e-16 ***\nDESTIN_GRID909       1.776e+01  3.437e-03  5165.69   &lt;2e-16 ***\nDESTIN_GRID910       1.700e+01  4.810e-03  3534.59   &lt;2e-16 ***\nDESTIN_GRID915       1.599e+01  1.193e-02  1340.23   &lt;2e-16 ***\nDESTIN_GRID916       1.719e+01  5.961e-03  2883.30   &lt;2e-16 ***\nDESTIN_GRID917       1.584e+01  7.584e-03  2087.94   &lt;2e-16 ***\nDESTIN_GRID918       1.423e+01  1.579e-02   901.44   &lt;2e-16 ***\nDESTIN_GRID919       1.709e+01  4.422e-03  3863.83   &lt;2e-16 ***\nDESTIN_GRID920       1.738e+01  4.051e-03  4290.82   &lt;2e-16 ***\nDESTIN_GRID922       1.565e+01  1.205e-02  1298.59   &lt;2e-16 ***\nDESTIN_GRID923       1.649e+01  5.855e-03  2816.11   &lt;2e-16 ***\nDESTIN_GRID927       1.522e+01  1.299e-02  1171.27   &lt;2e-16 ***\nDESTIN_GRID928       1.626e+01  6.437e-03  2526.97   &lt;2e-16 ***\nDESTIN_GRID929       1.212e+01  7.219e-02   167.86   &lt;2e-16 ***\nDESTIN_GRID935       1.641e+01  6.811e-03  2409.69   &lt;2e-16 ***\nDESTIN_GRID936       1.678e+01  4.692e-03  3576.59   &lt;2e-16 ***\nDESTIN_GRID937       1.663e+01  4.899e-03  3394.84   &lt;2e-16 ***\nDESTIN_GRID938       1.724e+01  4.106e-03  4198.80   &lt;2e-16 ***\nDESTIN_GRID939       1.610e+01  6.185e-03  2602.60   &lt;2e-16 ***\nDESTIN_GRID945       1.651e+01  1.084e-02  1523.17   &lt;2e-16 ***\nDESTIN_GRID947       1.621e+01  5.874e-03  2759.25   &lt;2e-16 ***\nDESTIN_GRID948       1.659e+01  5.751e-03  2884.10   &lt;2e-16 ***\nDESTIN_GRID953       1.703e+01  4.928e-03  3455.29   &lt;2e-16 ***\nDESTIN_GRID954       1.664e+01  5.093e-03  3266.43   &lt;2e-16 ***\nDESTIN_GRID955       1.561e+01  8.062e-03  1936.60   &lt;2e-16 ***\nDESTIN_GRID956       1.505e+01  1.097e-02  1372.21   &lt;2e-16 ***\nDESTIN_GRID964       1.343e+01  8.706e-02   154.21   &lt;2e-16 ***\nDESTIN_GRID966       1.724e+01  4.054e-03  4253.30   &lt;2e-16 ***\nDESTIN_GRID967       1.238e+01  7.764e-02   159.44   &lt;2e-16 ***\nDESTIN_GRID972       1.494e+01  1.352e-02  1104.92   &lt;2e-16 ***\nDESTIN_GRID973       1.657e+01  6.124e-03  2705.94   &lt;2e-16 ***\nDESTIN_GRID974       1.577e+01  6.785e-03  2324.40   &lt;2e-16 ***\nDESTIN_GRID975       1.505e+01  1.020e-02  1475.54   &lt;2e-16 ***\nDESTIN_GRID977       1.646e+01  5.987e-03  2749.82   &lt;2e-16 ***\nDESTIN_GRID983       1.493e+01  5.621e-02   265.56   &lt;2e-16 ***\nDESTIN_GRID985       1.634e+01  6.051e-03  2700.51   &lt;2e-16 ***\nDESTIN_GRID986       1.676e+01  5.448e-03  3077.00   &lt;2e-16 ***\nDESTIN_GRID990       1.306e+01  4.816e-02   271.17   &lt;2e-16 ***\nDESTIN_GRID991       1.614e+01  1.333e-02  1210.63   &lt;2e-16 ***\nDESTIN_GRID992       1.534e+01  1.472e-02  1042.53   &lt;2e-16 ***\nDESTIN_GRID993       1.663e+01  4.388e-03  3789.83   &lt;2e-16 ***\nDESTIN_GRID994       1.422e+01  2.159e-02   658.71   &lt;2e-16 ***\nDESTIN_GRID995       1.580e+01  7.785e-03  2028.80   &lt;2e-16 ***\nDESTIN_GRID1001      1.748e+01  8.720e-03  2004.92   &lt;2e-16 ***\nDESTIN_GRID1002      1.312e+01  8.485e-02   154.61   &lt;2e-16 ***\nDESTIN_GRID1003      1.633e+01  7.369e-03  2216.21   &lt;2e-16 ***\nDESTIN_GRID1004      1.848e+01  2.528e-03  7310.62   &lt;2e-16 ***\nDESTIN_GRID1005      1.369e+01  3.621e-02   378.21   &lt;2e-16 ***\nDESTIN_GRID1010      1.583e+01  8.661e-03  1827.15   &lt;2e-16 ***\nDESTIN_GRID1011      1.614e+01  6.957e-03  2320.15   &lt;2e-16 ***\nDESTIN_GRID1012      1.429e+01  1.759e-02   812.58   &lt;2e-16 ***\nDESTIN_GRID1013      1.496e+01  1.025e-02  1459.69   &lt;2e-16 ***\nDESTIN_GRID1014      1.482e+01  1.663e-02   891.15   &lt;2e-16 ***\nDESTIN_GRID1023      1.580e+01  7.735e-03  2043.03   &lt;2e-16 ***\nDESTIN_GRID1024      1.645e+01  5.577e-03  2950.30   &lt;2e-16 ***\nDESTIN_GRID1025      1.738e+01  6.683e-03  2600.06   &lt;2e-16 ***\nDESTIN_GRID1028      1.706e+01  4.894e-03  3486.29   &lt;2e-16 ***\nDESTIN_GRID1030      1.461e+01  1.661e-02   879.77   &lt;2e-16 ***\nDESTIN_GRID1031      1.555e+01  6.964e-03  2232.38   &lt;2e-16 ***\nDESTIN_GRID1033      1.579e+01  7.710e-03  2048.24   &lt;2e-16 ***\nDESTIN_GRID1040      1.500e+01  2.921e-02   513.56   &lt;2e-16 ***\nDESTIN_GRID1041      1.559e+01  1.313e-02  1187.48   &lt;2e-16 ***\nDESTIN_GRID1042      1.578e+01  6.640e-03  2377.07   &lt;2e-16 ***\nDESTIN_GRID1043      1.635e+01  6.484e-03  2520.94   &lt;2e-16 ***\nDESTIN_GRID1048      1.495e+01  1.043e-02  1432.97   &lt;2e-16 ***\nDESTIN_GRID1049      1.510e+01  8.820e-03  1712.13   &lt;2e-16 ***\nDESTIN_GRID1050      1.663e+01  4.345e-03  3827.97   &lt;2e-16 ***\nDESTIN_GRID1061      1.638e+01  5.806e-03  2821.30   &lt;2e-16 ***\nDESTIN_GRID1062      1.777e+01  3.123e-03  5690.02   &lt;2e-16 ***\nDESTIN_GRID1063      1.708e+01  5.218e-03  3273.77   &lt;2e-16 ***\nDESTIN_GRID1064      1.446e+01  4.143e-02   349.00   &lt;2e-16 ***\nDESTIN_GRID1066      1.719e+01  3.877e-03  4433.96   &lt;2e-16 ***\nDESTIN_GRID1067      1.613e+01  5.283e-03  3053.07   &lt;2e-16 ***\nDESTIN_GRID1068      1.613e+01  5.020e-03  3213.63   &lt;2e-16 ***\nDESTIN_GRID1069      1.507e+01  8.975e-03  1678.81   &lt;2e-16 ***\nDESTIN_GRID1071      1.694e+01  4.983e-03  3399.24   &lt;2e-16 ***\nDESTIN_GRID1078      1.513e+01  2.868e-02   527.54   &lt;2e-16 ***\nDESTIN_GRID1080      1.668e+01  5.327e-03  3132.24   &lt;2e-16 ***\nDESTIN_GRID1081      1.662e+01  5.378e-03  3089.60   &lt;2e-16 ***\nDESTIN_GRID1082      1.693e+01  6.151e-03  2751.80   &lt;2e-16 ***\nDESTIN_GRID1086      1.583e+01  7.016e-03  2256.00   &lt;2e-16 ***\nDESTIN_GRID1087      1.556e+01  7.318e-03  2126.43   &lt;2e-16 ***\nDESTIN_GRID1089      1.557e+01  7.973e-03  1952.84   &lt;2e-16 ***\nDESTIN_GRID1090      1.560e+01  8.793e-03  1774.39   &lt;2e-16 ***\nDESTIN_GRID1097      1.139e+01  2.774e-01    41.05   &lt;2e-16 ***\nDESTIN_GRID1100      1.549e+01  8.453e-03  1832.49   &lt;2e-16 ***\nDESTIN_GRID1101      1.606e+01  1.090e-02  1473.75   &lt;2e-16 ***\nDESTIN_GRID1102      1.657e+01  1.027e-02  1613.15   &lt;2e-16 ***\nDESTIN_GRID1104      1.602e+01  6.139e-03  2610.07   &lt;2e-16 ***\nDESTIN_GRID1105      1.650e+01  4.412e-03  3739.60   &lt;2e-16 ***\nDESTIN_GRID1106      1.538e+01  1.233e-02  1247.86   &lt;2e-16 ***\nDESTIN_GRID1107      1.505e+01  1.107e-02  1359.71   &lt;2e-16 ***\nDESTIN_GRID1108      1.572e+01  7.912e-03  1987.26   &lt;2e-16 ***\nDESTIN_GRID1115      1.412e+01  5.720e-02   246.76   &lt;2e-16 ***\nDESTIN_GRID1116      1.574e+01  2.443e-02   644.37   &lt;2e-16 ***\nDESTIN_GRID1119      1.631e+01  5.920e-03  2755.24   &lt;2e-16 ***\nDESTIN_GRID1120      1.615e+01  8.210e-03  1967.56   &lt;2e-16 ***\nDESTIN_GRID1123      1.486e+01  1.157e-02  1284.11   &lt;2e-16 ***\nDESTIN_GRID1124      1.510e+01  8.939e-03  1689.61   &lt;2e-16 ***\nDESTIN_GRID1125      1.618e+01  5.242e-03  3087.43   &lt;2e-16 ***\nDESTIN_GRID1128      1.544e+01  8.510e-03  1814.85   &lt;2e-16 ***\nDESTIN_GRID1138      1.559e+01  8.507e-03  1832.97   &lt;2e-16 ***\nDESTIN_GRID1139      1.667e+01  6.177e-03  2697.74   &lt;2e-16 ***\nDESTIN_GRID1140      1.740e+01  5.374e-03  3237.74   &lt;2e-16 ***\nDESTIN_GRID1142      1.465e+01  1.253e-02  1168.72   &lt;2e-16 ***\nDESTIN_GRID1143      1.675e+01  3.845e-03  4354.82   &lt;2e-16 ***\nDESTIN_GRID1144      1.582e+01  7.433e-03  2127.94   &lt;2e-16 ***\nDESTIN_GRID1145      1.593e+01  7.782e-03  2046.85   &lt;2e-16 ***\nDESTIN_GRID1146      1.616e+01  6.847e-03  2360.39   &lt;2e-16 ***\nDESTIN_GRID1147      1.475e+01  1.609e-02   916.52   &lt;2e-16 ***\nDESTIN_GRID1152      1.201e+01  1.111e-01   108.03   &lt;2e-16 ***\nDESTIN_GRID1153      1.655e+01  7.231e-03  2289.08   &lt;2e-16 ***\nDESTIN_GRID1157      1.676e+01  4.537e-03  3694.26   &lt;2e-16 ***\nDESTIN_GRID1158      1.641e+01  6.201e-03  2646.42   &lt;2e-16 ***\nDESTIN_GRID1161      1.723e+01  3.780e-03  4559.18   &lt;2e-16 ***\nDESTIN_GRID1162      1.675e+01  4.073e-03  4112.95   &lt;2e-16 ***\nDESTIN_GRID1163      1.637e+01  4.695e-03  3486.68   &lt;2e-16 ***\nDESTIN_GRID1164      1.544e+01  9.722e-03  1587.73   &lt;2e-16 ***\nDESTIN_GRID1167      1.333e+01  3.738e-02   356.61   &lt;2e-16 ***\nDESTIN_GRID1171      1.232e+01  7.436e-02   165.69   &lt;2e-16 ***\nDESTIN_GRID1172      1.629e+01  8.607e-03  1892.95   &lt;2e-16 ***\nDESTIN_GRID1173      1.431e+01  2.225e-02   643.42   &lt;2e-16 ***\nDESTIN_GRID1176      1.591e+01  6.972e-03  2282.00   &lt;2e-16 ***\nDESTIN_GRID1177      1.584e+01  8.805e-03  1798.87   &lt;2e-16 ***\nDESTIN_GRID1180      1.604e+01  5.997e-03  2674.87   &lt;2e-16 ***\nDESTIN_GRID1181      1.624e+01  4.531e-03  3584.85   &lt;2e-16 ***\nDESTIN_GRID1183      1.499e+01  1.923e-02   779.72   &lt;2e-16 ***\nDESTIN_GRID1184      1.640e+01  5.628e-03  2913.92   &lt;2e-16 ***\nDESTIN_GRID1186      1.125e+01  1.890e-01    59.55   &lt;2e-16 ***\nDESTIN_GRID1192      1.469e+01  1.585e-02   927.20   &lt;2e-16 ***\nDESTIN_GRID1193      1.468e+01  1.315e-02  1116.18   &lt;2e-16 ***\nDESTIN_GRID1194      1.439e+01  1.578e-02   912.03   &lt;2e-16 ***\nDESTIN_GRID1195      1.734e+01  3.691e-03  4699.13   &lt;2e-16 ***\nDESTIN_GRID1196      1.511e+01  1.346e-02  1122.11   &lt;2e-16 ***\nDESTIN_GRID1198      1.628e+01  1.557e-02  1046.12   &lt;2e-16 ***\nDESTIN_GRID1199      1.437e+01  1.459e-02   985.22   &lt;2e-16 ***\nDESTIN_GRID1200      1.581e+01  5.777e-03  2736.46   &lt;2e-16 ***\nDESTIN_GRID1201      1.601e+01  5.395e-03  2967.23   &lt;2e-16 ***\nDESTIN_GRID1202      1.592e+01  6.571e-03  2422.18   &lt;2e-16 ***\nDESTIN_GRID1203      1.599e+01  8.661e-03  1846.60   &lt;2e-16 ***\nDESTIN_GRID1204      1.722e+01  5.386e-03  3197.19   &lt;2e-16 ***\nDESTIN_GRID1205      1.089e+01  2.582e-01    42.16   &lt;2e-16 ***\nDESTIN_GRID1207      1.439e+01  1.624e-02   886.02   &lt;2e-16 ***\nDESTIN_GRID1208      1.502e+01  1.311e-02  1145.10   &lt;2e-16 ***\nDESTIN_GRID1209      1.701e+01  5.699e-03  2984.57   &lt;2e-16 ***\nDESTIN_GRID1210      1.331e+01  5.586e-02   238.29   &lt;2e-16 ***\nDESTIN_GRID1211      1.356e+01  2.938e-02   461.56   &lt;2e-16 ***\nDESTIN_GRID1212      1.346e+01  2.663e-02   505.58   &lt;2e-16 ***\nDESTIN_GRID1213      1.705e+01  4.014e-03  4247.98   &lt;2e-16 ***\nDESTIN_GRID1214      1.558e+01  9.180e-03  1697.40   &lt;2e-16 ***\nDESTIN_GRID1215      1.193e+01  9.625e-02   124.00   &lt;2e-16 ***\nDESTIN_GRID1218      1.561e+01  7.940e-03  1966.41   &lt;2e-16 ***\nDESTIN_GRID1219      1.682e+01  3.882e-03  4334.03   &lt;2e-16 ***\nDESTIN_GRID1220      1.556e+01  6.808e-03  2285.18   &lt;2e-16 ***\nDESTIN_GRID1221      1.666e+01  5.446e-03  3058.29   &lt;2e-16 ***\nDESTIN_GRID1222      1.555e+01  1.257e-02  1237.82   &lt;2e-16 ***\nDESTIN_GRID1225      1.578e+01  6.897e-03  2288.00   &lt;2e-16 ***\nDESTIN_GRID1226      1.475e+01  1.200e-02  1228.88   &lt;2e-16 ***\nDESTIN_GRID1227      1.508e+01  1.111e-02  1356.97   &lt;2e-16 ***\nDESTIN_GRID1229      1.463e+01  1.865e-02   784.43   &lt;2e-16 ***\nDESTIN_GRID1230      1.700e+01  4.075e-03  4171.41   &lt;2e-16 ***\nDESTIN_GRID1231      1.583e+01  6.681e-03  2369.18   &lt;2e-16 ***\nDESTIN_GRID1232      1.559e+01  7.431e-03  2097.64   &lt;2e-16 ***\nDESTIN_GRID1233      1.574e+01  8.756e-03  1798.00   &lt;2e-16 ***\nDESTIN_GRID1234      1.429e+01  2.904e-02   492.17   &lt;2e-16 ***\nDESTIN_GRID1238      1.464e+01  1.006e-02  1455.98   &lt;2e-16 ***\nDESTIN_GRID1239      1.499e+01  8.672e-03  1728.17   &lt;2e-16 ***\nDESTIN_GRID1240      1.687e+01  3.996e-03  4221.36   &lt;2e-16 ***\nDESTIN_GRID1241      1.593e+01  7.749e-03  2055.56   &lt;2e-16 ***\nDESTIN_GRID1242      1.598e+01  7.145e-03  2236.91   &lt;2e-16 ***\nDESTIN_GRID1243      1.309e+01  3.262e-02   401.36   &lt;2e-16 ***\nDESTIN_GRID1244      1.417e+01  1.437e-02   986.15   &lt;2e-16 ***\nDESTIN_GRID1245      1.607e+01  7.378e-03  2177.46   &lt;2e-16 ***\nDESTIN_GRID1246      1.445e+01  1.687e-02   856.50   &lt;2e-16 ***\nDESTIN_GRID1249      1.265e+01  6.328e-02   199.86   &lt;2e-16 ***\nDESTIN_GRID1250      1.768e+01  3.053e-03  5790.15   &lt;2e-16 ***\nDESTIN_GRID1251      1.806e+01  2.744e-03  6581.71   &lt;2e-16 ***\nDESTIN_GRID1252      1.720e+01  4.579e-03  3755.88   &lt;2e-16 ***\nDESTIN_GRID1253      1.446e+01  1.942e-02   744.42   &lt;2e-16 ***\nDESTIN_GRID1256      1.548e+01  6.837e-03  2264.57   &lt;2e-16 ***\nDESTIN_GRID1257      1.512e+01  7.545e-03  2003.90   &lt;2e-16 ***\nDESTIN_GRID1258      1.554e+01  6.931e-03  2241.80   &lt;2e-16 ***\nDESTIN_GRID1259      1.670e+01  5.130e-03  3254.35   &lt;2e-16 ***\nDESTIN_GRID1260      1.660e+01  1.242e-02  1337.13   &lt;2e-16 ***\nDESTIN_GRID1261      1.527e+01  8.634e-03  1768.89   &lt;2e-16 ***\nDESTIN_GRID1262      1.561e+01  6.353e-03  2457.27   &lt;2e-16 ***\nDESTIN_GRID1263      1.538e+01  7.139e-03  2154.35   &lt;2e-16 ***\nDESTIN_GRID1264      1.620e+01  5.396e-03  3001.75   &lt;2e-16 ***\nDESTIN_GRID1265      1.543e+01  7.686e-03  2008.08   &lt;2e-16 ***\nDESTIN_GRID1266      1.501e+01  1.392e-02  1078.18   &lt;2e-16 ***\nDESTIN_GRID1268      1.510e+01  1.114e-02  1355.63   &lt;2e-16 ***\nDESTIN_GRID1269      1.695e+01  3.623e-03  4678.63   &lt;2e-16 ***\nDESTIN_GRID1270      1.619e+01  5.539e-03  2922.71   &lt;2e-16 ***\nDESTIN_GRID1272      1.570e+01  2.184e-02   718.84   &lt;2e-16 ***\nDESTIN_GRID1276      1.601e+01  5.086e-03  3148.74   &lt;2e-16 ***\nDESTIN_GRID1277      1.540e+01  7.340e-03  2097.88   &lt;2e-16 ***\nDESTIN_GRID1278      1.657e+01  4.423e-03  3745.56   &lt;2e-16 ***\nDESTIN_GRID1279      1.627e+01  5.606e-03  2901.52   &lt;2e-16 ***\nDESTIN_GRID1280      1.578e+01  6.012e-03  2624.56   &lt;2e-16 ***\nDESTIN_GRID1281      1.610e+01  5.555e-03  2897.83   &lt;2e-16 ***\nDESTIN_GRID1282      1.568e+01  6.859e-03  2285.84   &lt;2e-16 ***\nDESTIN_GRID1283      1.572e+01  5.833e-03  2694.23   &lt;2e-16 ***\nDESTIN_GRID1284      1.597e+01  5.759e-03  2772.95   &lt;2e-16 ***\nDESTIN_GRID1285      1.555e+01  7.830e-03  1985.67   &lt;2e-16 ***\nDESTIN_GRID1288      1.601e+01  6.243e-03  2564.09   &lt;2e-16 ***\nDESTIN_GRID1289      1.649e+01  5.233e-03  3151.55   &lt;2e-16 ***\nDESTIN_GRID1294      1.617e+01  5.332e-03  3032.19   &lt;2e-16 ***\nDESTIN_GRID1295      1.662e+01  3.950e-03  4208.36   &lt;2e-16 ***\nDESTIN_GRID1296      1.636e+01  4.415e-03  3706.14   &lt;2e-16 ***\nDESTIN_GRID1297      1.570e+01  9.269e-03  1694.06   &lt;2e-16 ***\nDESTIN_GRID1298      1.665e+01  4.324e-03  3850.18   &lt;2e-16 ***\nDESTIN_GRID1299      1.619e+01  4.924e-03  3288.14   &lt;2e-16 ***\nDESTIN_GRID1300      1.478e+01  1.068e-02  1384.03   &lt;2e-16 ***\nDESTIN_GRID1301      1.558e+01  6.495e-03  2399.23   &lt;2e-16 ***\nDESTIN_GRID1302      1.623e+01  4.473e-03  3627.09   &lt;2e-16 ***\nDESTIN_GRID1303      1.700e+01  3.755e-03  4526.76   &lt;2e-16 ***\nDESTIN_GRID1304      1.650e+01  6.240e-03  2645.05   &lt;2e-16 ***\nDESTIN_GRID1306      1.437e+01  1.651e-02   870.42   &lt;2e-16 ***\nDESTIN_GRID1307      1.625e+01  5.898e-03  2754.67   &lt;2e-16 ***\nDESTIN_GRID1308      1.704e+01  5.945e-03  2865.42   &lt;2e-16 ***\nDESTIN_GRID1314      1.693e+01  3.614e-03  4683.70   &lt;2e-16 ***\nDESTIN_GRID1315      1.606e+01  5.201e-03  3087.12   &lt;2e-16 ***\nDESTIN_GRID1316      1.492e+01  1.128e-02  1322.14   &lt;2e-16 ***\nDESTIN_GRID1317      1.569e+01  7.078e-03  2216.28   &lt;2e-16 ***\nDESTIN_GRID1318      1.599e+01  5.860e-03  2727.83   &lt;2e-16 ***\nDESTIN_GRID1319      1.670e+01  4.612e-03  3620.74   &lt;2e-16 ***\nDESTIN_GRID1320      1.750e+01  2.963e-03  5907.62   &lt;2e-16 ***\nDESTIN_GRID1321      1.499e+01  8.181e-03  1831.83   &lt;2e-16 ***\nDESTIN_GRID1322      1.627e+01  4.550e-03  3575.19   &lt;2e-16 ***\nDESTIN_GRID1323      1.610e+01  6.615e-03  2433.48   &lt;2e-16 ***\nDESTIN_GRID1326      1.586e+01  7.114e-03  2229.93   &lt;2e-16 ***\nDESTIN_GRID1327      1.549e+01  1.048e-02  1478.85   &lt;2e-16 ***\nDESTIN_GRID1332      1.579e+01  7.230e-03  2183.89   &lt;2e-16 ***\nDESTIN_GRID1333      1.669e+01  3.996e-03  4175.46   &lt;2e-16 ***\nDESTIN_GRID1334      1.668e+01  3.787e-03  4405.49   &lt;2e-16 ***\nDESTIN_GRID1335      1.642e+01  4.382e-03  3745.94   &lt;2e-16 ***\nDESTIN_GRID1336      1.549e+01  7.158e-03  2163.91   &lt;2e-16 ***\nDESTIN_GRID1337      1.745e+01  2.881e-03  6055.93   &lt;2e-16 ***\nDESTIN_GRID1338      1.587e+01  5.424e-03  2925.13   &lt;2e-16 ***\nDESTIN_GRID1339      1.510e+01  7.544e-03  2000.82   &lt;2e-16 ***\nDESTIN_GRID1340      1.746e+01  2.949e-03  5921.49   &lt;2e-16 ***\nDESTIN_GRID1341      1.622e+01  5.985e-03  2710.90   &lt;2e-16 ***\nDESTIN_GRID1342      1.710e+01  5.015e-03  3410.29   &lt;2e-16 ***\nDESTIN_GRID1345      1.500e+01  1.245e-02  1204.90   &lt;2e-16 ***\nDESTIN_GRID1352      1.659e+01  4.562e-03  3636.29   &lt;2e-16 ***\nDESTIN_GRID1353      1.563e+01  6.059e-03  2578.94   &lt;2e-16 ***\nDESTIN_GRID1354      1.663e+01  3.803e-03  4373.01   &lt;2e-16 ***\nDESTIN_GRID1355      1.538e+01  7.320e-03  2100.82   &lt;2e-16 ***\nDESTIN_GRID1356      1.572e+01  6.225e-03  2525.63   &lt;2e-16 ***\nDESTIN_GRID1357      1.614e+01  4.693e-03  3439.38   &lt;2e-16 ***\nDESTIN_GRID1358      1.555e+01  8.419e-03  1847.29   &lt;2e-16 ***\nDESTIN_GRID1359      1.650e+01  4.183e-03  3944.24   &lt;2e-16 ***\nDESTIN_GRID1360      1.649e+01  4.505e-03  3659.89   &lt;2e-16 ***\nDESTIN_GRID1364      1.303e+01  6.302e-02   206.80   &lt;2e-16 ***\nDESTIN_GRID1371      1.529e+01  1.379e-02  1109.06   &lt;2e-16 ***\nDESTIN_GRID1372      1.674e+01  3.790e-03  4417.51   &lt;2e-16 ***\nDESTIN_GRID1373      1.571e+01  6.507e-03  2414.63   &lt;2e-16 ***\nDESTIN_GRID1374      1.517e+01  7.863e-03  1928.59   &lt;2e-16 ***\nDESTIN_GRID1375      1.583e+01  7.969e-03  1986.57   &lt;2e-16 ***\nDESTIN_GRID1376      1.543e+01  6.910e-03  2232.99   &lt;2e-16 ***\nDESTIN_GRID1377      1.538e+01  7.505e-03  2049.32   &lt;2e-16 ***\nDESTIN_GRID1378      1.626e+01  4.981e-03  3264.06   &lt;2e-16 ***\nDESTIN_GRID1379      1.749e+01  4.490e-03  3894.66   &lt;2e-16 ***\nDESTIN_GRID1380      1.528e+01  1.156e-02  1321.37   &lt;2e-16 ***\nDESTIN_GRID1383      1.375e+01  2.857e-02   481.47   &lt;2e-16 ***\nDESTIN_GRID1389      1.404e+01  5.035e-02   278.81   &lt;2e-16 ***\nDESTIN_GRID1390      1.431e+01  2.166e-02   660.61   &lt;2e-16 ***\nDESTIN_GRID1391      1.615e+01  5.981e-03  2699.45   &lt;2e-16 ***\nDESTIN_GRID1392      1.594e+01  5.242e-03  3040.04   &lt;2e-16 ***\nDESTIN_GRID1393      1.601e+01  4.693e-03  3412.65   &lt;2e-16 ***\nDESTIN_GRID1394      1.552e+01  6.173e-03  2514.44   &lt;2e-16 ***\nDESTIN_GRID1395      1.655e+01  6.928e-03  2388.27   &lt;2e-16 ***\nDESTIN_GRID1396      1.537e+01  9.552e-03  1609.31   &lt;2e-16 ***\nDESTIN_GRID1397      1.537e+01  2.553e-02   601.89   &lt;2e-16 ***\nDESTIN_GRID1398      1.562e+01  8.962e-03  1742.39   &lt;2e-16 ***\nDESTIN_GRID1401      1.532e+01  1.483e-02  1033.46   &lt;2e-16 ***\nDESTIN_GRID1408      1.355e+01  5.896e-02   229.85   &lt;2e-16 ***\nDESTIN_GRID1409      1.484e+01  1.577e-02   941.08   &lt;2e-16 ***\nDESTIN_GRID1410      1.643e+01  1.240e-02  1324.73   &lt;2e-16 ***\nDESTIN_GRID1411      1.650e+01  4.099e-03  4024.67   &lt;2e-16 ***\nDESTIN_GRID1412      1.654e+01  3.984e-03  4152.13   &lt;2e-16 ***\nDESTIN_GRID1413      1.599e+01  6.462e-03  2474.02   &lt;2e-16 ***\nDESTIN_GRID1414      1.376e+01  1.671e-02   823.30   &lt;2e-16 ***\nDESTIN_GRID1415      1.491e+01  9.144e-03  1630.84   &lt;2e-16 ***\nDESTIN_GRID1416      1.535e+01  8.192e-03  1874.16   &lt;2e-16 ***\nDESTIN_GRID1417      1.611e+01  6.277e-03  2566.63   &lt;2e-16 ***\nDESTIN_GRID1418      1.445e+01  1.635e-02   883.87   &lt;2e-16 ***\nDESTIN_GRID1419      1.501e+01  1.731e-02   867.52   &lt;2e-16 ***\nDESTIN_GRID1420      1.571e+01  1.208e-02  1301.36   &lt;2e-16 ***\nDESTIN_GRID1428      1.279e+01  9.903e-02   129.18   &lt;2e-16 ***\nDESTIN_GRID1430      1.366e+01  2.367e-02   577.24   &lt;2e-16 ***\nDESTIN_GRID1431      1.621e+01  4.811e-03  3369.35   &lt;2e-16 ***\nDESTIN_GRID1432      1.640e+01  4.121e-03  3979.78   &lt;2e-16 ***\nDESTIN_GRID1433      1.495e+01  1.988e-02   751.91   &lt;2e-16 ***\nDESTIN_GRID1434      1.480e+01  1.201e-02  1232.03   &lt;2e-16 ***\nDESTIN_GRID1435      1.563e+01  7.540e-03  2073.58   &lt;2e-16 ***\nDESTIN_GRID1436      1.639e+01  5.222e-03  3138.56   &lt;2e-16 ***\nDESTIN_GRID1439      1.461e+01  2.162e-02   676.01   &lt;2e-16 ***\nDESTIN_GRID1440      1.572e+01  1.317e-02  1193.24   &lt;2e-16 ***\nDESTIN_GRID1448      1.566e+01  1.406e-02  1113.91   &lt;2e-16 ***\nDESTIN_GRID1449      1.526e+01  7.175e-03  2127.12   &lt;2e-16 ***\nDESTIN_GRID1450      1.575e+01  6.601e-03  2386.06   &lt;2e-16 ***\nDESTIN_GRID1451      1.680e+01  4.129e-03  4069.02   &lt;2e-16 ***\nDESTIN_GRID1452      1.465e+01  1.026e-02  1427.76   &lt;2e-16 ***\nDESTIN_GRID1453      1.578e+01  5.783e-03  2728.31   &lt;2e-16 ***\nDESTIN_GRID1454      1.536e+01  1.320e-02  1163.53   &lt;2e-16 ***\nDESTIN_GRID1455      1.663e+01  4.400e-03  3779.97   &lt;2e-16 ***\nDESTIN_GRID1456      1.592e+01  6.260e-03  2543.49   &lt;2e-16 ***\nDESTIN_GRID1457      1.662e+01  5.192e-03  3201.02   &lt;2e-16 ***\nDESTIN_GRID1458      1.474e+01  2.633e-02   559.70   &lt;2e-16 ***\nDESTIN_GRID1468      1.639e+01  1.070e-02  1531.17   &lt;2e-16 ***\nDESTIN_GRID1469      1.627e+01  4.436e-03  3668.21   &lt;2e-16 ***\nDESTIN_GRID1470      1.681e+01  3.965e-03  4239.46   &lt;2e-16 ***\nDESTIN_GRID1471      1.602e+01  5.686e-03  2818.17   &lt;2e-16 ***\nDESTIN_GRID1472      1.789e+01  2.747e-03  6513.33   &lt;2e-16 ***\nDESTIN_GRID1473      1.490e+01  8.815e-03  1689.89   &lt;2e-16 ***\nDESTIN_GRID1474      1.708e+01  3.719e-03  4592.23   &lt;2e-16 ***\nDESTIN_GRID1475      1.437e+01  1.400e-02  1025.87   &lt;2e-16 ***\nDESTIN_GRID1476      1.488e+01  1.130e-02  1316.54   &lt;2e-16 ***\nDESTIN_GRID1477      1.444e+01  1.878e-02   769.10   &lt;2e-16 ***\nDESTIN_GRID1486      1.369e+01  3.170e-02   432.00   &lt;2e-16 ***\nDESTIN_GRID1487      1.584e+01  5.884e-03  2691.21   &lt;2e-16 ***\nDESTIN_GRID1488      1.572e+01  7.988e-03  1968.40   &lt;2e-16 ***\nDESTIN_GRID1489      1.568e+01  6.288e-03  2494.46   &lt;2e-16 ***\nDESTIN_GRID1490      1.601e+01  7.692e-03  2080.93   &lt;2e-16 ***\nDESTIN_GRID1491      1.556e+01  6.114e-03  2545.71   &lt;2e-16 ***\nDESTIN_GRID1492      1.575e+01  5.849e-03  2693.34   &lt;2e-16 ***\nDESTIN_GRID1493      1.650e+01  4.337e-03  3804.60   &lt;2e-16 ***\nDESTIN_GRID1494      1.565e+01  7.375e-03  2121.82   &lt;2e-16 ***\nDESTIN_GRID1506      1.227e+01  1.163e-01   105.53   &lt;2e-16 ***\nDESTIN_GRID1507      1.644e+01  4.223e-03  3894.27   &lt;2e-16 ***\nDESTIN_GRID1508      1.644e+01  4.204e-03  3911.30   &lt;2e-16 ***\nDESTIN_GRID1509      1.523e+01  1.574e-02   967.84   &lt;2e-16 ***\nDESTIN_GRID1510      1.555e+01  6.772e-03  2296.65   &lt;2e-16 ***\nDESTIN_GRID1512      1.630e+01  4.671e-03  3489.46   &lt;2e-16 ***\nDESTIN_GRID1513      1.595e+01  1.040e-02  1534.52   &lt;2e-16 ***\nDESTIN_GRID1514      1.502e+01  1.155e-02  1300.03   &lt;2e-16 ***\nDESTIN_GRID1524      1.613e+01  9.346e-03  1726.31   &lt;2e-16 ***\nDESTIN_GRID1525      1.517e+01  8.673e-03  1749.48   &lt;2e-16 ***\nDESTIN_GRID1526      1.579e+01  5.777e-03  2732.52   &lt;2e-16 ***\nDESTIN_GRID1527      1.626e+01  6.762e-03  2405.28   &lt;2e-16 ***\nDESTIN_GRID1528      1.559e+01  6.758e-03  2306.34   &lt;2e-16 ***\nDESTIN_GRID1529      1.496e+01  9.645e-03  1551.02   &lt;2e-16 ***\nDESTIN_GRID1530      1.458e+01  1.253e-02  1164.44   &lt;2e-16 ***\nDESTIN_GRID1531      1.646e+01  4.531e-03  3633.56   &lt;2e-16 ***\nDESTIN_GRID1532      1.448e+01  1.349e-02  1073.38   &lt;2e-16 ***\nDESTIN_GRID1544      1.578e+01  7.625e-03  2069.05   &lt;2e-16 ***\nDESTIN_GRID1545      1.497e+01  8.064e-03  1856.42   &lt;2e-16 ***\nDESTIN_GRID1546      1.563e+01  6.261e-03  2496.22   &lt;2e-16 ***\nDESTIN_GRID1547      1.639e+01  4.789e-03  3422.01   &lt;2e-16 ***\nDESTIN_GRID1548      1.636e+01  5.187e-03  3153.36   &lt;2e-16 ***\nDESTIN_GRID1549      1.710e+01  3.656e-03  4677.24   &lt;2e-16 ***\nDESTIN_GRID1550      1.630e+01  4.444e-03  3667.14   &lt;2e-16 ***\nDESTIN_GRID1551      1.395e+01  1.513e-02   922.24   &lt;2e-16 ***\nDESTIN_GRID1552      1.539e+01  8.086e-03  1902.63   &lt;2e-16 ***\nDESTIN_GRID1563      1.630e+01  5.460e-03  2984.73   &lt;2e-16 ***\nDESTIN_GRID1564      1.627e+01  4.633e-03  3510.92   &lt;2e-16 ***\nDESTIN_GRID1565      1.648e+01  4.396e-03  3747.66   &lt;2e-16 ***\nDESTIN_GRID1566      1.546e+01  8.694e-03  1778.36   &lt;2e-16 ***\nDESTIN_GRID1567      1.628e+01  5.244e-03  3104.86   &lt;2e-16 ***\nDESTIN_GRID1568      1.615e+01  4.719e-03  3422.19   &lt;2e-16 ***\nDESTIN_GRID1569      1.502e+01  8.029e-03  1871.38   &lt;2e-16 ***\nDESTIN_GRID1570      1.618e+01  4.851e-03  3334.68   &lt;2e-16 ***\nDESTIN_GRID1571      1.543e+01  1.375e-02  1122.47   &lt;2e-16 ***\nDESTIN_GRID1582      1.538e+01  8.771e-03  1754.06   &lt;2e-16 ***\nDESTIN_GRID1583      1.651e+01  4.147e-03  3982.13   &lt;2e-16 ***\nDESTIN_GRID1584      1.634e+01  4.405e-03  3710.46   &lt;2e-16 ***\nDESTIN_GRID1585      1.605e+01  6.238e-03  2572.43   &lt;2e-16 ***\nDESTIN_GRID1587      1.645e+01  4.613e-03  3566.39   &lt;2e-16 ***\nDESTIN_GRID1588      1.752e+01  2.925e-03  5989.99   &lt;2e-16 ***\nDESTIN_GRID1589      1.679e+01  3.662e-03  4586.07   &lt;2e-16 ***\nDESTIN_GRID1590      1.585e+01  5.553e-03  2853.66   &lt;2e-16 ***\nDESTIN_GRID1591      1.420e+01  2.172e-02   653.69   &lt;2e-16 ***\nDESTIN_GRID1601      1.588e+01  6.449e-03  2462.45   &lt;2e-16 ***\nDESTIN_GRID1602      1.568e+01  7.475e-03  2097.33   &lt;2e-16 ***\nDESTIN_GRID1603      1.650e+01  4.998e-03  3301.58   &lt;2e-16 ***\nDESTIN_GRID1604      1.738e+01  6.834e-03  2543.62   &lt;2e-16 ***\nDESTIN_GRID1606      1.553e+01  6.951e-03  2234.32   &lt;2e-16 ***\nDESTIN_GRID1607      1.507e+01  7.913e-03  1903.92   &lt;2e-16 ***\nDESTIN_GRID1608      1.737e+01  2.945e-03  5897.61   &lt;2e-16 ***\nDESTIN_GRID1609      1.555e+01  6.872e-03  2262.43   &lt;2e-16 ***\nDESTIN_GRID1610      1.455e+01  2.068e-02   703.36   &lt;2e-16 ***\nDESTIN_GRID1620      1.666e+01  5.060e-03  3292.30   &lt;2e-16 ***\nDESTIN_GRID1621      1.609e+01  5.861e-03  2745.03   &lt;2e-16 ***\nDESTIN_GRID1622      1.613e+01  6.978e-03  2311.56   &lt;2e-16 ***\nDESTIN_GRID1623      1.624e+01  5.732e-03  2832.90   &lt;2e-16 ***\nDESTIN_GRID1624      1.765e+01  7.266e-03  2429.74   &lt;2e-16 ***\nDESTIN_GRID1625      1.399e+01  2.144e-02   652.43   &lt;2e-16 ***\nDESTIN_GRID1626      1.608e+01  5.480e-03  2934.81   &lt;2e-16 ***\nDESTIN_GRID1627      1.576e+01  5.520e-03  2855.95   &lt;2e-16 ***\nDESTIN_GRID1628      1.602e+01  5.216e-03  3071.31   &lt;2e-16 ***\nDESTIN_GRID1629      1.511e+01  8.993e-03  1679.92   &lt;2e-16 ***\nDESTIN_GRID1630      1.345e+01  5.016e-02   268.10   &lt;2e-16 ***\nDESTIN_GRID1639      1.580e+01  7.484e-03  2110.99   &lt;2e-16 ***\nDESTIN_GRID1640      1.694e+01  3.612e-03  4690.07   &lt;2e-16 ***\nDESTIN_GRID1641      1.710e+01  3.498e-03  4887.06   &lt;2e-16 ***\nDESTIN_GRID1645      1.458e+01  1.180e-02  1235.03   &lt;2e-16 ***\nDESTIN_GRID1646      1.555e+01  6.059e-03  2566.20   &lt;2e-16 ***\nDESTIN_GRID1647      1.733e+01  2.983e-03  5809.98   &lt;2e-16 ***\nDESTIN_GRID1648      1.273e+01  4.104e-02   310.12   &lt;2e-16 ***\nDESTIN_GRID1658      1.710e+01  4.320e-03  3959.85   &lt;2e-16 ***\nDESTIN_GRID1659      1.564e+01  6.924e-03  2259.48   &lt;2e-16 ***\nDESTIN_GRID1660      1.549e+01  6.752e-03  2293.86   &lt;2e-16 ***\nDESTIN_GRID1661      1.567e+01  7.473e-03  2097.06   &lt;2e-16 ***\nDESTIN_GRID1663      1.582e+01  1.373e-02  1152.01   &lt;2e-16 ***\nDESTIN_GRID1665      1.463e+01  1.146e-02  1276.06   &lt;2e-16 ***\nDESTIN_GRID1666      1.715e+01  3.305e-03  5188.52   &lt;2e-16 ***\nDESTIN_GRID1667      1.388e+01  2.219e-02   625.61   &lt;2e-16 ***\nDESTIN_GRID1668      1.526e+01  1.436e-02  1062.92   &lt;2e-16 ***\nDESTIN_GRID1677      1.603e+01  5.907e-03  2714.11   &lt;2e-16 ***\nDESTIN_GRID1678      1.634e+01  5.104e-03  3202.12   &lt;2e-16 ***\nDESTIN_GRID1679      1.655e+01  4.644e-03  3563.02   &lt;2e-16 ***\nDESTIN_GRID1682      1.670e+01  8.510e-03  1962.44   &lt;2e-16 ***\nDESTIN_GRID1684      1.520e+01  1.785e-02   851.33   &lt;2e-16 ***\nDESTIN_GRID1685      1.577e+01  6.277e-03  2511.79   &lt;2e-16 ***\nDESTIN_GRID1696      1.581e+01  9.303e-03  1699.81   &lt;2e-16 ***\nDESTIN_GRID1697      1.420e+01  1.965e-02   722.23   &lt;2e-16 ***\nDESTIN_GRID1698      1.546e+01  2.157e-02   716.43   &lt;2e-16 ***\nDESTIN_GRID1699      1.632e+01  4.987e-03  3272.31   &lt;2e-16 ***\nDESTIN_GRID1702      1.578e+01  1.396e-02  1130.25   &lt;2e-16 ***\nDESTIN_GRID1704      1.584e+01  6.307e-03  2511.87   &lt;2e-16 ***\nDESTIN_GRID1705      1.456e+01  1.907e-02   763.20   &lt;2e-16 ***\nDESTIN_GRID1715      1.637e+01  5.591e-03  2928.05   &lt;2e-16 ***\nDESTIN_GRID1716      1.548e+01  7.816e-03  1980.36   &lt;2e-16 ***\nDESTIN_GRID1717      1.483e+01  1.164e-02  1273.65   &lt;2e-16 ***\nDESTIN_GRID1718      1.438e+01  2.378e-02   604.73   &lt;2e-16 ***\nDESTIN_GRID1721      1.545e+01  2.093e-02   738.11   &lt;2e-16 ***\nDESTIN_GRID1723      1.439e+01  1.692e-02   850.85   &lt;2e-16 ***\nDESTIN_GRID1735      1.550e+01  8.768e-03  1767.84   &lt;2e-16 ***\nDESTIN_GRID1736      1.671e+01  6.199e-03  2695.84   &lt;2e-16 ***\nDESTIN_GRID1737      1.656e+01  4.683e-03  3535.57   &lt;2e-16 ***\nDESTIN_GRID1740      1.643e+01  1.020e-02  1610.53   &lt;2e-16 ***\nDESTIN_GRID1742      1.420e+01  1.863e-02   762.17   &lt;2e-16 ***\nDESTIN_GRID1753      1.589e+01  7.669e-03  2072.26   &lt;2e-16 ***\nDESTIN_GRID1754      1.671e+01  4.566e-03  3659.84   &lt;2e-16 ***\nDESTIN_GRID1755      1.558e+01  8.070e-03  1929.94   &lt;2e-16 ***\nDESTIN_GRID1758      1.503e+01  1.994e-02   753.95   &lt;2e-16 ***\nDESTIN_GRID1773      1.556e+01  9.206e-03  1690.26   &lt;2e-16 ***\nDESTIN_GRID1774      1.784e+01  2.766e-03  6449.86   &lt;2e-16 ***\nDESTIN_GRID1775      1.510e+01  1.001e-02  1508.64   &lt;2e-16 ***\nDESTIN_GRID1776      1.609e+01  6.224e-03  2585.52   &lt;2e-16 ***\nDESTIN_GRID1778      1.693e+01  1.118e-02  1513.33   &lt;2e-16 ***\nDESTIN_GRID1791      1.588e+01  8.528e-03  1861.60   &lt;2e-16 ***\nDESTIN_GRID1792      1.586e+01  6.663e-03  2379.80   &lt;2e-16 ***\nDESTIN_GRID1793      1.571e+01  7.281e-03  2157.99   &lt;2e-16 ***\nDESTIN_GRID1794      1.619e+01  7.131e-03  2270.45   &lt;2e-16 ***\nDESTIN_GRID1795      1.608e+01  6.196e-03  2595.58   &lt;2e-16 ***\nDESTIN_GRID1796      1.606e+01  6.323e-03  2539.25   &lt;2e-16 ***\nDESTIN_GRID1797      1.634e+01  5.767e-03  2833.80   &lt;2e-16 ***\nDESTIN_GRID1811      1.593e+01  6.655e-03  2393.25   &lt;2e-16 ***\nDESTIN_GRID1812      1.614e+01  5.061e-03  3190.02   &lt;2e-16 ***\nDESTIN_GRID1813      1.660e+01  4.447e-03  3733.00   &lt;2e-16 ***\nDESTIN_GRID1814      1.687e+01  4.272e-03  3949.68   &lt;2e-16 ***\nDESTIN_GRID1815      1.589e+01  6.353e-03  2501.51   &lt;2e-16 ***\nDESTIN_GRID1816      1.693e+01  4.610e-03  3671.42   &lt;2e-16 ***\nDESTIN_GRID1817      1.374e+01  2.805e-02   489.86   &lt;2e-16 ***\nDESTIN_GRID1830      1.665e+01  6.384e-03  2607.35   &lt;2e-16 ***\nDESTIN_GRID1831      1.645e+01  4.809e-03  3420.66   &lt;2e-16 ***\nDESTIN_GRID1832      1.677e+01  4.064e-03  4127.50   &lt;2e-16 ***\nDESTIN_GRID1833      1.567e+01  6.514e-03  2405.51   &lt;2e-16 ***\nDESTIN_GRID1834      1.498e+01  1.125e-02  1331.99   &lt;2e-16 ***\nDESTIN_GRID1835      1.676e+01  4.524e-03  3705.46   &lt;2e-16 ***\nDESTIN_GRID1849      1.516e+01  1.086e-02  1395.45   &lt;2e-16 ***\nDESTIN_GRID1850      1.594e+01  6.235e-03  2556.60   &lt;2e-16 ***\nDESTIN_GRID1851      1.520e+01  1.195e-02  1272.17   &lt;2e-16 ***\nDESTIN_GRID1852      1.681e+01  3.723e-03  4515.18   &lt;2e-16 ***\nDESTIN_GRID1853      1.506e+01  9.020e-03  1670.04   &lt;2e-16 ***\nDESTIN_GRID1854      1.534e+01  8.332e-03  1840.87   &lt;2e-16 ***\nDESTIN_GRID1855      1.357e+01  2.725e-02   497.82   &lt;2e-16 ***\nDESTIN_GRID1868      1.589e+01  7.270e-03  2185.35   &lt;2e-16 ***\nDESTIN_GRID1869      1.564e+01  7.723e-03  2025.38   &lt;2e-16 ***\nDESTIN_GRID1870      1.364e+01  3.123e-02   436.64   &lt;2e-16 ***\nDESTIN_GRID1871      1.821e+01  2.536e-03  7180.18   &lt;2e-16 ***\nDESTIN_GRID1872      1.516e+01  1.245e-02  1217.40   &lt;2e-16 ***\nDESTIN_GRID1873      1.560e+01  8.140e-03  1917.01   &lt;2e-16 ***\nDESTIN_GRID1887      1.589e+01  7.889e-03  2014.29   &lt;2e-16 ***\nDESTIN_GRID1888      1.727e+01  3.839e-03  4497.27   &lt;2e-16 ***\nDESTIN_GRID1889      1.693e+01  4.114e-03  4116.71   &lt;2e-16 ***\nDESTIN_GRID1890      1.584e+01  5.730e-03  2764.04   &lt;2e-16 ***\nDESTIN_GRID1891      1.536e+01  9.018e-03  1702.91   &lt;2e-16 ***\nDESTIN_GRID1892      1.791e+01  2.858e-03  6268.20   &lt;2e-16 ***\nDESTIN_GRID1893      1.323e+01  6.169e-02   214.50   &lt;2e-16 ***\nDESTIN_GRID1905      1.633e+01  7.541e-02   216.56   &lt;2e-16 ***\nDESTIN_GRID1906      1.452e+01  1.514e-02   958.75   &lt;2e-16 ***\nDESTIN_GRID1907      1.721e+01  3.901e-03  4412.71   &lt;2e-16 ***\nDESTIN_GRID1908      1.680e+01  4.676e-03  3593.42   &lt;2e-16 ***\nDESTIN_GRID1909      1.560e+01  6.456e-03  2416.16   &lt;2e-16 ***\nDESTIN_GRID1910      1.494e+01  1.185e-02  1259.91   &lt;2e-16 ***\nDESTIN_GRID1911      1.407e+01  3.283e-02   428.74   &lt;2e-16 ***\nDESTIN_GRID1926      1.622e+01  9.176e-03  1768.01   &lt;2e-16 ***\nDESTIN_GRID1927      1.590e+01  9.830e-03  1617.84   &lt;2e-16 ***\nDESTIN_GRID1928      1.595e+01  5.450e-03  2926.93   &lt;2e-16 ***\nDESTIN_GRID1929      1.584e+01  7.259e-03  2181.84   &lt;2e-16 ***\nDESTIN_GRID1930      1.579e+01  7.350e-03  2147.62   &lt;2e-16 ***\nDESTIN_GRID1944      1.557e+01  1.413e-02  1101.80   &lt;2e-16 ***\nDESTIN_GRID1945      1.541e+01  1.087e-02  1417.71   &lt;2e-16 ***\nDESTIN_GRID1946      1.569e+01  7.935e-03  1977.39   &lt;2e-16 ***\nDESTIN_GRID1947      1.733e+01  3.272e-03  5295.84   &lt;2e-16 ***\nDESTIN_GRID1948      1.638e+01  5.241e-03  3124.59   &lt;2e-16 ***\nDESTIN_GRID1949      1.523e+01  1.117e-02  1363.19   &lt;2e-16 ***\nDESTIN_GRID1965      1.656e+01  5.462e-03  3032.69   &lt;2e-16 ***\nDESTIN_GRID1966      1.487e+01  1.126e-02  1319.80   &lt;2e-16 ***\nDESTIN_GRID1967      1.549e+01  7.420e-03  2087.91   &lt;2e-16 ***\nDESTIN_GRID1968      1.609e+01  6.877e-03  2339.74   &lt;2e-16 ***\nDESTIN_GRID1983      1.682e+01  7.381e-03  2279.17   &lt;2e-16 ***\nDESTIN_GRID1984      1.551e+01  1.065e-02  1455.75   &lt;2e-16 ***\nDESTIN_GRID1985      1.619e+01  6.150e-03  2631.91   &lt;2e-16 ***\nDESTIN_GRID1986      1.616e+01  5.911e-03  2733.13   &lt;2e-16 ***\nDESTIN_GRID1987      1.504e+01  3.386e-02   444.16   &lt;2e-16 ***\nDESTIN_GRID2002      1.697e+01  1.328e-02  1278.37   &lt;2e-16 ***\nDESTIN_GRID2003      1.652e+01  8.131e-03  2031.64   &lt;2e-16 ***\nDESTIN_GRID2004      1.717e+01  6.881e-03  2495.13   &lt;2e-16 ***\nDESTIN_GRID2005      1.547e+01  9.273e-03  1667.96   &lt;2e-16 ***\nDESTIN_GRID2006      1.644e+01  6.015e-03  2733.59   &lt;2e-16 ***\nDESTIN_GRID2021      1.712e+01  9.712e-03  1763.02   &lt;2e-16 ***\nDESTIN_GRID2022      1.745e+01  8.117e-03  2150.27   &lt;2e-16 ***\nDESTIN_GRID2023      1.628e+01  9.046e-03  1799.64   &lt;2e-16 ***\nDESTIN_GRID2024      1.495e+01  1.351e-02  1106.05   &lt;2e-16 ***\nDESTIN_GRID2025      1.636e+01  1.148e-02  1425.34   &lt;2e-16 ***\nDESTIN_GRID2042      1.635e+01  1.252e-02  1305.50   &lt;2e-16 ***\nDESTIN_GRID2043      1.414e+01  2.589e-02   546.05   &lt;2e-16 ***\nDESTIN_GRID2044      1.607e+01  7.482e-03  2148.10   &lt;2e-16 ***\nDESTIN_GRID2045      1.723e+01  1.011e-02  1705.22   &lt;2e-16 ***\nDESTIN_GRID2061      1.555e+01  2.457e-02   632.92   &lt;2e-16 ***\nDESTIN_GRID2062      1.548e+01  1.565e-02   988.77   &lt;2e-16 ***\nDESTIN_GRID2063      1.626e+01  7.437e-03  2185.86   &lt;2e-16 ***\nDESTIN_GRID2064      1.471e+01  3.171e-02   463.82   &lt;2e-16 ***\nDESTIN_GRID2079      1.556e+01  1.607e-02   968.42   &lt;2e-16 ***\nDESTIN_GRID2082      1.522e+01  1.978e-02   769.31   &lt;2e-16 ***\nDESTIN_GRID2083      1.573e+01  9.874e-03  1593.29   &lt;2e-16 ***\nDESTIN_GRID2098      1.756e+01  5.771e-03  3043.68   &lt;2e-16 ***\nDESTIN_GRID2099      1.761e+01  5.270e-03  3342.27   &lt;2e-16 ***\nDESTIN_GRID2102      1.610e+01  9.454e-03  1703.07   &lt;2e-16 ***\nDESTIN_GRID2115      1.716e+01  1.560e-02  1100.14   &lt;2e-16 ***\nDESTIN_GRID2119      1.780e+01  5.128e-03  3471.05   &lt;2e-16 ***\nDESTIN_GRID2121      1.540e+01  1.273e-02  1209.17   &lt;2e-16 ***\nDESTIN_GRID2137      1.665e+01  8.823e-03  1887.44   &lt;2e-16 ***\nDESTIN_GRID2140      1.417e+01  2.960e-02   478.91   &lt;2e-16 ***\nDESTIN_GRID2153      1.627e+01  2.505e-02   649.51   &lt;2e-16 ***\nDESTIN_GRID2158      1.733e+01  6.750e-03  2567.57   &lt;2e-16 ***\nDESTIN_GRID2177      1.793e+01  4.943e-03  3626.39   &lt;2e-16 ***\nDESTIN_GRID2178      1.488e+01  2.396e-02   620.79   &lt;2e-16 ***\nDESTIN_GRID2196      1.729e+01  1.110e-02  1557.17   &lt;2e-16 ***\nDESTIN_GRID2197      1.754e+01  6.788e-03  2583.22   &lt;2e-16 ***\nDESTIN_GRID2267      1.771e+01  1.822e-02   971.88   &lt;2e-16 ***\nlog(ORI_TRAINEXITS)  3.697e-01  3.181e-04  1162.00   &lt;2e-16 ***\nlog(ORI_HDBPOP)      1.655e-01  7.357e-05  2249.57   &lt;2e-16 ***\nlog(dist)           -1.470e+00  2.635e-04 -5578.55   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 333487427  on 64936  degrees of freedom\nResidual deviance:  35466986  on 64118  degrees of freedom\nAIC: 35825209\n\nNumber of Fisher Scoring iterations: 8\n\n\nThe p-values associated with each predictor variable is &lt; 0.05, indicating that all coefficients are statistically significant in determining weekday morning peak period bus trips using the destination-constrained SIM.\nThe results below show that the number of train station exits at origin and the number of population residing in HDBs at the origin demonstrated positive association with the trips travelled during weekday morning peak periods. In contrast, distance had a negative association with the dependent variable instead.\n\n\nShow the code\ndata.frame(\n  Coefficient = sort(decSIM$coefficients[816:818]\n                     , decreasing = TRUE\n  )\n)\n\n\n                    Coefficient\nlog(ORI_TRAINEXITS)   0.3696515\nlog(ORI_HDBPOP)       0.1655103\nlog(dist)            -1.4697733"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#doubly-constrained-sim",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#doubly-constrained-sim",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "9.4 Doubly Constrained SIM",
    "text": "9.4 Doubly Constrained SIM\n\nModelCoefficients & p-Values\n\n\n\ndbcSIM &lt;- glm(formula = TRIPS ~ \n                ORIGIN_GRID +\n                DESTIN_GRID +\n                log(dist),\n              family = poisson(link = \"log\"),\n              data = interzonal_flow,\n              na.action = na.exclude) # excludes any NAs in the data\n\n\n\n\n\nShow the code\nsummary(dbcSIM)\n\n\n\nCall:\nglm(formula = TRIPS ~ ORIGIN_GRID + DESTIN_GRID + log(dist), \n    family = poisson(link = \"log\"), data = interzonal_flow, na.action = na.exclude)\n\nCoefficients:\n                  Estimate Std. Error   z value Pr(&gt;|z|)    \n(Intercept)     15.4689625  0.1101283   140.463  &lt; 2e-16 ***\nORIGIN_GRID40   -2.2234673  0.1709626   -13.006  &lt; 2e-16 ***\nORIGIN_GRID42   -0.9386264  0.1329822    -7.058 1.69e-12 ***\nORIGIN_GRID60   -1.6303778  0.1601870   -10.178  &lt; 2e-16 ***\nORIGIN_GRID61    1.2323256  0.1027997    11.988  &lt; 2e-16 ***\nORIGIN_GRID62   -1.6027120  0.1637994    -9.785  &lt; 2e-16 ***\nORIGIN_GRID78   -0.9118370  0.1224650    -7.446 9.64e-14 ***\nORIGIN_GRID79   -0.1321369  0.1291769    -1.023 0.306348    \nORIGIN_GRID80    1.8647796  0.1013871    18.393  &lt; 2e-16 ***\nORIGIN_GRID81    0.3038037  0.1120606     2.711 0.006707 ** \nORIGIN_GRID82    0.4302798  0.1663403     2.587 0.009689 ** \nORIGIN_GRID99   -0.0511127  0.1413042    -0.362 0.717561    \nORIGIN_GRID100   0.2430136  0.1235336     1.967 0.049162 *  \nORIGIN_GRID101   3.6672664  0.1010149    36.304  &lt; 2e-16 ***\nORIGIN_GRID102  -0.4737146  0.1190059    -3.981 6.87e-05 ***\nORIGIN_GRID116   2.8162094  0.1043221    26.995  &lt; 2e-16 ***\nORIGIN_GRID117  -0.2109787  0.2143807    -0.984 0.325051    \nORIGIN_GRID118  -0.0933213  0.1171030    -0.797 0.425499    \nORIGIN_GRID119   0.0551424  0.1063835     0.518 0.604224    \nORIGIN_GRID120  -0.1650027  0.1111110    -1.485 0.137537    \nORIGIN_GRID121   0.6452752  0.1068993     6.036 1.58e-09 ***\nORIGIN_GRID122   3.5888483  0.1035739    34.650  &lt; 2e-16 ***\nORIGIN_GRID136   3.7005565  0.1022311    36.198  &lt; 2e-16 ***\nORIGIN_GRID137   0.7100101  0.1163255     6.104 1.04e-09 ***\nORIGIN_GRID138   0.1693795  0.1292698     1.310 0.190102    \nORIGIN_GRID139   0.9263578  0.1087198     8.521  &lt; 2e-16 ***\nORIGIN_GRID140   3.5871043  0.1003970    35.729  &lt; 2e-16 ***\nORIGIN_GRID141   0.7923717  0.1053059     7.524 5.29e-14 ***\nORIGIN_GRID142   1.6969991  0.1074566    15.792  &lt; 2e-16 ***\nORIGIN_GRID156   1.7816652  0.1260517    14.134  &lt; 2e-16 ***\nORIGIN_GRID158   0.6804564  0.1106358     6.150 7.73e-10 ***\nORIGIN_GRID159   3.4562286  0.1007519    34.304  &lt; 2e-16 ***\nORIGIN_GRID160   4.3679944  0.1002364    43.577  &lt; 2e-16 ***\nORIGIN_GRID177  -0.5665394  0.1289756    -4.393 1.12e-05 ***\nORIGIN_GRID178   0.3808271  0.1086774     3.504 0.000458 ***\nORIGIN_GRID179  -0.1764535  0.1487150    -1.187 0.235417    \nORIGIN_GRID195   0.7119175  0.1299472     5.479 4.29e-08 ***\nORIGIN_GRID196   4.8299992  0.1004237    48.096  &lt; 2e-16 ***\nORIGIN_GRID197   2.0513746  0.1022963    20.053  &lt; 2e-16 ***\nORIGIN_GRID215  -0.7881538  0.1856864    -4.245 2.19e-05 ***\nORIGIN_GRID216   0.8695444  0.1125245     7.728 1.10e-14 ***\nORIGIN_GRID217   0.1614161  0.1873009     0.862 0.388797    \nORIGIN_GRID233  -0.2861928  0.1153549    -2.481 0.013102 *  \nORIGIN_GRID234   1.6583747  0.1038976    15.962  &lt; 2e-16 ***\nORIGIN_GRID235   0.9985032  0.1080828     9.238  &lt; 2e-16 ***\nORIGIN_GRID252   0.4716315  0.1076434     4.381 1.18e-05 ***\nORIGIN_GRID253   0.1439802  0.1091804     1.319 0.187257    \nORIGIN_GRID254   0.7212820  0.1099756     6.559 5.43e-11 ***\nORIGIN_GRID270  -2.9829058  0.3483979    -8.562  &lt; 2e-16 ***\nORIGIN_GRID271  -0.3413062  0.1120007    -3.047 0.002309 ** \nORIGIN_GRID272   3.6129742  0.1006565    35.894  &lt; 2e-16 ***\nORIGIN_GRID290  -1.1534059  0.1189415    -9.697  &lt; 2e-16 ***\nORIGIN_GRID291   0.8827479  0.1232344     7.163 7.88e-13 ***\nORIGIN_GRID292   1.4462971  0.1105827    13.079  &lt; 2e-16 ***\nORIGIN_GRID308   1.2360748  0.1041321    11.870  &lt; 2e-16 ***\nORIGIN_GRID309  -0.4354932  0.1096642    -3.971 7.15e-05 ***\nORIGIN_GRID310   0.7889577  0.1084366     7.276 3.45e-13 ***\nORIGIN_GRID329   0.9162510  0.1069912     8.564  &lt; 2e-16 ***\nORIGIN_GRID330   1.7111357  0.1037701    16.490  &lt; 2e-16 ***\nORIGIN_GRID347   0.6471003  0.1050843     6.158 7.37e-10 ***\nORIGIN_GRID348  -0.0696982  0.1130262    -0.617 0.537462    \nORIGIN_GRID349   1.1739581  0.1104201    10.632  &lt; 2e-16 ***\nORIGIN_GRID366   1.4116453  0.1060670    13.309  &lt; 2e-16 ***\nORIGIN_GRID367  -0.0025363  0.1114893    -0.023 0.981850    \nORIGIN_GRID368   5.5478409  0.1003000    55.312  &lt; 2e-16 ***\nORIGIN_GRID369   1.4999550  0.1101372    13.619  &lt; 2e-16 ***\nORIGIN_GRID370   2.2698240  0.1028978    22.059  &lt; 2e-16 ***\nORIGIN_GRID385  -1.1084709  0.1335788    -8.298  &lt; 2e-16 ***\nORIGIN_GRID386   0.8783891  0.1045482     8.402  &lt; 2e-16 ***\nORIGIN_GRID387   0.7153436  0.1063323     6.727 1.73e-11 ***\nORIGIN_GRID388   0.4534187  0.1270002     3.570 0.000357 ***\nORIGIN_GRID389   1.5152099  0.1028809    14.728  &lt; 2e-16 ***\nORIGIN_GRID404   0.3967424  0.1164416     3.407 0.000656 ***\nORIGIN_GRID405   0.0369549  0.1097510     0.337 0.736331    \nORIGIN_GRID406   1.4048402  0.1040938    13.496  &lt; 2e-16 ***\nORIGIN_GRID407   4.7125766  0.1004997    46.891  &lt; 2e-16 ***\nORIGIN_GRID408   1.5396960  0.1022299    15.061  &lt; 2e-16 ***\nORIGIN_GRID424   1.6588063  0.1040484    15.943  &lt; 2e-16 ***\nORIGIN_GRID425   2.3347804  0.1018062    22.934  &lt; 2e-16 ***\nORIGIN_GRID426   4.6989328  0.1004277    46.789  &lt; 2e-16 ***\nORIGIN_GRID427   2.5366388  0.1016264    24.960  &lt; 2e-16 ***\nORIGIN_GRID442   0.1860717  0.1156891     1.608 0.107753    \nORIGIN_GRID443  -1.4020448  0.2694418    -5.204 1.96e-07 ***\nORIGIN_GRID444   3.2354948  0.1009453    32.052  &lt; 2e-16 ***\nORIGIN_GRID445   3.7232295  0.1005823    37.017  &lt; 2e-16 ***\nORIGIN_GRID447  -0.9398582  0.1712182    -5.489 4.04e-08 ***\nORIGIN_GRID448   1.0424076  0.1164241     8.954  &lt; 2e-16 ***\nORIGIN_GRID461   0.3261982  0.1059263     3.079 0.002074 ** \nORIGIN_GRID462   0.9185239  0.1033350     8.889  &lt; 2e-16 ***\nORIGIN_GRID463   2.6514881  0.1008612    26.288  &lt; 2e-16 ***\nORIGIN_GRID464   5.2523673  0.1003597    52.335  &lt; 2e-16 ***\nORIGIN_GRID465   1.8343260  0.1031735    17.779  &lt; 2e-16 ***\nORIGIN_GRID466   1.6878212  0.1069118    15.787  &lt; 2e-16 ***\nORIGIN_GRID467   0.1396694  0.1702843     0.820 0.412095    \nORIGIN_GRID480  -0.7266090  0.1289418    -5.635 1.75e-08 ***\nORIGIN_GRID481   1.4630786  0.1024153    14.286  &lt; 2e-16 ***\nORIGIN_GRID482   1.1289285  0.1029114    10.970  &lt; 2e-16 ***\nORIGIN_GRID483   4.9621300  0.1003597    49.443  &lt; 2e-16 ***\nORIGIN_GRID484   5.5386229  0.1003765    55.178  &lt; 2e-16 ***\nORIGIN_GRID486   2.2515835  0.1034922    21.756  &lt; 2e-16 ***\nORIGIN_GRID487   0.2355095  0.1701904     1.384 0.166420    \nORIGIN_GRID488   0.1547066  0.2275519     0.680 0.496584    \nORIGIN_GRID489  -1.0027178  0.5868484    -1.709 0.087516 .  \nORIGIN_GRID499  -0.7296698  0.1139836    -6.402 1.54e-10 ***\nORIGIN_GRID500   1.7670630  0.1069088    16.529  &lt; 2e-16 ***\nORIGIN_GRID501   1.2597540  0.1020798    12.341  &lt; 2e-16 ***\nORIGIN_GRID502   4.8669950  0.1003698    48.491  &lt; 2e-16 ***\nORIGIN_GRID503   4.2934864  0.1005596    42.696  &lt; 2e-16 ***\nORIGIN_GRID507   0.7658649  0.1372962     5.578 2.43e-08 ***\nORIGIN_GRID508   3.1319788  0.1110912    28.193  &lt; 2e-16 ***\nORIGIN_GRID518  -1.9293182  0.2453746    -7.863 3.76e-15 ***\nORIGIN_GRID519  -0.2042537  0.1094242    -1.867 0.061954 .  \nORIGIN_GRID520   1.3089382  0.1066039    12.279  &lt; 2e-16 ***\nORIGIN_GRID521   5.9690678  0.1003340    59.492  &lt; 2e-16 ***\nORIGIN_GRID522   4.5158614  0.1004316    44.965  &lt; 2e-16 ***\nORIGIN_GRID524  -0.2065982  0.1469007    -1.406 0.159611    \nORIGIN_GRID528   0.1212500  0.1469788     0.825 0.409400    \nORIGIN_GRID529  -0.0205887  0.2207819    -0.093 0.925702    \nORIGIN_GRID530   3.3399988  0.1146346    29.136  &lt; 2e-16 ***\nORIGIN_GRID537   1.1327049  0.1119034    10.122  &lt; 2e-16 ***\nORIGIN_GRID538   0.9399789  0.1036611     9.068  &lt; 2e-16 ***\nORIGIN_GRID539   1.1447749  0.1022402    11.197  &lt; 2e-16 ***\nORIGIN_GRID540   4.2634350  0.1004021    42.464  &lt; 2e-16 ***\nORIGIN_GRID541   1.4852917  0.1163234    12.769  &lt; 2e-16 ***\nORIGIN_GRID547   0.7550378  0.1481486     5.096 3.46e-07 ***\nORIGIN_GRID548  -1.0166574  0.2862055    -3.552 0.000382 ***\nORIGIN_GRID557  -0.2840910  0.1095395    -2.594 0.009500 ** \nORIGIN_GRID558   0.8425943  0.1044438     8.067 7.18e-16 ***\nORIGIN_GRID559   1.6764669  0.1018055    16.467  &lt; 2e-16 ***\nORIGIN_GRID560   4.9280629  0.1003848    49.092  &lt; 2e-16 ***\nORIGIN_GRID562   1.9758591  0.1054549    18.737  &lt; 2e-16 ***\nORIGIN_GRID577   0.5529827  0.1077080     5.134 2.84e-07 ***\nORIGIN_GRID578   4.3980880  0.1004004    43.806  &lt; 2e-16 ***\nORIGIN_GRID595   2.2658573  0.1016428    22.292  &lt; 2e-16 ***\nORIGIN_GRID596   3.7264844  0.1005197    37.072  &lt; 2e-16 ***\nORIGIN_GRID597   3.9497392  0.1004609    39.316  &lt; 2e-16 ***\nORIGIN_GRID598   5.1215206  0.1003706    51.026  &lt; 2e-16 ***\nORIGIN_GRID600   5.0356775  0.1006096    50.052  &lt; 2e-16 ***\nORIGIN_GRID613   2.1649132  0.1028405    21.051  &lt; 2e-16 ***\nORIGIN_GRID614   0.0807839  0.1093969     0.738 0.460242    \nORIGIN_GRID615   4.9546047  0.1003834    49.357  &lt; 2e-16 ***\nORIGIN_GRID616   5.2039945  0.1003812    51.842  &lt; 2e-16 ***\nORIGIN_GRID617   3.9126824  0.1006703    38.866  &lt; 2e-16 ***\nORIGIN_GRID633   1.7017366  0.1027301    16.565  &lt; 2e-16 ***\nORIGIN_GRID634   3.8980635  0.1005018    38.786  &lt; 2e-16 ***\nORIGIN_GRID635   3.8111449  0.1005053    37.920  &lt; 2e-16 ***\nORIGIN_GRID636   4.9201867  0.1003785    49.016  &lt; 2e-16 ***\nORIGIN_GRID638   1.9625493  0.1053111    18.636  &lt; 2e-16 ***\nORIGIN_GRID654   1.7573058  0.1018982    17.246  &lt; 2e-16 ***\nORIGIN_GRID657   1.2606855  0.1093893    11.525  &lt; 2e-16 ***\nORIGIN_GRID671   2.1843303  0.1016732    21.484  &lt; 2e-16 ***\nORIGIN_GRID673   2.4434907  0.1010669    24.177  &lt; 2e-16 ***\nORIGIN_GRID674   4.5044550  0.1004162    44.858  &lt; 2e-16 ***\nORIGIN_GRID689   1.6414963  0.1039762    15.787  &lt; 2e-16 ***\nORIGIN_GRID690   3.6945840  0.1005770    36.734  &lt; 2e-16 ***\nORIGIN_GRID691   0.8911839  0.1040424     8.566  &lt; 2e-16 ***\nORIGIN_GRID692   5.0056196  0.1003774    49.868  &lt; 2e-16 ***\nORIGIN_GRID693   3.9673842  0.1006509    39.417  &lt; 2e-16 ***\nORIGIN_GRID695   6.0245304  0.1003979    60.007  &lt; 2e-16 ***\nORIGIN_GRID700   0.8116645  0.1236688     6.563 5.27e-11 ***\nORIGIN_GRID710   1.0588876  0.1030267    10.278  &lt; 2e-16 ***\nORIGIN_GRID711   4.0889231  0.1004142    40.721  &lt; 2e-16 ***\nORIGIN_GRID712   3.8308647  0.1004982    38.119  &lt; 2e-16 ***\nORIGIN_GRID713   4.4487558  0.1005802    44.231  &lt; 2e-16 ***\nORIGIN_GRID714   5.2614764  0.1004693    52.369  &lt; 2e-16 ***\nORIGIN_GRID715   3.6656713  0.1008737    36.339  &lt; 2e-16 ***\nORIGIN_GRID727   0.1089922  0.1116065     0.977 0.328779    \nORIGIN_GRID728   4.7284023  0.1004115    47.090  &lt; 2e-16 ***\nORIGIN_GRID729   4.7168324  0.1003805    46.990  &lt; 2e-16 ***\nORIGIN_GRID730   4.4208581  0.1004124    44.027  &lt; 2e-16 ***\nORIGIN_GRID731   5.3448413  0.1004196    53.225  &lt; 2e-16 ***\nORIGIN_GRID732   3.6907972  0.1009114    36.575  &lt; 2e-16 ***\nORIGIN_GRID733   5.4056240  0.1003880    53.847  &lt; 2e-16 ***\nORIGIN_GRID734   4.7073163  0.1004927    46.842  &lt; 2e-16 ***\nORIGIN_GRID738   2.5897649  0.1041781    24.859  &lt; 2e-16 ***\nORIGIN_GRID746   0.7813930  0.1074634     7.271 3.56e-13 ***\nORIGIN_GRID748   2.3898313  0.1008146    23.705  &lt; 2e-16 ***\nORIGIN_GRID749   4.3793758  0.1003981    43.620  &lt; 2e-16 ***\nORIGIN_GRID750   4.7775520  0.1003906    47.590  &lt; 2e-16 ***\nORIGIN_GRID751   4.8376310  0.1004270    48.171  &lt; 2e-16 ***\nORIGIN_GRID752   5.0490370  0.1004609    50.259  &lt; 2e-16 ***\nORIGIN_GRID753   5.9386609  0.1003701    59.168  &lt; 2e-16 ***\nORIGIN_GRID754   5.1395209  0.1005349    51.122  &lt; 2e-16 ***\nORIGIN_GRID757   2.1213807  0.1046209    20.277  &lt; 2e-16 ***\nORIGIN_GRID764  -0.4322233  0.1270625    -3.402 0.000670 ***\nORIGIN_GRID766   3.8449955  0.1004583    38.275  &lt; 2e-16 ***\nORIGIN_GRID767   2.9153934  0.1007132    28.947  &lt; 2e-16 ***\nORIGIN_GRID768   4.1619865  0.1004346    41.440  &lt; 2e-16 ***\nORIGIN_GRID769   3.3566943  0.1006239    33.359  &lt; 2e-16 ***\nORIGIN_GRID770   4.3303561  0.1004690    43.101  &lt; 2e-16 ***\nORIGIN_GRID771   4.8412868  0.1004120    48.214  &lt; 2e-16 ***\nORIGIN_GRID772   4.4071341  0.1005188    43.844  &lt; 2e-16 ***\nORIGIN_GRID773   6.3542435  0.1004248    63.274  &lt; 2e-16 ***\nORIGIN_GRID774   2.6202167  0.1036510    25.279  &lt; 2e-16 ***\nORIGIN_GRID775   1.2601769  0.1093775    11.521  &lt; 2e-16 ***\nORIGIN_GRID776   3.0533663  0.1020093    29.932  &lt; 2e-16 ***\nORIGIN_GRID784   1.2827790  0.1052996    12.182  &lt; 2e-16 ***\nORIGIN_GRID785   2.5940307  0.1010160    25.679  &lt; 2e-16 ***\nORIGIN_GRID786   1.8510998  0.1018567    18.174  &lt; 2e-16 ***\nORIGIN_GRID787   4.5110567  0.1004992    44.886  &lt; 2e-16 ***\nORIGIN_GRID788   5.2976884  0.1003669    52.783  &lt; 2e-16 ***\nORIGIN_GRID789   5.1839690  0.1005012    51.581  &lt; 2e-16 ***\nORIGIN_GRID790   3.1062885  0.1009010    30.785  &lt; 2e-16 ***\nORIGIN_GRID791   3.2594256  0.1008295    32.326  &lt; 2e-16 ***\nORIGIN_GRID792   3.5393368  0.1006523    35.164  &lt; 2e-16 ***\nORIGIN_GRID793   0.7405761  0.1236206     5.991 2.09e-09 ***\nORIGIN_GRID794   1.5273170  0.1051885    14.520  &lt; 2e-16 ***\nORIGIN_GRID795   1.1414353  0.1080823    10.561  &lt; 2e-16 ***\nORIGIN_GRID803   2.0401380  0.1012190    20.156  &lt; 2e-16 ***\nORIGIN_GRID804   3.5481791  0.1005528    35.287  &lt; 2e-16 ***\nORIGIN_GRID805   0.3229957  0.1058916     3.050 0.002287 ** \nORIGIN_GRID806   4.7457653  0.1003900    47.273  &lt; 2e-16 ***\nORIGIN_GRID807   3.4487027  0.1009576    34.160  &lt; 2e-16 ***\nORIGIN_GRID809   4.9107235  0.1004015    48.911  &lt; 2e-16 ***\nORIGIN_GRID810   3.0068651  0.1009087    29.798  &lt; 2e-16 ***\nORIGIN_GRID811   2.5805013  0.1014664    25.432  &lt; 2e-16 ***\nORIGIN_GRID812   1.6490428  0.1034806    15.936  &lt; 2e-16 ***\nORIGIN_GRID813  -0.2786298  0.1189858    -2.342 0.019196 *  \nORIGIN_GRID814   2.0434886  0.1045049    19.554  &lt; 2e-16 ***\nORIGIN_GRID822   3.5102094  0.1010371    34.742  &lt; 2e-16 ***\nORIGIN_GRID823   3.5406605  0.1004773    35.238  &lt; 2e-16 ***\nORIGIN_GRID824   1.4804127  0.1017744    14.546  &lt; 2e-16 ***\nORIGIN_GRID825   2.9557267  0.1006941    29.354  &lt; 2e-16 ***\nORIGIN_GRID826   4.4767832  0.1004119    44.584  &lt; 2e-16 ***\nORIGIN_GRID829   4.7997545  0.1004150    47.799  &lt; 2e-16 ***\nORIGIN_GRID831   4.2553797  0.1005962    42.302  &lt; 2e-16 ***\nORIGIN_GRID832   0.7678128  0.1066474     7.200 6.04e-13 ***\nORIGIN_GRID833   3.4331876  0.1007435    34.078  &lt; 2e-16 ***\nORIGIN_GRID840   2.4340561  0.1012197    24.047  &lt; 2e-16 ***\nORIGIN_GRID841   3.9094289  0.1004239    38.929  &lt; 2e-16 ***\nORIGIN_GRID842   4.7868653  0.1003685    47.693  &lt; 2e-16 ***\nORIGIN_GRID843   1.7708381  0.1016774    17.416  &lt; 2e-16 ***\nORIGIN_GRID844   2.1826128  0.1018190    21.436  &lt; 2e-16 ***\nORIGIN_GRID845   4.3740180  0.1004744    43.534  &lt; 2e-16 ***\nORIGIN_GRID846   1.9411687  0.1017686    19.074  &lt; 2e-16 ***\nORIGIN_GRID847   5.6645261  0.1003683    56.437  &lt; 2e-16 ***\nORIGIN_GRID850  -1.7341317  0.2356669    -7.358 1.86e-13 ***\nORIGIN_GRID851   5.7983760  0.1004051    57.750  &lt; 2e-16 ***\nORIGIN_GRID852   0.1409088  0.1171548     1.203 0.229070    \nORIGIN_GRID859   2.3271459  0.1011069    23.017  &lt; 2e-16 ***\nORIGIN_GRID860   4.3862437  0.1004379    43.671  &lt; 2e-16 ***\nORIGIN_GRID861   5.2460879  0.1003586    52.273  &lt; 2e-16 ***\nORIGIN_GRID862   1.8852311  0.1024663    18.399  &lt; 2e-16 ***\nORIGIN_GRID863   3.1269981  0.1007544    31.036  &lt; 2e-16 ***\nORIGIN_GRID864   1.9657244  0.1016751    19.333  &lt; 2e-16 ***\nORIGIN_GRID865   4.2298107  0.1004747    42.098  &lt; 2e-16 ***\nORIGIN_GRID866   2.6362866  0.1009534    26.114  &lt; 2e-16 ***\nORIGIN_GRID867   4.8170808  0.1004816    47.940  &lt; 2e-16 ***\nORIGIN_GRID869   0.8796750  0.1114417     7.894 2.94e-15 ***\nORIGIN_GRID871   0.8165409  0.1046610     7.802 6.10e-15 ***\nORIGIN_GRID872  -3.6456704  1.0050264    -3.627 0.000286 ***\nORIGIN_GRID878   2.7090067  0.1006311    26.920  &lt; 2e-16 ***\nORIGIN_GRID879   4.0987189  0.1003930    40.827  &lt; 2e-16 ***\nORIGIN_GRID880   3.9173591  0.1004298    39.006  &lt; 2e-16 ***\nORIGIN_GRID882   3.6045276  0.1005814    35.837  &lt; 2e-16 ***\nORIGIN_GRID883   3.2590807  0.1007029    32.363  &lt; 2e-16 ***\nORIGIN_GRID884   1.9418323  0.1016935    19.095  &lt; 2e-16 ***\nORIGIN_GRID885   5.1520593  0.1003913    51.320  &lt; 2e-16 ***\nORIGIN_GRID886   5.0200493  0.1005613    49.920  &lt; 2e-16 ***\nORIGIN_GRID890   2.1800181  0.1013440    21.511  &lt; 2e-16 ***\nORIGIN_GRID891   6.7538602  0.1004070    67.265  &lt; 2e-16 ***\nORIGIN_GRID897   2.7994422  0.1007048    27.799  &lt; 2e-16 ***\nORIGIN_GRID898   3.0334516  0.1005521    30.168  &lt; 2e-16 ***\nORIGIN_GRID899   2.8047346  0.1005847    27.884  &lt; 2e-16 ***\nORIGIN_GRID900   2.2813815  0.1008996    22.610  &lt; 2e-16 ***\nORIGIN_GRID901   3.8229227  0.1004721    38.050  &lt; 2e-16 ***\nORIGIN_GRID902   3.5447394  0.1005947    35.238  &lt; 2e-16 ***\nORIGIN_GRID903   2.1410880  0.1044830    20.492  &lt; 2e-16 ***\nORIGIN_GRID904   5.2682940  0.1003967    52.475  &lt; 2e-16 ***\nORIGIN_GRID905   5.2941609  0.1004745    52.692  &lt; 2e-16 ***\nORIGIN_GRID907   2.1773893  0.1033259    21.073  &lt; 2e-16 ***\nORIGIN_GRID909   4.9020881  0.1004189    48.816  &lt; 2e-16 ***\nORIGIN_GRID910   5.6787039  0.1003872    56.568  &lt; 2e-16 ***\nORIGIN_GRID915   0.8609552  0.1047543     8.219  &lt; 2e-16 ***\nORIGIN_GRID916   0.7628391  0.1052459     7.248 4.22e-13 ***\nORIGIN_GRID917   1.5679866  0.1015620    15.439  &lt; 2e-16 ***\nORIGIN_GRID918   2.3187641  0.1008805    22.985  &lt; 2e-16 ***\nORIGIN_GRID919   1.6748940  0.1015632    16.491  &lt; 2e-16 ***\nORIGIN_GRID920   3.5205017  0.1005703    35.005  &lt; 2e-16 ***\nORIGIN_GRID922   4.1042598  0.1008027    40.716  &lt; 2e-16 ***\nORIGIN_GRID923   5.7231960  0.1004361    56.983  &lt; 2e-16 ***\nORIGIN_GRID927   3.7064797  0.1007588    36.786  &lt; 2e-16 ***\nORIGIN_GRID928   4.8052201  0.1004297    47.847  &lt; 2e-16 ***\nORIGIN_GRID929   0.4496256  0.1121245     4.010 6.07e-05 ***\nORIGIN_GRID935   2.2145232  0.1009339    21.940  &lt; 2e-16 ***\nORIGIN_GRID936   3.1154367  0.1005740    30.977  &lt; 2e-16 ***\nORIGIN_GRID937   3.8188667  0.1004656    38.012  &lt; 2e-16 ***\nORIGIN_GRID938   1.9428301  0.1012686    19.185  &lt; 2e-16 ***\nORIGIN_GRID939   3.0988546  0.1005594    30.816  &lt; 2e-16 ***\nORIGIN_GRID945   2.1300422  0.1034226    20.596  &lt; 2e-16 ***\nORIGIN_GRID947   4.4916125  0.1004290    44.724  &lt; 2e-16 ***\nORIGIN_GRID948   4.4609050  0.1004581    44.406  &lt; 2e-16 ***\nORIGIN_GRID953   3.6857435  0.1004901    36.678  &lt; 2e-16 ***\nORIGIN_GRID954   2.6967291  0.1006228    26.800  &lt; 2e-16 ***\nORIGIN_GRID955   3.7159873  0.1004555    36.991  &lt; 2e-16 ***\nORIGIN_GRID956   2.7102221  0.1007376    26.904  &lt; 2e-16 ***\nORIGIN_GRID964  -0.6496128  0.2694180    -2.411 0.015901 *  \nORIGIN_GRID966   4.1878488  0.1004569    41.688  &lt; 2e-16 ***\nORIGIN_GRID967  -1.2507645  0.1811185    -6.906 4.99e-12 ***\nORIGIN_GRID972   3.0108092  0.1006073    29.926  &lt; 2e-16 ***\nORIGIN_GRID973   2.3505404  0.1008256    23.313  &lt; 2e-16 ***\nORIGIN_GRID974   2.3978396  0.1006923    23.814  &lt; 2e-16 ***\nORIGIN_GRID975   2.5837440  0.1008244    25.626  &lt; 2e-16 ***\nORIGIN_GRID977   4.1236511  0.1004463    41.053  &lt; 2e-16 ***\nORIGIN_GRID983  -1.7788684  0.1735493   -10.250  &lt; 2e-16 ***\nORIGIN_GRID985   4.0448008  0.1005022    40.246  &lt; 2e-16 ***\nORIGIN_GRID986   2.4325702  0.1010235    24.079  &lt; 2e-16 ***\nORIGIN_GRID990   1.0973555  0.1093781    10.033  &lt; 2e-16 ***\nORIGIN_GRID991   0.7370792  0.1055673     6.982 2.91e-12 ***\nORIGIN_GRID992   2.3768247  0.1023978    23.212  &lt; 2e-16 ***\nORIGIN_GRID993   4.3863277  0.1003940    43.691  &lt; 2e-16 ***\nORIGIN_GRID994   2.0294861  0.1019243    19.912  &lt; 2e-16 ***\nORIGIN_GRID995   3.3886264  0.1005465    33.702  &lt; 2e-16 ***\nORIGIN_GRID1001  1.2002251  0.1175900    10.207  &lt; 2e-16 ***\nORIGIN_GRID1002 -0.3745713  0.1360226    -2.754 0.005892 ** \nORIGIN_GRID1003  1.8520758  0.1040148    17.806  &lt; 2e-16 ***\nORIGIN_GRID1004  6.1320104  0.1003669    61.096  &lt; 2e-16 ***\nORIGIN_GRID1005  1.1285412  0.1043679    10.813  &lt; 2e-16 ***\nORIGIN_GRID1010  2.7913098  0.1006765    27.726  &lt; 2e-16 ***\nORIGIN_GRID1011  1.4221950  0.1018278    13.967  &lt; 2e-16 ***\nORIGIN_GRID1012  1.5471150  0.1021270    15.149  &lt; 2e-16 ***\nORIGIN_GRID1013  2.7059538  0.1007862    26.848  &lt; 2e-16 ***\nORIGIN_GRID1014  2.6098514  0.1011703    25.797  &lt; 2e-16 ***\nORIGIN_GRID1023  4.4616676  0.1004492    44.417  &lt; 2e-16 ***\nORIGIN_GRID1024  4.5087672  0.1004138    44.902  &lt; 2e-16 ***\nORIGIN_GRID1025  2.7357326  0.1013989    26.980  &lt; 2e-16 ***\nORIGIN_GRID1028  1.6348596  0.1014748    16.111  &lt; 2e-16 ***\nORIGIN_GRID1030  0.8470610  0.1043184     8.120 4.66e-16 ***\nORIGIN_GRID1031  3.5570177  0.1004569    35.408  &lt; 2e-16 ***\nORIGIN_GRID1033  3.5425808  0.1005175    35.243  &lt; 2e-16 ***\nORIGIN_GRID1040  0.9407843  0.1129168     8.332  &lt; 2e-16 ***\nORIGIN_GRID1041  2.4541969  0.1018019    24.108  &lt; 2e-16 ***\nORIGIN_GRID1042  4.7354933  0.1004027    47.165  &lt; 2e-16 ***\nORIGIN_GRID1043  3.6612933  0.1005430    36.415  &lt; 2e-16 ***\nORIGIN_GRID1048  1.9177786  0.1009283    19.001  &lt; 2e-16 ***\nORIGIN_GRID1049  3.3591167  0.1004867    33.428  &lt; 2e-16 ***\nORIGIN_GRID1050  4.3819384  0.1003976    43.646  &lt; 2e-16 ***\nORIGIN_GRID1061  5.3136600  0.1004151    52.917  &lt; 2e-16 ***\nORIGIN_GRID1062  5.1789352  0.1004101    51.578  &lt; 2e-16 ***\nORIGIN_GRID1063  2.4836967  0.1011484    24.555  &lt; 2e-16 ***\nORIGIN_GRID1064 -1.8841660  0.2855407    -6.599 4.15e-11 ***\nORIGIN_GRID1066  2.1586810  0.1008551    21.404  &lt; 2e-16 ***\nORIGIN_GRID1067  2.8504153  0.1005602    28.345  &lt; 2e-16 ***\nORIGIN_GRID1068  3.8988707  0.1004205    38.825  &lt; 2e-16 ***\nORIGIN_GRID1069  3.1854898  0.1005394    31.684  &lt; 2e-16 ***\nORIGIN_GRID1071  2.4810601  0.1009971    24.566  &lt; 2e-16 ***\nORIGIN_GRID1078  1.4311236  0.1112496    12.864  &lt; 2e-16 ***\nORIGIN_GRID1080  4.0588900  0.1005297    40.375  &lt; 2e-16 ***\nORIGIN_GRID1081  4.0591905  0.1004752    40.400  &lt; 2e-16 ***\nORIGIN_GRID1082  2.3023988  0.1013986    22.706  &lt; 2e-16 ***\nORIGIN_GRID1086  2.9164454  0.1005508    29.005  &lt; 2e-16 ***\nORIGIN_GRID1087  2.7748065  0.1005775    27.589  &lt; 2e-16 ***\nORIGIN_GRID1089  3.6547945  0.1005010    36.366  &lt; 2e-16 ***\nORIGIN_GRID1090  3.3343385  0.1005586    33.158  &lt; 2e-16 ***\nORIGIN_GRID1097  0.7044513  0.1342226     5.248 1.53e-07 ***\nORIGIN_GRID1100  4.7823669  0.1004252    47.621  &lt; 2e-16 ***\nORIGIN_GRID1101  1.3104224  0.1079075    12.144  &lt; 2e-16 ***\nORIGIN_GRID1102  0.3867722  0.1085533     3.563 0.000367 ***\nORIGIN_GRID1104  3.9455490  0.1004143    39.293  &lt; 2e-16 ***\nORIGIN_GRID1105  3.5850143  0.1004334    35.695  &lt; 2e-16 ***\nORIGIN_GRID1106  3.2541093  0.1008130    32.279  &lt; 2e-16 ***\nORIGIN_GRID1107  1.5742394  0.1017037    15.479  &lt; 2e-16 ***\nORIGIN_GRID1108  2.4660475  0.1008861    24.444  &lt; 2e-16 ***\nORIGIN_GRID1115 -1.5957085  0.2140100    -7.456 8.90e-14 ***\nORIGIN_GRID1116  0.5083665  0.1502440     3.384 0.000715 ***\nORIGIN_GRID1119  2.2994018  0.1012711    22.705  &lt; 2e-16 ***\nORIGIN_GRID1120  2.3176549  0.1012696    22.886  &lt; 2e-16 ***\nORIGIN_GRID1123  2.2008567  0.1008263    21.828  &lt; 2e-16 ***\nORIGIN_GRID1124  2.7711623  0.1005609    27.557  &lt; 2e-16 ***\nORIGIN_GRID1125  3.4410537  0.1004494    34.257  &lt; 2e-16 ***\nORIGIN_GRID1128  2.6645719  0.1007417    26.450  &lt; 2e-16 ***\nORIGIN_GRID1138  3.7104981  0.1006104    36.880  &lt; 2e-16 ***\nORIGIN_GRID1139  4.6077782  0.1004836    45.856  &lt; 2e-16 ***\nORIGIN_GRID1140  2.6054441  0.1014102    25.692  &lt; 2e-16 ***\nORIGIN_GRID1142  2.5468606  0.1006660    25.300  &lt; 2e-16 ***\nORIGIN_GRID1143  3.1299411  0.1004673    31.154  &lt; 2e-16 ***\nORIGIN_GRID1144  2.1606176  0.1010198    21.388  &lt; 2e-16 ***\nORIGIN_GRID1145  1.9656642  0.1012892    19.406  &lt; 2e-16 ***\nORIGIN_GRID1146  3.2645637  0.1006256    32.443  &lt; 2e-16 ***\nORIGIN_GRID1147  1.3805874  0.1038481    13.294  &lt; 2e-16 ***\nORIGIN_GRID1152 -0.9509755  0.1530084    -6.215 5.13e-10 ***\nORIGIN_GRID1153  3.1668429  0.1010479    31.340  &lt; 2e-16 ***\nORIGIN_GRID1157  4.7584722  0.1004249    47.383  &lt; 2e-16 ***\nORIGIN_GRID1158  2.1912096  0.1012980    21.631  &lt; 2e-16 ***\nORIGIN_GRID1161  4.3835081  0.1004027    43.659  &lt; 2e-16 ***\nORIGIN_GRID1162  3.5460449  0.1004457    35.303  &lt; 2e-16 ***\nORIGIN_GRID1163  4.2394635  0.1003895    42.230  &lt; 2e-16 ***\nORIGIN_GRID1164  2.5213110  0.1008306    25.005  &lt; 2e-16 ***\nORIGIN_GRID1167  0.7252536  0.1104421     6.567 5.14e-11 ***\nORIGIN_GRID1171 -0.6810819  0.1342091    -5.075 3.88e-07 ***\nORIGIN_GRID1172  4.6295069  0.1005211    46.055  &lt; 2e-16 ***\nORIGIN_GRID1173  2.1498990  0.1024318    20.989  &lt; 2e-16 ***\nORIGIN_GRID1176  3.7649905  0.1005719    37.436  &lt; 2e-16 ***\nORIGIN_GRID1177  4.1526302  0.1005331    41.306  &lt; 2e-16 ***\nORIGIN_GRID1180  4.1637065  0.1004080    41.468  &lt; 2e-16 ***\nORIGIN_GRID1181  3.5337968  0.1004187    35.191  &lt; 2e-16 ***\nORIGIN_GRID1183  0.0647062  0.1071385     0.604 0.545877    \nORIGIN_GRID1184  3.3964905  0.1005178    33.790  &lt; 2e-16 ***\nORIGIN_GRID1186 -0.5439515  0.1680957    -3.236 0.001212 ** \nORIGIN_GRID1192  1.1970715  0.1056677    11.329  &lt; 2e-16 ***\nORIGIN_GRID1193  2.7932357  0.1009602    27.667  &lt; 2e-16 ***\nORIGIN_GRID1194  2.1242551  0.1014980    20.929  &lt; 2e-16 ***\nORIGIN_GRID1195  5.0395701  0.1004168    50.187  &lt; 2e-16 ***\nORIGIN_GRID1196  3.5638223  0.1007376    35.377  &lt; 2e-16 ***\nORIGIN_GRID1199  1.7750177  0.1010772    17.561  &lt; 2e-16 ***\nORIGIN_GRID1200  3.7295161  0.1004161    37.141  &lt; 2e-16 ***\nORIGIN_GRID1201  3.5134634  0.1004368    34.982  &lt; 2e-16 ***\nORIGIN_GRID1202  2.1969798  0.1007796    21.800  &lt; 2e-16 ***\nORIGIN_GRID1203  2.4753723  0.1009954    24.510  &lt; 2e-16 ***\nORIGIN_GRID1204  3.3052605  0.1006553    32.837  &lt; 2e-16 ***\nORIGIN_GRID1205 -1.1603797  0.3177949    -3.651 0.000261 ***\nORIGIN_GRID1207  2.6926078  0.1010624    26.643  &lt; 2e-16 ***\nORIGIN_GRID1208  3.0134655  0.1009551    29.850  &lt; 2e-16 ***\nORIGIN_GRID1209  2.5311113  0.1016755    24.894  &lt; 2e-16 ***\nORIGIN_GRID1210 -0.1532492  0.1468621    -1.043 0.296721    \nORIGIN_GRID1211  0.2443811  0.1115372     2.191 0.028450 *  \nORIGIN_GRID1212 -0.9166492  0.1292069    -7.094 1.30e-12 ***\nORIGIN_GRID1213  4.9671937  0.1004076    49.470  &lt; 2e-16 ***\nORIGIN_GRID1214  3.2684252  0.1007297    32.447  &lt; 2e-16 ***\nORIGIN_GRID1215 -2.3528950  0.7141940    -3.294 0.000986 ***\nORIGIN_GRID1218  3.3946174  0.1005234    33.769  &lt; 2e-16 ***\nORIGIN_GRID1219  4.3878649  0.1003919    43.707  &lt; 2e-16 ***\nORIGIN_GRID1220  2.7864111  0.1005290    27.717  &lt; 2e-16 ***\nORIGIN_GRID1221  2.6130494  0.1006557    25.960  &lt; 2e-16 ***\nORIGIN_GRID1222  2.7875256  0.1009461    27.614  &lt; 2e-16 ***\nORIGIN_GRID1225  2.7171006  0.1008076    26.953  &lt; 2e-16 ***\nORIGIN_GRID1226  2.5359136  0.1010507    25.095  &lt; 2e-16 ***\nORIGIN_GRID1227  3.3019299  0.1006823    32.796  &lt; 2e-16 ***\nORIGIN_GRID1229  2.3705182  0.1020592    23.227  &lt; 2e-16 ***\nORIGIN_GRID1230  3.6788164  0.1005929    36.571  &lt; 2e-16 ***\nORIGIN_GRID1231  3.9732457  0.1004726    39.546  &lt; 2e-16 ***\nORIGIN_GRID1232  4.0125341  0.1004820    39.933  &lt; 2e-16 ***\nORIGIN_GRID1233  5.1539592  0.1004266    51.321  &lt; 2e-16 ***\nORIGIN_GRID1234  1.1327154  0.1100513    10.293  &lt; 2e-16 ***\nORIGIN_GRID1238  2.2579434  0.1006861    22.426  &lt; 2e-16 ***\nORIGIN_GRID1239  2.0500634  0.1007157    20.355  &lt; 2e-16 ***\nORIGIN_GRID1240  3.2288507  0.1004553    32.142  &lt; 2e-16 ***\nORIGIN_GRID1241  2.5925325  0.1008133    25.716  &lt; 2e-16 ***\nORIGIN_GRID1242  1.8390691  0.1011804    18.176  &lt; 2e-16 ***\nORIGIN_GRID1243  0.3575032  0.1106283     3.232 0.001231 ** \nORIGIN_GRID1244  2.0758554  0.1010713    20.539  &lt; 2e-16 ***\nORIGIN_GRID1245  3.7237880  0.1006251    37.007  &lt; 2e-16 ***\nORIGIN_GRID1246  3.1067479  0.1010946    30.731  &lt; 2e-16 ***\nORIGIN_GRID1249  1.2583799  0.1060818    11.862  &lt; 2e-16 ***\nORIGIN_GRID1250  5.3736170  0.1003845    53.530  &lt; 2e-16 ***\nORIGIN_GRID1251  4.9482659  0.1004102    49.281  &lt; 2e-16 ***\nORIGIN_GRID1252  4.3400973  0.1005370    43.169  &lt; 2e-16 ***\nORIGIN_GRID1253  1.7920171  0.1031894    17.366  &lt; 2e-16 ***\nORIGIN_GRID1256  2.7962162  0.1005564    27.807  &lt; 2e-16 ***\nORIGIN_GRID1257  1.6904708  0.1008566    16.761  &lt; 2e-16 ***\nORIGIN_GRID1258  2.7383291  0.1005521    27.233  &lt; 2e-16 ***\nORIGIN_GRID1259  2.5483295  0.1006724    25.313  &lt; 2e-16 ***\nORIGIN_GRID1260  2.3152843  0.1015648    22.796  &lt; 2e-16 ***\nORIGIN_GRID1261  1.4772355  0.1014449    14.562  &lt; 2e-16 ***\nORIGIN_GRID1262  2.8902501  0.1006141    28.726  &lt; 2e-16 ***\nORIGIN_GRID1263  2.9961378  0.1006049    29.781  &lt; 2e-16 ***\nORIGIN_GRID1264  4.0571482  0.1004595    40.386  &lt; 2e-16 ***\nORIGIN_GRID1265  4.1214175  0.1004701    41.021  &lt; 2e-16 ***\nORIGIN_GRID1266  3.0324683  0.1009242    30.047  &lt; 2e-16 ***\nORIGIN_GRID1268  4.1343839  0.1005525    41.117  &lt; 2e-16 ***\nORIGIN_GRID1269  4.5085766  0.1004152    44.899  &lt; 2e-16 ***\nORIGIN_GRID1270  4.5261649  0.1004366    45.065  &lt; 2e-16 ***\nORIGIN_GRID1272  4.5791028  0.1014934    45.117  &lt; 2e-16 ***\nORIGIN_GRID1276  2.3484098  0.1006119    23.341  &lt; 2e-16 ***\nORIGIN_GRID1277  2.3360216  0.1006456    23.210  &lt; 2e-16 ***\nORIGIN_GRID1278  2.6994125  0.1005256    26.853  &lt; 2e-16 ***\nORIGIN_GRID1279  3.5772866  0.1004447    35.615  &lt; 2e-16 ***\nORIGIN_GRID1280  2.8726030  0.1005314    28.574  &lt; 2e-16 ***\nORIGIN_GRID1281  2.3896519  0.1007528    23.718  &lt; 2e-16 ***\nORIGIN_GRID1282  3.0174215  0.1005776    30.001  &lt; 2e-16 ***\nORIGIN_GRID1283  3.2394478  0.1005381    32.221  &lt; 2e-16 ***\nORIGIN_GRID1284  4.0223953  0.1004495    40.044  &lt; 2e-16 ***\nORIGIN_GRID1285  3.4928393  0.1005468    34.738  &lt; 2e-16 ***\nORIGIN_GRID1288  4.5635405  0.1004656    45.424  &lt; 2e-16 ***\nORIGIN_GRID1289  5.4326373  0.1004018    54.109  &lt; 2e-16 ***\nORIGIN_GRID1294  3.1366734  0.1005058    31.209  &lt; 2e-16 ***\nORIGIN_GRID1295  3.1427750  0.1004537    31.286  &lt; 2e-16 ***\nORIGIN_GRID1296  3.2293376  0.1004437    32.151  &lt; 2e-16 ***\nORIGIN_GRID1297  1.8971990  0.1015728    18.678  &lt; 2e-16 ***\nORIGIN_GRID1298  3.4295554  0.1004754    34.133  &lt; 2e-16 ***\nORIGIN_GRID1299  3.8440902  0.1004112    38.283  &lt; 2e-16 ***\nORIGIN_GRID1300  0.8180783  0.1028201     7.956 1.77e-15 ***\nORIGIN_GRID1301  4.0465036  0.1004253    40.294  &lt; 2e-16 ***\nORIGIN_GRID1302  4.4851966  0.1003881    44.679  &lt; 2e-16 ***\nORIGIN_GRID1303  5.1044181  0.1003772    50.852  &lt; 2e-16 ***\nORIGIN_GRID1304  1.4877392  0.1023331    14.538  &lt; 2e-16 ***\nORIGIN_GRID1306  4.4097461  0.1005547    43.854  &lt; 2e-16 ***\nORIGIN_GRID1307  5.4578761  0.1004086    54.357  &lt; 2e-16 ***\nORIGIN_GRID1308  4.4683669  0.1006091    44.413  &lt; 2e-16 ***\nORIGIN_GRID1314  2.3154403  0.1006187    23.012  &lt; 2e-16 ***\nORIGIN_GRID1315  2.4253638  0.1006012    24.109  &lt; 2e-16 ***\nORIGIN_GRID1316  1.4141190  0.1019597    13.869  &lt; 2e-16 ***\nORIGIN_GRID1317  2.8108611  0.1006555    27.926  &lt; 2e-16 ***\nORIGIN_GRID1318  3.2348174  0.1005030    32.186  &lt; 2e-16 ***\nORIGIN_GRID1319  4.0647415  0.1004147    40.480  &lt; 2e-16 ***\nORIGIN_GRID1320  4.4005740  0.1003992    43.831  &lt; 2e-16 ***\nORIGIN_GRID1321  3.8550317  0.1004363    38.383  &lt; 2e-16 ***\nORIGIN_GRID1322  3.1153747  0.1005258    30.991  &lt; 2e-16 ***\nORIGIN_GRID1323  1.6750851  0.1017021    16.470  &lt; 2e-16 ***\nORIGIN_GRID1326  5.8262695  0.1003998    58.031  &lt; 2e-16 ***\nORIGIN_GRID1327  5.3148126  0.1004507    52.910  &lt; 2e-16 ***\nORIGIN_GRID1332  0.8203829  0.1020964     8.035 9.33e-16 ***\nORIGIN_GRID1333  1.8398709  0.1007977    18.253  &lt; 2e-16 ***\nORIGIN_GRID1334  2.9534504  0.1004682    29.397  &lt; 2e-16 ***\nORIGIN_GRID1335  3.9269550  0.1004141    39.108  &lt; 2e-16 ***\nORIGIN_GRID1336  3.2209035  0.1005176    32.043  &lt; 2e-16 ***\nORIGIN_GRID1337  4.7318490  0.1003691    47.144  &lt; 2e-16 ***\nORIGIN_GRID1338  3.0692309  0.1005260    30.532  &lt; 2e-16 ***\nORIGIN_GRID1339  3.2952476  0.1004902    32.792  &lt; 2e-16 ***\nORIGIN_GRID1340  5.0910334  0.1003680    50.724  &lt; 2e-16 ***\nORIGIN_GRID1341  2.4067769  0.1008248    23.871  &lt; 2e-16 ***\nORIGIN_GRID1342  2.7008346  0.1011153    26.710  &lt; 2e-16 ***\nORIGIN_GRID1345  5.2594588  0.1004557    52.356  &lt; 2e-16 ***\nORIGIN_GRID1352  2.1267104  0.1010055    21.055  &lt; 2e-16 ***\nORIGIN_GRID1353  2.2369579  0.1006248    22.231  &lt; 2e-16 ***\nORIGIN_GRID1354  3.3655023  0.1004309    33.511  &lt; 2e-16 ***\nORIGIN_GRID1355  3.5785877  0.1004581    35.623  &lt; 2e-16 ***\nORIGIN_GRID1356  4.0165983  0.1004095    40.002  &lt; 2e-16 ***\nORIGIN_GRID1357  4.2494416  0.1003941    42.328  &lt; 2e-16 ***\nORIGIN_GRID1358  4.1173379  0.1004696    40.981  &lt; 2e-16 ***\nORIGIN_GRID1359  4.4027218  0.1003963    43.853  &lt; 2e-16 ***\nORIGIN_GRID1360  3.8614949  0.1004364    38.447  &lt; 2e-16 ***\nORIGIN_GRID1364 -0.0124625  0.1477813    -0.084 0.932793    \nORIGIN_GRID1371  1.2117668  0.1025213    11.820  &lt; 2e-16 ***\nORIGIN_GRID1372  2.7295755  0.1005370    27.150  &lt; 2e-16 ***\nORIGIN_GRID1373  2.9731150  0.1005500    29.569  &lt; 2e-16 ***\nORIGIN_GRID1374  2.9638210  0.1005854    29.466  &lt; 2e-16 ***\nORIGIN_GRID1375  4.2380819  0.1004455    42.193  &lt; 2e-16 ***\nORIGIN_GRID1376  2.9614732  0.1005582    29.450  &lt; 2e-16 ***\nORIGIN_GRID1377  2.2279091  0.1009136    22.077  &lt; 2e-16 ***\nORIGIN_GRID1378  4.6002901  0.1003886    45.825  &lt; 2e-16 ***\nORIGIN_GRID1379  3.1240346  0.1014285    30.800  &lt; 2e-16 ***\nORIGIN_GRID1380  3.3078147  0.1007442    32.834  &lt; 2e-16 ***\nORIGIN_GRID1383  3.3016061  0.1015879    32.500  &lt; 2e-16 ***\nORIGIN_GRID1389  0.0971791  0.1240036     0.784 0.433228    \nORIGIN_GRID1390  0.3923299  0.1053982     3.722 0.000197 ***\nORIGIN_GRID1391  1.5321171  0.1015189    15.092  &lt; 2e-16 ***\nORIGIN_GRID1392  2.8678219  0.1005036    28.535  &lt; 2e-16 ***\nORIGIN_GRID1393  3.3309890  0.1004503    33.161  &lt; 2e-16 ***\nORIGIN_GRID1394  3.8955756  0.1004177    38.794  &lt; 2e-16 ***\nORIGIN_GRID1395  5.1175752  0.1004610    50.941  &lt; 2e-16 ***\nORIGIN_GRID1396  2.1256656  0.1013470    20.974  &lt; 2e-16 ***\nORIGIN_GRID1397  2.9459602  0.1022316    28.817  &lt; 2e-16 ***\nORIGIN_GRID1398  3.8259089  0.1005299    38.057  &lt; 2e-16 ***\nORIGIN_GRID1401  0.7096012  0.1157955     6.128 8.90e-10 ***\nORIGIN_GRID1408  0.9190158  0.1154920     7.957 1.76e-15 ***\nORIGIN_GRID1409  0.6188937  0.1049451     5.897 3.69e-09 ***\nORIGIN_GRID1410  1.7817275  0.1018537    17.493  &lt; 2e-16 ***\nORIGIN_GRID1411  3.4974748  0.1004344    34.823  &lt; 2e-16 ***\nORIGIN_GRID1412  4.3189151  0.1003896    43.022  &lt; 2e-16 ***\nORIGIN_GRID1413  4.1475903  0.1004279    41.299  &lt; 2e-16 ***\nORIGIN_GRID1414  1.2486750  0.1021118    12.229  &lt; 2e-16 ***\nORIGIN_GRID1415  3.0338587  0.1005748    30.165  &lt; 2e-16 ***\nORIGIN_GRID1416  2.1660685  0.1011180    21.421  &lt; 2e-16 ***\nORIGIN_GRID1417  2.2561906  0.1012019    22.294  &lt; 2e-16 ***\nORIGIN_GRID1418  2.0015670  0.1021308    19.598  &lt; 2e-16 ***\nORIGIN_GRID1419  0.0274831  0.1261869     0.218 0.827588    \nORIGIN_GRID1420  0.8837505  0.1175793     7.516 5.64e-14 ***\nORIGIN_GRID1428 -2.2013463  0.7142242    -3.082 0.002055 ** \nORIGIN_GRID1430  2.0483768  0.1014086    20.199  &lt; 2e-16 ***\nORIGIN_GRID1431  0.7217068  0.1022156     7.061 1.66e-12 ***\nORIGIN_GRID1432  4.0242258  0.1003969    40.083  &lt; 2e-16 ***\nORIGIN_GRID1433  2.2209382  0.1022513    21.720  &lt; 2e-16 ***\nORIGIN_GRID1434  2.5416837  0.1008105    25.212  &lt; 2e-16 ***\nORIGIN_GRID1435  3.2215187  0.1007090    31.988  &lt; 2e-16 ***\nORIGIN_GRID1436  2.2514803  0.1010397    22.283  &lt; 2e-16 ***\nORIGIN_GRID1439 -0.6400029  0.1502534    -4.259 2.05e-05 ***\nORIGIN_GRID1440  0.9342059  0.1156503     8.078 6.59e-16 ***\nORIGIN_GRID1448  4.1085143  0.1008005    40.759  &lt; 2e-16 ***\nORIGIN_GRID1449  2.6239020  0.1005811    26.087  &lt; 2e-16 ***\nORIGIN_GRID1450  3.2776731  0.1004957    32.615  &lt; 2e-16 ***\nORIGIN_GRID1451  4.2258717  0.1004006    42.090  &lt; 2e-16 ***\nORIGIN_GRID1452  2.7136636  0.1006090    26.972  &lt; 2e-16 ***\nORIGIN_GRID1453  4.1054916  0.1004116    40.887  &lt; 2e-16 ***\nORIGIN_GRID1454  3.6005085  0.1007212    35.747  &lt; 2e-16 ***\nORIGIN_GRID1455  2.8378509  0.1007441    28.169  &lt; 2e-16 ***\nORIGIN_GRID1456  4.9127697  0.1004223    48.921  &lt; 2e-16 ***\nORIGIN_GRID1457  4.7755235  0.1004779    47.528  &lt; 2e-16 ***\nORIGIN_GRID1458  1.3081999  0.1181180    11.075  &lt; 2e-16 ***\nORIGIN_GRID1468  2.6782458  0.1023562    26.166  &lt; 2e-16 ***\nORIGIN_GRID1469  3.9906016  0.1004035    39.746  &lt; 2e-16 ***\nORIGIN_GRID1470  2.7390243  0.1006340    27.218  &lt; 2e-16 ***\nORIGIN_GRID1471  4.1386348  0.1004270    41.210  &lt; 2e-16 ***\nORIGIN_GRID1472  4.8170133  0.1003810    47.987  &lt; 2e-16 ***\nORIGIN_GRID1473  3.2294124  0.1005527    32.117  &lt; 2e-16 ***\nORIGIN_GRID1474  4.9174697  0.1003856    48.986  &lt; 2e-16 ***\nORIGIN_GRID1475  3.8685725  0.1005482    38.475  &lt; 2e-16 ***\nORIGIN_GRID1476  3.9688358  0.1006174    39.445  &lt; 2e-16 ***\nORIGIN_GRID1477  0.3842721  0.1164941     3.299 0.000972 ***\nORIGIN_GRID1486  1.4775062  0.1039719    14.211  &lt; 2e-16 ***\nORIGIN_GRID1487  3.8931747  0.1004192    38.769  &lt; 2e-16 ***\nORIGIN_GRID1488  1.6770758  0.1015629    16.513  &lt; 2e-16 ***\nORIGIN_GRID1489  3.1970348  0.1004974    31.812  &lt; 2e-16 ***\nORIGIN_GRID1490  2.9811898  0.1006888    29.608  &lt; 2e-16 ***\nORIGIN_GRID1491  3.4427572  0.1004759    34.265  &lt; 2e-16 ***\nORIGIN_GRID1492  4.0557127  0.1004336    40.382  &lt; 2e-16 ***\nORIGIN_GRID1493  4.7834727  0.1003941    47.647  &lt; 2e-16 ***\nORIGIN_GRID1494  4.8709489  0.1004619    48.486  &lt; 2e-16 ***\nORIGIN_GRID1506 -1.1537758  0.1946619    -5.927 3.08e-09 ***\nORIGIN_GRID1507  4.1027887  0.1004013    40.864  &lt; 2e-16 ***\nORIGIN_GRID1508  2.8200367  0.1005519    28.046  &lt; 2e-16 ***\nORIGIN_GRID1509  3.7076800  0.1008552    36.762  &lt; 2e-16 ***\nORIGIN_GRID1510  3.9296704  0.1004303    39.128  &lt; 2e-16 ***\nORIGIN_GRID1512  4.8248459  0.1003844    48.064  &lt; 2e-16 ***\nORIGIN_GRID1513  5.4853404  0.1004586    54.603  &lt; 2e-16 ***\nORIGIN_GRID1514  5.0959626  0.1004958    50.708  &lt; 2e-16 ***\nORIGIN_GRID1524  3.2076518  0.1010123    31.755  &lt; 2e-16 ***\nORIGIN_GRID1525  3.6599921  0.1004601    36.432  &lt; 2e-16 ***\nORIGIN_GRID1526  3.5222767  0.1004622    35.061  &lt; 2e-16 ***\nORIGIN_GRID1527  3.1248032  0.1005814    31.067  &lt; 2e-16 ***\nORIGIN_GRID1528  2.7041203  0.1006530    26.866  &lt; 2e-16 ***\nORIGIN_GRID1529  2.2964246  0.1010229    22.732  &lt; 2e-16 ***\nORIGIN_GRID1530  3.7036151  0.1005291    36.841  &lt; 2e-16 ***\nORIGIN_GRID1531  4.5104815  0.1004211    44.916  &lt; 2e-16 ***\nORIGIN_GRID1532  4.1015858  0.1006369    40.756  &lt; 2e-16 ***\nORIGIN_GRID1544  3.6412357  0.1005106    36.227  &lt; 2e-16 ***\nORIGIN_GRID1545  3.5326297  0.1004454    35.170  &lt; 2e-16 ***\nORIGIN_GRID1546  4.0396841  0.1004072    40.233  &lt; 2e-16 ***\nORIGIN_GRID1547  3.1295591  0.1005368    31.128  &lt; 2e-16 ***\nORIGIN_GRID1548  4.4000490  0.1004112    43.820  &lt; 2e-16 ***\nORIGIN_GRID1549  4.2323069  0.1004431    42.136  &lt; 2e-16 ***\nORIGIN_GRID1550  4.8420631  0.1003838    48.236  &lt; 2e-16 ***\nORIGIN_GRID1551  2.4663273  0.1010734    24.401  &lt; 2e-16 ***\nORIGIN_GRID1552  5.0742758  0.1004347    50.523  &lt; 2e-16 ***\nORIGIN_GRID1563  3.8224049  0.1004581    38.050  &lt; 2e-16 ***\nORIGIN_GRID1564  3.6793351  0.1004369    36.633  &lt; 2e-16 ***\nORIGIN_GRID1565  3.1961327  0.1004797    31.809  &lt; 2e-16 ***\nORIGIN_GRID1566  1.3160262  0.1022961    12.865  &lt; 2e-16 ***\nORIGIN_GRID1567  3.8069843  0.1004692    37.892  &lt; 2e-16 ***\nORIGIN_GRID1568  4.5221741  0.1003943    45.044  &lt; 2e-16 ***\nORIGIN_GRID1569  4.2347578  0.1004264    42.168  &lt; 2e-16 ***\nORIGIN_GRID1570  4.6646554  0.1004198    46.452  &lt; 2e-16 ***\nORIGIN_GRID1571  6.3383146  0.1005369    63.045  &lt; 2e-16 ***\nORIGIN_GRID1582  2.6096535  0.1007477    25.903  &lt; 2e-16 ***\nORIGIN_GRID1583  3.5392910  0.1004479    35.235  &lt; 2e-16 ***\nORIGIN_GRID1584  2.6649363  0.1005803    26.496  &lt; 2e-16 ***\nORIGIN_GRID1585  2.0091924  0.1008823    19.916  &lt; 2e-16 ***\nORIGIN_GRID1587  4.5424239  0.1004021    45.242  &lt; 2e-16 ***\nORIGIN_GRID1588  4.9109165  0.1003831    48.922  &lt; 2e-16 ***\nORIGIN_GRID1589  4.3969216  0.1004242    43.783  &lt; 2e-16 ***\nORIGIN_GRID1590  4.3767091  0.1004673    43.564  &lt; 2e-16 ***\nORIGIN_GRID1591  2.8393343  0.1033304    27.478  &lt; 2e-16 ***\nORIGIN_GRID1601  3.4128141  0.1004883    33.962  &lt; 2e-16 ***\nORIGIN_GRID1602  3.0502560  0.1007838    30.265  &lt; 2e-16 ***\nORIGIN_GRID1603  2.2463424  0.1008136    22.282  &lt; 2e-16 ***\nORIGIN_GRID1604  1.0377954  0.1030797    10.068  &lt; 2e-16 ***\nORIGIN_GRID1606  4.2421818  0.1004186    42.245  &lt; 2e-16 ***\nORIGIN_GRID1607  3.9117347  0.1004731    38.933  &lt; 2e-16 ***\nORIGIN_GRID1608  5.1039318  0.1003881    50.842  &lt; 2e-16 ***\nORIGIN_GRID1609  5.1580358  0.1004093    51.370  &lt; 2e-16 ***\nORIGIN_GRID1610  4.9177529  0.1010202    48.681  &lt; 2e-16 ***\nORIGIN_GRID1620  4.0682166  0.1004432    40.503  &lt; 2e-16 ***\nORIGIN_GRID1621  3.3740331  0.1005226    33.565  &lt; 2e-16 ***\nORIGIN_GRID1622  3.3900586  0.1005390    33.719  &lt; 2e-16 ***\nORIGIN_GRID1623  1.4035958  0.1012262    13.866  &lt; 2e-16 ***\nORIGIN_GRID1624  1.1382048  0.1040845    10.935  &lt; 2e-16 ***\nORIGIN_GRID1625  0.7067001  0.1055435     6.696 2.14e-11 ***\nORIGIN_GRID1626  4.7805842  0.1004160    47.608  &lt; 2e-16 ***\nORIGIN_GRID1627  4.7469716  0.1004048    47.278  &lt; 2e-16 ***\nORIGIN_GRID1628  4.7727487  0.1004068    47.534  &lt; 2e-16 ***\nORIGIN_GRID1629  4.0015036  0.1006173    39.770  &lt; 2e-16 ***\nORIGIN_GRID1630  3.1040658  0.1042563    29.773  &lt; 2e-16 ***\nORIGIN_GRID1639  3.1066196  0.1005868    30.885  &lt; 2e-16 ***\nORIGIN_GRID1640  4.2935778  0.1003926    42.768  &lt; 2e-16 ***\nORIGIN_GRID1641  4.0712944  0.1004048    40.549  &lt; 2e-16 ***\nORIGIN_GRID1645  4.6342430  0.1004663    46.127  &lt; 2e-16 ***\nORIGIN_GRID1646  4.6087431  0.1004261    45.892  &lt; 2e-16 ***\nORIGIN_GRID1647  5.1188848  0.1003998    50.985  &lt; 2e-16 ***\nORIGIN_GRID1648  2.3004387  0.1057511    21.753  &lt; 2e-16 ***\nORIGIN_GRID1658  3.8926115  0.1004637    38.746  &lt; 2e-16 ***\nORIGIN_GRID1659  3.3535372  0.1004992    33.369  &lt; 2e-16 ***\nORIGIN_GRID1660  3.6832193  0.1004312    36.674  &lt; 2e-16 ***\nORIGIN_GRID1661  2.9759435  0.1005925    29.584  &lt; 2e-16 ***\nORIGIN_GRID1663  0.3127419  0.1173660     2.665 0.007706 ** \nORIGIN_GRID1665  4.2353205  0.1005434    42.124  &lt; 2e-16 ***\nORIGIN_GRID1666  5.8784438  0.1003705    58.567  &lt; 2e-16 ***\nORIGIN_GRID1667  1.7592956  0.1060856    16.584  &lt; 2e-16 ***\nORIGIN_GRID1668  5.8089827  0.1009149    57.563  &lt; 2e-16 ***\nORIGIN_GRID1677  3.7237178  0.1004493    37.071  &lt; 2e-16 ***\nORIGIN_GRID1678  3.9818543  0.1004341    39.646  &lt; 2e-16 ***\nORIGIN_GRID1679  4.2534152  0.1004145    42.359  &lt; 2e-16 ***\nORIGIN_GRID1682  2.0130166  0.1034967    19.450  &lt; 2e-16 ***\nORIGIN_GRID1684  5.3947954  0.1006835    53.582  &lt; 2e-16 ***\nORIGIN_GRID1685  4.8437123  0.1004347    48.227  &lt; 2e-16 ***\nORIGIN_GRID1696  3.9358875  0.1005060    39.161  &lt; 2e-16 ***\nORIGIN_GRID1697  2.2986051  0.1010858    22.739  &lt; 2e-16 ***\nORIGIN_GRID1698  4.3815802  0.1008352    43.453  &lt; 2e-16 ***\nORIGIN_GRID1699  3.9644766  0.1004412    39.471  &lt; 2e-16 ***\nORIGIN_GRID1702  0.3207106  0.1124336     2.852 0.004338 ** \nORIGIN_GRID1704  4.6961257  0.1004498    46.751  &lt; 2e-16 ***\nORIGIN_GRID1705  5.1851960  0.1007285    51.477  &lt; 2e-16 ***\nORIGIN_GRID1715  4.0587357  0.1004366    40.411  &lt; 2e-16 ***\nORIGIN_GRID1716  2.3524739  0.1007940    23.339  &lt; 2e-16 ***\nORIGIN_GRID1717  3.0363696  0.1007112    30.149  &lt; 2e-16 ***\nORIGIN_GRID1718 -1.2598371  0.1661846    -7.581 3.43e-14 ***\nORIGIN_GRID1721  0.5770669  0.1163675     4.959 7.09e-07 ***\nORIGIN_GRID1723  4.2670157  0.1007121    42.368  &lt; 2e-16 ***\nORIGIN_GRID1735  2.6771438  0.1007270    26.578  &lt; 2e-16 ***\nORIGIN_GRID1736  4.0603058  0.1004904    40.405  &lt; 2e-16 ***\nORIGIN_GRID1737  3.9462787  0.1004577    39.283  &lt; 2e-16 ***\nORIGIN_GRID1740  1.7878938  0.1042669    17.147  &lt; 2e-16 ***\nORIGIN_GRID1742  4.4075249  0.1007506    43.747  &lt; 2e-16 ***\nORIGIN_GRID1753  3.4539981  0.1005501    34.351  &lt; 2e-16 ***\nORIGIN_GRID1754  4.0542914  0.1004257    40.371  &lt; 2e-16 ***\nORIGIN_GRID1755  4.6460170  0.1004116    46.270  &lt; 2e-16 ***\nORIGIN_GRID1758  0.3882538  0.1107970     3.504 0.000458 ***\nORIGIN_GRID1773  3.0133632  0.1006803    29.930  &lt; 2e-16 ***\nORIGIN_GRID1774  4.9926200  0.1003717    49.741  &lt; 2e-16 ***\nORIGIN_GRID1775  3.4138693  0.1005523    33.951  &lt; 2e-16 ***\nORIGIN_GRID1776  4.4017022  0.1004211    43.832  &lt; 2e-16 ***\nORIGIN_GRID1778 -0.5593783  0.1335563    -4.188 2.81e-05 ***\nORIGIN_GRID1791  3.3287210  0.1006205    33.082  &lt; 2e-16 ***\nORIGIN_GRID1792  1.6088969  0.1012374    15.892  &lt; 2e-16 ***\nORIGIN_GRID1793  4.0405571  0.1004225    40.236  &lt; 2e-16 ***\nORIGIN_GRID1794  3.1229467  0.1008979    30.952  &lt; 2e-16 ***\nORIGIN_GRID1795  4.3504977  0.1004234    43.322  &lt; 2e-16 ***\nORIGIN_GRID1796  3.1205351  0.1006043    31.018  &lt; 2e-16 ***\nORIGIN_GRID1797  3.8008685  0.1005210    37.812  &lt; 2e-16 ***\nORIGIN_GRID1811  3.6135332  0.1004952    35.957  &lt; 2e-16 ***\nORIGIN_GRID1812  4.1778351  0.1004006    41.612  &lt; 2e-16 ***\nORIGIN_GRID1813  3.7744930  0.1004546    37.574  &lt; 2e-16 ***\nORIGIN_GRID1814  4.4451884  0.1004160    44.268  &lt; 2e-16 ***\nORIGIN_GRID1815  4.3207644  0.1004163    43.029  &lt; 2e-16 ***\nORIGIN_GRID1816  2.8727594  0.1007390    28.517  &lt; 2e-16 ***\nORIGIN_GRID1817  2.2820277  0.1015593    22.470  &lt; 2e-16 ***\nORIGIN_GRID1830  4.0136237  0.1004923    39.940  &lt; 2e-16 ***\nORIGIN_GRID1831  4.4319056  0.1003981    44.143  &lt; 2e-16 ***\nORIGIN_GRID1832  3.7461805  0.1004388    37.298  &lt; 2e-16 ***\nORIGIN_GRID1833  3.7789833  0.1004347    37.626  &lt; 2e-16 ***\nORIGIN_GRID1834  2.3851395  0.1009805    23.620  &lt; 2e-16 ***\nORIGIN_GRID1835  4.6858366  0.1004106    46.667  &lt; 2e-16 ***\nORIGIN_GRID1849  3.3360326  0.1006053    33.160  &lt; 2e-16 ***\nORIGIN_GRID1850  4.0483539  0.1004180    40.315  &lt; 2e-16 ***\nORIGIN_GRID1851 -0.5061411  0.1248928    -4.053 5.07e-05 ***\nORIGIN_GRID1852  3.9899245  0.1004048    39.738  &lt; 2e-16 ***\nORIGIN_GRID1853  3.8033995  0.1004588    37.860  &lt; 2e-16 ***\nORIGIN_GRID1854  4.0240396  0.1004361    40.066  &lt; 2e-16 ***\nORIGIN_GRID1855  3.0463682  0.1012544    30.086  &lt; 2e-16 ***\nORIGIN_GRID1868  4.0477663  0.1004468    40.298  &lt; 2e-16 ***\nORIGIN_GRID1869  2.5138968  0.1006642    24.973  &lt; 2e-16 ***\nORIGIN_GRID1870  2.0722631  0.1024070    20.236  &lt; 2e-16 ***\nORIGIN_GRID1871  5.2382040  0.1003677    52.190  &lt; 2e-16 ***\nORIGIN_GRID1872  3.6077382  0.1005565    35.878  &lt; 2e-16 ***\nORIGIN_GRID1873  3.8961763  0.1004788    38.776  &lt; 2e-16 ***\nORIGIN_GRID1887  2.9128137  0.1007493    28.912  &lt; 2e-16 ***\nORIGIN_GRID1888  4.3055704  0.1004122    42.879  &lt; 2e-16 ***\nORIGIN_GRID1889  2.9572027  0.1005787    29.402  &lt; 2e-16 ***\nORIGIN_GRID1890  3.6574427  0.1004318    36.417  &lt; 2e-16 ***\nORIGIN_GRID1891  3.3659328  0.1005355    33.480  &lt; 2e-16 ***\nORIGIN_GRID1892  4.9151352  0.1003899    48.960  &lt; 2e-16 ***\nORIGIN_GRID1893  0.2257454  0.1211709     1.863 0.062458 .  \nORIGIN_GRID1905  0.7885154  0.1423960     5.537 3.07e-08 ***\nORIGIN_GRID1906  1.2633325  0.1020534    12.379  &lt; 2e-16 ***\nORIGIN_GRID1907  2.3358254  0.1007405    23.187  &lt; 2e-16 ***\nORIGIN_GRID1908  3.6510111  0.1004730    36.338  &lt; 2e-16 ***\nORIGIN_GRID1909  3.7117763  0.1004302    36.959  &lt; 2e-16 ***\nORIGIN_GRID1910  3.1655524  0.1005805    31.473  &lt; 2e-16 ***\nORIGIN_GRID1911  0.5624188  0.1077368     5.220 1.79e-07 ***\nORIGIN_GRID1926  2.1941814  0.1011559    21.691  &lt; 2e-16 ***\nORIGIN_GRID1927  1.5391093  0.1013556    15.185  &lt; 2e-16 ***\nORIGIN_GRID1928  4.1444689  0.1004054    41.277  &lt; 2e-16 ***\nORIGIN_GRID1929  4.5140170  0.1004294    44.947  &lt; 2e-16 ***\nORIGIN_GRID1930  3.4735554  0.1005023    34.562  &lt; 2e-16 ***\nORIGIN_GRID1944  3.0424382  0.1009226    30.146  &lt; 2e-16 ***\nORIGIN_GRID1945  1.2736478  0.1017123    12.522  &lt; 2e-16 ***\nORIGIN_GRID1946  4.0555560  0.1004328    40.381  &lt; 2e-16 ***\nORIGIN_GRID1947  4.5281072  0.1003915    45.104  &lt; 2e-16 ***\nORIGIN_GRID1948  4.7059291  0.1004001    46.872  &lt; 2e-16 ***\nORIGIN_GRID1949  4.0117287  0.1004832    39.924  &lt; 2e-16 ***\nORIGIN_GRID1965  3.0446920  0.1005747    30.273  &lt; 2e-16 ***\nORIGIN_GRID1966  3.2059247  0.1006223    31.861  &lt; 2e-16 ***\nORIGIN_GRID1967  3.6627910  0.1004593    36.460  &lt; 2e-16 ***\nORIGIN_GRID1968  3.9883964  0.1004645    39.700  &lt; 2e-16 ***\nORIGIN_GRID1983  2.4894898  0.1008632    24.682  &lt; 2e-16 ***\nORIGIN_GRID1984  2.4156324  0.1008988    23.941  &lt; 2e-16 ***\nORIGIN_GRID1985  3.3786406  0.1005139    33.614  &lt; 2e-16 ***\nORIGIN_GRID1986  3.8320741  0.1004554    38.147  &lt; 2e-16 ***\nORIGIN_GRID1987  3.2184486  0.1023088    31.458  &lt; 2e-16 ***\nORIGIN_GRID2002  0.2854377  0.1282743     2.225 0.026067 *  \nORIGIN_GRID2003  0.3128595  0.1073872     2.913 0.003575 ** \nORIGIN_GRID2004  1.0634358  0.1032775    10.297  &lt; 2e-16 ***\nORIGIN_GRID2005  3.5322168  0.1005475    35.130  &lt; 2e-16 ***\nORIGIN_GRID2006  2.4894948  0.1008931    24.675  &lt; 2e-16 ***\nORIGIN_GRID2021  0.7605717  0.1075981     7.069 1.56e-12 ***\nORIGIN_GRID2022  2.0266977  0.1022691    19.817  &lt; 2e-16 ***\nORIGIN_GRID2023  2.2722335  0.1011794    22.457  &lt; 2e-16 ***\nORIGIN_GRID2024  2.2309654  0.1011129    22.064  &lt; 2e-16 ***\nORIGIN_GRID2025  0.1305584  0.1136948     1.148 0.250835    \nORIGIN_GRID2042 -0.3841019  0.1122685    -3.421 0.000623 ***\nORIGIN_GRID2043  2.0328849  0.1020142    19.927  &lt; 2e-16 ***\nORIGIN_GRID2044  1.2889843  0.1018536    12.655  &lt; 2e-16 ***\nORIGIN_GRID2045  1.1388285  0.1063584    10.707  &lt; 2e-16 ***\nORIGIN_GRID2061  1.9474902  0.1077475    18.075  &lt; 2e-16 ***\nORIGIN_GRID2062  2.7109497  0.1014369    26.725  &lt; 2e-16 ***\nORIGIN_GRID2063  1.1779455  0.1021373    11.533  &lt; 2e-16 ***\nORIGIN_GRID2064 -0.5963615  0.1421129    -4.196 2.71e-05 ***\nORIGIN_GRID2079  3.9092839  0.1007099    38.817  &lt; 2e-16 ***\nORIGIN_GRID2082  0.0301269  0.1166769     0.258 0.796247    \nORIGIN_GRID2083  1.5481797  0.1019790    15.181  &lt; 2e-16 ***\nORIGIN_GRID2098  2.0110736  0.1019634    19.723  &lt; 2e-16 ***\nORIGIN_GRID2099  2.7355754  0.1008447    27.127  &lt; 2e-16 ***\nORIGIN_GRID2102  2.6181318  0.1010629    25.906  &lt; 2e-16 ***\nORIGIN_GRID2115  3.5801789  0.1018460    35.153  &lt; 2e-16 ***\nORIGIN_GRID2119  3.1909978  0.1007496    31.673  &lt; 2e-16 ***\nORIGIN_GRID2121  1.9018113  0.1013112    18.772  &lt; 2e-16 ***\nORIGIN_GRID2137  2.5319019  0.1008924    25.095  &lt; 2e-16 ***\nORIGIN_GRID2140 -0.7443160  0.1192766    -6.240 4.37e-10 ***\nORIGIN_GRID2153  2.7345819  0.1024475    26.693  &lt; 2e-16 ***\nORIGIN_GRID2158  1.9583535  0.1013984    19.313  &lt; 2e-16 ***\nORIGIN_GRID2177  1.6570356  0.1014083    16.340  &lt; 2e-16 ***\nORIGIN_GRID2178  0.2839278  0.1057135     2.686 0.007235 ** \nORIGIN_GRID2196  1.1727181  0.1038060    11.297  &lt; 2e-16 ***\nORIGIN_GRID2197  2.7058512  0.1009259    26.810  &lt; 2e-16 ***\nORIGIN_GRID2267  2.8722097  0.1069556    26.854  &lt; 2e-16 ***\nDESTIN_GRID40    1.3498193  0.0506956    26.626  &lt; 2e-16 ***\nDESTIN_GRID42    0.1294631  0.0508711     2.545 0.010930 *  \nDESTIN_GRID60   -0.4145520  0.0634263    -6.536 6.32e-11 ***\nDESTIN_GRID61    0.2366424  0.0485588     4.873 1.10e-06 ***\nDESTIN_GRID62   -0.2002023  0.0507545    -3.945 8.00e-05 ***\nDESTIN_GRID78    0.2641559  0.0576175     4.585 4.55e-06 ***\nDESTIN_GRID79   -3.3442287  0.0996041   -33.575  &lt; 2e-16 ***\nDESTIN_GRID80   -0.3196461  0.0495770    -6.447 1.14e-10 ***\nDESTIN_GRID81   -1.1531601  0.0520613   -22.150  &lt; 2e-16 ***\nDESTIN_GRID82   -3.3314584  0.5024197    -6.631 3.34e-11 ***\nDESTIN_GRID99   -0.8762363  0.0531097   -16.499  &lt; 2e-16 ***\nDESTIN_GRID100  -3.3145442  0.1106911   -29.944  &lt; 2e-16 ***\nDESTIN_GRID101   0.9570190  0.0478226    20.012  &lt; 2e-16 ***\nDESTIN_GRID102  -2.5499704  0.0553286   -46.088  &lt; 2e-16 ***\nDESTIN_GRID116   1.0922014  0.0515109    21.203  &lt; 2e-16 ***\nDESTIN_GRID117  -4.4520720  0.1223459   -36.389  &lt; 2e-16 ***\nDESTIN_GRID118  -0.9112834  0.0514988   -17.695  &lt; 2e-16 ***\nDESTIN_GRID119  -1.3890565  0.0526627   -26.376  &lt; 2e-16 ***\nDESTIN_GRID120  -0.5962950  0.0486865   -12.248  &lt; 2e-16 ***\nDESTIN_GRID121  -1.0526878  0.0480526   -21.907  &lt; 2e-16 ***\nDESTIN_GRID122  -0.9244976  0.0478839   -19.307  &lt; 2e-16 ***\nDESTIN_GRID136  -0.5870596  0.0570714   -10.286  &lt; 2e-16 ***\nDESTIN_GRID137  -0.6580861  0.0511915   -12.855  &lt; 2e-16 ***\nDESTIN_GRID138   0.4353864  0.0487289     8.935  &lt; 2e-16 ***\nDESTIN_GRID139  -0.2823506  0.0485499    -5.816 6.04e-09 ***\nDESTIN_GRID140  -2.4573821  0.0536801   -45.778  &lt; 2e-16 ***\nDESTIN_GRID141  -1.7783175  0.0495614   -35.881  &lt; 2e-16 ***\nDESTIN_GRID142  -1.7372823  0.0505149   -34.391  &lt; 2e-16 ***\nDESTIN_GRID156  -1.8805209  0.0645527   -29.132  &lt; 2e-16 ***\nDESTIN_GRID158  -1.3114722  0.0490612   -26.731  &lt; 2e-16 ***\nDESTIN_GRID159  -0.7737778  0.0475668   -16.267  &lt; 2e-16 ***\nDESTIN_GRID160  -2.2991591  0.0544450   -42.229  &lt; 2e-16 ***\nDESTIN_GRID177  -2.7528645  0.0555898   -49.521  &lt; 2e-16 ***\nDESTIN_GRID178  -1.2502598  0.0476685   -26.228  &lt; 2e-16 ***\nDESTIN_GRID179  -3.6323660  0.0986804   -36.809  &lt; 2e-16 ***\nDESTIN_GRID195  -0.6323111  0.0543060   -11.643  &lt; 2e-16 ***\nDESTIN_GRID196  -0.8540005  0.0491528   -17.374  &lt; 2e-16 ***\nDESTIN_GRID197  -0.5104485  0.0474753   -10.752  &lt; 2e-16 ***\nDESTIN_GRID215  -2.8172763  0.0548072   -51.403  &lt; 2e-16 ***\nDESTIN_GRID216  -1.9163908  0.0489240   -39.171  &lt; 2e-16 ***\nDESTIN_GRID217  -2.0643376  0.0551728   -37.416  &lt; 2e-16 ***\nDESTIN_GRID233   0.2264774  0.0491690     4.606 4.10e-06 ***\nDESTIN_GRID234  -1.8013355  0.0505780   -35.615  &lt; 2e-16 ***\nDESTIN_GRID235  -0.6962958  0.0481628   -14.457  &lt; 2e-16 ***\nDESTIN_GRID252   0.2754400  0.0492857     5.589 2.29e-08 ***\nDESTIN_GRID253  -1.2489983  0.0483841   -25.814  &lt; 2e-16 ***\nDESTIN_GRID254  -0.9032870  0.0482504   -18.721  &lt; 2e-16 ***\nDESTIN_GRID270  -3.9413429  0.1405411   -28.044  &lt; 2e-16 ***\nDESTIN_GRID271  -0.9766085  0.0494172   -19.763  &lt; 2e-16 ***\nDESTIN_GRID272  -1.4934074  0.0496318   -30.090  &lt; 2e-16 ***\nDESTIN_GRID290   0.2591638  0.0487301     5.318 1.05e-07 ***\nDESTIN_GRID291  -1.8128111  0.0521202   -34.781  &lt; 2e-16 ***\nDESTIN_GRID292  -0.7376978  0.0481133   -15.333  &lt; 2e-16 ***\nDESTIN_GRID308   1.0510628  0.0480466    21.876  &lt; 2e-16 ***\nDESTIN_GRID309  -0.2014130  0.0481643    -4.182 2.89e-05 ***\nDESTIN_GRID310  -0.7329815  0.0478340   -15.323  &lt; 2e-16 ***\nDESTIN_GRID329  -0.8567799  0.0486683   -17.604  &lt; 2e-16 ***\nDESTIN_GRID330  -0.7553754  0.0473542   -15.952  &lt; 2e-16 ***\nDESTIN_GRID347   0.1720765  0.0475682     3.617 0.000297 ***\nDESTIN_GRID348  -1.0227507  0.0474691   -21.546  &lt; 2e-16 ***\nDESTIN_GRID349  -1.9900476  0.0490842   -40.544  &lt; 2e-16 ***\nDESTIN_GRID366  -0.0152130  0.0490784    -0.310 0.756581    \nDESTIN_GRID367  -0.3830005  0.0478892    -7.998 1.27e-15 ***\nDESTIN_GRID368   0.0417043  0.0470540     0.886 0.375452    \nDESTIN_GRID369  -0.3099794  0.0476064    -6.511 7.45e-11 ***\nDESTIN_GRID370   0.8823423  0.0470800    18.741  &lt; 2e-16 ***\nDESTIN_GRID385  -1.8353223  0.0524421   -34.997  &lt; 2e-16 ***\nDESTIN_GRID386  -1.4834664  0.0478835   -30.981  &lt; 2e-16 ***\nDESTIN_GRID387  -3.8643673  0.0521879   -74.047  &lt; 2e-16 ***\nDESTIN_GRID388  -1.2834366  0.0480195   -26.727  &lt; 2e-16 ***\nDESTIN_GRID389  -1.6815120  0.0521232   -32.260  &lt; 2e-16 ***\nDESTIN_GRID404  -0.7591179  0.0517727   -14.663  &lt; 2e-16 ***\nDESTIN_GRID405  -1.7031383  0.0498318   -34.178  &lt; 2e-16 ***\nDESTIN_GRID406  -1.9664058  0.0481532   -40.836  &lt; 2e-16 ***\nDESTIN_GRID407  -1.4191572  0.0474337   -29.919  &lt; 2e-16 ***\nDESTIN_GRID408  -1.7905626  0.0483488   -37.034  &lt; 2e-16 ***\nDESTIN_GRID424  -0.9403707  0.0478501   -19.652  &lt; 2e-16 ***\nDESTIN_GRID425  -1.8445165  0.0475800   -38.767  &lt; 2e-16 ***\nDESTIN_GRID426  -1.4515221  0.0473237   -30.672  &lt; 2e-16 ***\nDESTIN_GRID427  -1.2951671  0.0493661   -26.236  &lt; 2e-16 ***\nDESTIN_GRID442  -0.9253168  0.0519119   -17.825  &lt; 2e-16 ***\nDESTIN_GRID443  -2.9803524  0.0665278   -44.799  &lt; 2e-16 ***\nDESTIN_GRID444  -1.0016307  0.0475296   -21.074  &lt; 2e-16 ***\nDESTIN_GRID445  -3.2964679  0.0491176   -67.114  &lt; 2e-16 ***\nDESTIN_GRID447  -3.9492060  0.0680709   -58.016  &lt; 2e-16 ***\nDESTIN_GRID448  -2.0838649  0.0517423   -40.274  &lt; 2e-16 ***\nDESTIN_GRID461  -0.4818072  0.0491050    -9.812  &lt; 2e-16 ***\nDESTIN_GRID462  -0.7456719  0.0478432   -15.586  &lt; 2e-16 ***\nDESTIN_GRID463  -1.4718448  0.0472741   -31.134  &lt; 2e-16 ***\nDESTIN_GRID464  -1.5985431  0.0472327   -33.844  &lt; 2e-16 ***\nDESTIN_GRID465  -0.5548881  0.0474520   -11.694  &lt; 2e-16 ***\nDESTIN_GRID466  -1.0546150  0.0483454   -21.814  &lt; 2e-16 ***\nDESTIN_GRID467  -2.3224125  0.0552177   -42.059  &lt; 2e-16 ***\nDESTIN_GRID480  -1.2705770  0.0554548   -22.912  &lt; 2e-16 ***\nDESTIN_GRID481   1.0936895  0.0472234    23.160  &lt; 2e-16 ***\nDESTIN_GRID482  -1.3224017  0.0476259   -27.766  &lt; 2e-16 ***\nDESTIN_GRID483  -0.0909159  0.0469326    -1.937 0.052726 .  \nDESTIN_GRID484  -1.4398465  0.0472587   -30.467  &lt; 2e-16 ***\nDESTIN_GRID486  -1.8966974  0.0500971   -37.860  &lt; 2e-16 ***\nDESTIN_GRID487  -2.6523005  0.0576656   -45.994  &lt; 2e-16 ***\nDESTIN_GRID488  -2.9998820  0.0633356   -47.365  &lt; 2e-16 ***\nDESTIN_GRID489  -6.5379467  0.5792659   -11.287  &lt; 2e-16 ***\nDESTIN_GRID499  -0.5959608  0.0501471   -11.884  &lt; 2e-16 ***\nDESTIN_GRID500  -0.1295030  0.0480067    -2.698 0.006984 ** \nDESTIN_GRID501  -2.0548467  0.0475911   -43.177  &lt; 2e-16 ***\nDESTIN_GRID502  -2.0793412  0.0473295   -43.933  &lt; 2e-16 ***\nDESTIN_GRID503  -0.8702798  0.0474408   -18.345  &lt; 2e-16 ***\nDESTIN_GRID507  -3.4129405  0.0720462   -47.372  &lt; 2e-16 ***\nDESTIN_GRID508  -0.7688487  0.0496637   -15.481  &lt; 2e-16 ***\nDESTIN_GRID509  -3.0848365  0.0820174   -37.612  &lt; 2e-16 ***\nDESTIN_GRID518  -1.4004226  0.0569683   -24.582  &lt; 2e-16 ***\nDESTIN_GRID519   0.2289429  0.0479491     4.775 1.80e-06 ***\nDESTIN_GRID520  -1.7210804  0.0495890   -34.707  &lt; 2e-16 ***\nDESTIN_GRID521   0.9529891  0.0468874    20.325  &lt; 2e-16 ***\nDESTIN_GRID522  -1.7394173  0.0472694   -36.798  &lt; 2e-16 ***\nDESTIN_GRID524  -5.4334030  0.1164835   -46.645  &lt; 2e-16 ***\nDESTIN_GRID528  -3.5805598  0.0809640   -44.224  &lt; 2e-16 ***\nDESTIN_GRID529  -5.1866897  0.2232130   -23.237  &lt; 2e-16 ***\nDESTIN_GRID530  -1.7562564  0.0584807   -30.031  &lt; 2e-16 ***\nDESTIN_GRID537  -1.9316272  0.0525221   -36.777  &lt; 2e-16 ***\nDESTIN_GRID538  -0.7603919  0.0487477   -15.599  &lt; 2e-16 ***\nDESTIN_GRID539  -0.9763652  0.0472004   -20.686  &lt; 2e-16 ***\nDESTIN_GRID540  -1.5727874  0.0471238   -33.376  &lt; 2e-16 ***\nDESTIN_GRID541  -2.0951163  0.0493371   -42.465  &lt; 2e-16 ***\nDESTIN_GRID547  -3.0363694  0.0696160   -43.616  &lt; 2e-16 ***\nDESTIN_GRID548  -2.3641300  0.0646017   -36.595  &lt; 2e-16 ***\nDESTIN_GRID557  -1.7184859  0.0490667   -35.023  &lt; 2e-16 ***\nDESTIN_GRID558  -1.0826785  0.0476006   -22.745  &lt; 2e-16 ***\nDESTIN_GRID559  -2.3378818  0.0477299   -48.982  &lt; 2e-16 ***\nDESTIN_GRID560  -1.6182630  0.0472491   -34.250  &lt; 2e-16 ***\nDESTIN_GRID562  -1.6363028  0.0482298   -33.927  &lt; 2e-16 ***\nDESTIN_GRID577  -1.7247746  0.0480716   -35.879  &lt; 2e-16 ***\nDESTIN_GRID578  -1.6035785  0.0471940   -33.978  &lt; 2e-16 ***\nDESTIN_GRID595  -0.3356243  0.0473656    -7.086 1.38e-12 ***\nDESTIN_GRID596  -0.9984747  0.0472307   -21.140  &lt; 2e-16 ***\nDESTIN_GRID597  -1.3308169  0.0471987   -28.196  &lt; 2e-16 ***\nDESTIN_GRID598  -0.7459224  0.0470239   -15.863  &lt; 2e-16 ***\nDESTIN_GRID600  -1.3640040  0.0481828   -28.309  &lt; 2e-16 ***\nDESTIN_GRID613  -0.2719238  0.0477637    -5.693 1.25e-08 ***\nDESTIN_GRID614  -2.2262529  0.0488442   -45.579  &lt; 2e-16 ***\nDESTIN_GRID615  -0.7240004  0.0471179   -15.366  &lt; 2e-16 ***\nDESTIN_GRID616   0.6889381  0.0469272    14.681  &lt; 2e-16 ***\nDESTIN_GRID617  -3.0317958  0.0501574   -60.446  &lt; 2e-16 ***\nDESTIN_GRID633  -0.8870786  0.0476719   -18.608  &lt; 2e-16 ***\nDESTIN_GRID634  -1.2709672  0.0473340   -26.851  &lt; 2e-16 ***\nDESTIN_GRID635  -3.5683183  0.0505847   -70.541  &lt; 2e-16 ***\nDESTIN_GRID636  -1.0839505  0.0470945   -23.016  &lt; 2e-16 ***\nDESTIN_GRID638  -1.8805344  0.0480087   -39.171  &lt; 2e-16 ***\nDESTIN_GRID654  -2.1563138  0.0478429   -45.071  &lt; 2e-16 ***\nDESTIN_GRID657  -4.1977541  0.0540212   -77.706  &lt; 2e-16 ***\nDESTIN_GRID671  -0.2683666  0.0474018    -5.662 1.50e-08 ***\nDESTIN_GRID673  -3.7907774  0.0513056   -73.886  &lt; 2e-16 ***\nDESTIN_GRID674  -1.0399870  0.0471075   -22.077  &lt; 2e-16 ***\nDESTIN_GRID689   0.0068187  0.0476009     0.143 0.886095    \nDESTIN_GRID690  -1.8966955  0.0485370   -39.077  &lt; 2e-16 ***\nDESTIN_GRID691  -3.5778195  0.0510844   -70.037  &lt; 2e-16 ***\nDESTIN_GRID692  -0.4136422  0.0469899    -8.803  &lt; 2e-16 ***\nDESTIN_GRID693  -1.9700085  0.0477714   -41.238  &lt; 2e-16 ***\nDESTIN_GRID695  -1.6329858  0.0473746   -34.470  &lt; 2e-16 ***\nDESTIN_GRID700  -2.5756751  0.0584379   -44.075  &lt; 2e-16 ***\nDESTIN_GRID710  -3.2569913  0.0508757   -64.019  &lt; 2e-16 ***\nDESTIN_GRID711  -1.4616216  0.0471825   -30.978  &lt; 2e-16 ***\nDESTIN_GRID712  -1.4070940  0.0471294   -29.856  &lt; 2e-16 ***\nDESTIN_GRID713  -1.9274131  0.0478319   -40.296  &lt; 2e-16 ***\nDESTIN_GRID714  -3.3846190  0.0489100   -69.201  &lt; 2e-16 ***\nDESTIN_GRID715  -3.7573131  0.0497892   -75.464  &lt; 2e-16 ***\nDESTIN_GRID727  -1.2746425  0.0488504   -26.093  &lt; 2e-16 ***\nDESTIN_GRID728  -0.7871518  0.0473333   -16.630  &lt; 2e-16 ***\nDESTIN_GRID729   0.3097092  0.0469529     6.596 4.22e-11 ***\nDESTIN_GRID730  -1.6400130  0.0472219   -34.730  &lt; 2e-16 ***\nDESTIN_GRID731  -1.5833503  0.0473847   -33.415  &lt; 2e-16 ***\nDESTIN_GRID732  -3.3017664  0.0508434   -64.940  &lt; 2e-16 ***\nDESTIN_GRID733  -1.8276149  0.0471884   -38.730  &lt; 2e-16 ***\nDESTIN_GRID734  -2.2580408  0.0476728   -47.365  &lt; 2e-16 ***\nDESTIN_GRID738  -1.5690917  0.0508081   -30.883  &lt; 2e-16 ***\nDESTIN_GRID746  -0.9190807  0.0487496   -18.853  &lt; 2e-16 ***\nDESTIN_GRID748  -1.2980761  0.0472508   -27.472  &lt; 2e-16 ***\nDESTIN_GRID749  -1.5484863  0.0472712   -32.757  &lt; 2e-16 ***\nDESTIN_GRID750  -1.3664551  0.0471162   -29.002  &lt; 2e-16 ***\nDESTIN_GRID751  -1.9901343  0.0475842   -41.823  &lt; 2e-16 ***\nDESTIN_GRID752  -3.2245094  0.0485670   -66.393  &lt; 2e-16 ***\nDESTIN_GRID753   0.1461333  0.0469558     3.112 0.001857 ** \nDESTIN_GRID754  -0.2364508  0.0470627    -5.024 5.06e-07 ***\nDESTIN_GRID757  -2.0718299  0.0508321   -40.758  &lt; 2e-16 ***\nDESTIN_GRID764  -1.2768458  0.0501662   -25.452  &lt; 2e-16 ***\nDESTIN_GRID766  -1.2766967  0.0473693   -26.952  &lt; 2e-16 ***\nDESTIN_GRID767  -0.4783916  0.0470697   -10.163  &lt; 2e-16 ***\nDESTIN_GRID768  -1.7413713  0.0472803   -36.831  &lt; 2e-16 ***\nDESTIN_GRID769  -2.4926913  0.0475834   -52.386  &lt; 2e-16 ***\nDESTIN_GRID770  -1.7391278  0.0472231   -36.828  &lt; 2e-16 ***\nDESTIN_GRID771  -2.0963510  0.0472764   -44.342  &lt; 2e-16 ***\nDESTIN_GRID772  -2.3606680  0.0476335   -49.559  &lt; 2e-16 ***\nDESTIN_GRID773  -1.1480109  0.0476274   -24.104  &lt; 2e-16 ***\nDESTIN_GRID774  -1.3747814  0.0489926   -28.061  &lt; 2e-16 ***\nDESTIN_GRID775  -2.3217680  0.0508450   -45.664  &lt; 2e-16 ***\nDESTIN_GRID776  -2.9944437  0.0564712   -53.026  &lt; 2e-16 ***\nDESTIN_GRID784  -0.5809050  0.0479258   -12.121  &lt; 2e-16 ***\nDESTIN_GRID785   0.0160038  0.0470856     0.340 0.733942    \nDESTIN_GRID786  -0.3649977  0.0471500    -7.741 9.85e-15 ***\nDESTIN_GRID787   0.4052772  0.0471503     8.595  &lt; 2e-16 ***\nDESTIN_GRID788  -0.0436820  0.0469572    -0.930 0.352241    \nDESTIN_GRID789  -0.0927964  0.0470402    -1.973 0.048529 *  \nDESTIN_GRID790  -1.6208088  0.0472005   -34.339  &lt; 2e-16 ***\nDESTIN_GRID791  -2.0956490  0.0475459   -44.076  &lt; 2e-16 ***\nDESTIN_GRID792  -3.4520702  0.0487277   -70.844  &lt; 2e-16 ***\nDESTIN_GRID793  -2.8961841  0.0547577   -52.891  &lt; 2e-16 ***\nDESTIN_GRID794  -2.5956864  0.0506523   -51.245  &lt; 2e-16 ***\nDESTIN_GRID795  -1.7470608  0.0490513   -35.617  &lt; 2e-16 ***\nDESTIN_GRID803  -1.2099925  0.0475945   -25.423  &lt; 2e-16 ***\nDESTIN_GRID804  -2.5450415  0.0487729   -52.181  &lt; 2e-16 ***\nDESTIN_GRID805  -1.9456577  0.0485900   -40.042  &lt; 2e-16 ***\nDESTIN_GRID806  -0.8823703  0.0471131   -18.729  &lt; 2e-16 ***\nDESTIN_GRID807  -2.5047088  0.0490302   -51.085  &lt; 2e-16 ***\nDESTIN_GRID809  -1.2606879  0.0470834   -26.776  &lt; 2e-16 ***\nDESTIN_GRID810  -2.9342103  0.0483041   -60.744  &lt; 2e-16 ***\nDESTIN_GRID811  -1.7111624  0.0478026   -35.796  &lt; 2e-16 ***\nDESTIN_GRID812  -3.9216990  0.0556573   -70.462  &lt; 2e-16 ***\nDESTIN_GRID813  -3.9020033  0.0542329   -71.949  &lt; 2e-16 ***\nDESTIN_GRID814  -1.7607548  0.0490423   -35.903  &lt; 2e-16 ***\nDESTIN_GRID822  -0.4087439  0.0480277    -8.511  &lt; 2e-16 ***\nDESTIN_GRID823  -1.3944304  0.0473008   -29.480  &lt; 2e-16 ***\nDESTIN_GRID824  -2.3906577  0.0483261   -49.469  &lt; 2e-16 ***\nDESTIN_GRID825  -0.1113560  0.0470393    -2.367 0.017919 *  \nDESTIN_GRID826  -1.8032536  0.0474024   -38.041  &lt; 2e-16 ***\nDESTIN_GRID829  -1.8411972  0.0472531   -38.965  &lt; 2e-16 ***\nDESTIN_GRID831  -0.4553733  0.0472093    -9.646  &lt; 2e-16 ***\nDESTIN_GRID832  -4.8617158  0.0615769   -78.954  &lt; 2e-16 ***\nDESTIN_GRID833  -2.9904634  0.0491136   -60.889  &lt; 2e-16 ***\nDESTIN_GRID840  -2.3410940  0.0498839   -46.931  &lt; 2e-16 ***\nDESTIN_GRID841  -1.4252527  0.0473690   -30.088  &lt; 2e-16 ***\nDESTIN_GRID842  -0.2406091  0.0470102    -5.118 3.08e-07 ***\nDESTIN_GRID843  -1.7624893  0.0479578   -36.751  &lt; 2e-16 ***\nDESTIN_GRID844  -3.5432270  0.0528091   -67.095  &lt; 2e-16 ***\nDESTIN_GRID845  -1.4008596  0.0474659   -29.513  &lt; 2e-16 ***\nDESTIN_GRID846  -1.8945026  0.0475643   -39.830  &lt; 2e-16 ***\nDESTIN_GRID847   0.2099695  0.0469440     4.473 7.72e-06 ***\nDESTIN_GRID850  -6.0000666  0.1803552   -33.268  &lt; 2e-16 ***\nDESTIN_GRID851   0.5069245  0.0470232    10.780  &lt; 2e-16 ***\nDESTIN_GRID852  -3.4293088  0.0504716   -67.945  &lt; 2e-16 ***\nDESTIN_GRID859  -2.0103441  0.0490386   -40.995  &lt; 2e-16 ***\nDESTIN_GRID860  -0.0650717  0.0471301    -1.381 0.167377    \nDESTIN_GRID861   0.7401007  0.0469449    15.765  &lt; 2e-16 ***\nDESTIN_GRID862  -0.8843304  0.0474926   -18.620  &lt; 2e-16 ***\nDESTIN_GRID863  -1.3433072  0.0476455   -28.194  &lt; 2e-16 ***\nDESTIN_GRID864  -3.3361777  0.0498795   -66.885  &lt; 2e-16 ***\nDESTIN_GRID865  -0.4645856  0.0470716    -9.870  &lt; 2e-16 ***\nDESTIN_GRID866  -2.4722731  0.0477543   -51.771  &lt; 2e-16 ***\nDESTIN_GRID867  -2.2918060  0.0476577   -48.089  &lt; 2e-16 ***\nDESTIN_GRID869  -2.0961460  0.0519278   -40.367  &lt; 2e-16 ***\nDESTIN_GRID871  -2.3955109  0.0484125   -49.481  &lt; 2e-16 ***\nDESTIN_GRID872  -0.2030857  0.0471637    -4.306 1.66e-05 ***\nDESTIN_GRID878  -0.6796093  0.0472715   -14.377  &lt; 2e-16 ***\nDESTIN_GRID879  -0.6583579  0.0470844   -13.983  &lt; 2e-16 ***\nDESTIN_GRID880  -1.4379749  0.0473790   -30.350  &lt; 2e-16 ***\nDESTIN_GRID882  -1.8562838  0.0480028   -38.670  &lt; 2e-16 ***\nDESTIN_GRID883  -3.1039502  0.0495347   -62.662  &lt; 2e-16 ***\nDESTIN_GRID884  -2.5594302  0.0481767   -53.126  &lt; 2e-16 ***\nDESTIN_GRID885  -2.0708723  0.0473206   -43.763  &lt; 2e-16 ***\nDESTIN_GRID886  -2.4467300  0.0481189   -50.848  &lt; 2e-16 ***\nDESTIN_GRID890  -2.9255072  0.0481195   -60.797  &lt; 2e-16 ***\nDESTIN_GRID897  -0.5796974  0.0473481   -12.243  &lt; 2e-16 ***\nDESTIN_GRID898  -0.4703839  0.0471717    -9.972  &lt; 2e-16 ***\nDESTIN_GRID899  -2.1442212  0.0478202   -44.839  &lt; 2e-16 ***\nDESTIN_GRID900  -2.1166259  0.0481752   -43.936  &lt; 2e-16 ***\nDESTIN_GRID901  -1.4513127  0.0475217   -30.540  &lt; 2e-16 ***\nDESTIN_GRID902  -2.0741257  0.0480814   -43.138  &lt; 2e-16 ***\nDESTIN_GRID903  -1.9410947  0.0487055   -39.854  &lt; 2e-16 ***\nDESTIN_GRID904  -1.4755571  0.0472538   -31.226  &lt; 2e-16 ***\nDESTIN_GRID905  -2.5593199  0.0478996   -53.431  &lt; 2e-16 ***\nDESTIN_GRID907  -1.6128304  0.0493876   -32.657  &lt; 2e-16 ***\nDESTIN_GRID909  -0.0887039  0.0470068    -1.887 0.059155 .  \nDESTIN_GRID910  -1.3094260  0.0471661   -27.762  &lt; 2e-16 ***\nDESTIN_GRID915  -1.1591012  0.0483672   -23.965  &lt; 2e-16 ***\nDESTIN_GRID916   0.3405591  0.0472510     7.207 5.70e-13 ***\nDESTIN_GRID917  -1.0793864  0.0474756   -22.736  &lt; 2e-16 ***\nDESTIN_GRID918  -2.6992666  0.0494479   -54.588  &lt; 2e-16 ***\nDESTIN_GRID919   0.0206623  0.0470579     0.439 0.660602    \nDESTIN_GRID920   0.0358452  0.0470226     0.762 0.445883    \nDESTIN_GRID922  -2.4004757  0.0484110   -49.585  &lt; 2e-16 ***\nDESTIN_GRID923  -1.4212839  0.0472404   -30.086  &lt; 2e-16 ***\nDESTIN_GRID927  -2.4696479  0.0486666   -50.746  &lt; 2e-16 ***\nDESTIN_GRID928  -1.5892501  0.0473375   -33.573  &lt; 2e-16 ***\nDESTIN_GRID929  -5.9048034  0.0860988   -68.582  &lt; 2e-16 ***\nDESTIN_GRID935  -0.5109497  0.0473491   -10.791  &lt; 2e-16 ***\nDESTIN_GRID936  -0.0004820  0.0470883    -0.010 0.991833    \nDESTIN_GRID937  -0.1685822  0.0471098    -3.578 0.000346 ***\nDESTIN_GRID938   0.2735743  0.0470279     5.817 5.98e-09 ***\nDESTIN_GRID939  -1.0760622  0.0472507   -22.773  &lt; 2e-16 ***\nDESTIN_GRID945  -0.8475937  0.0481278   -17.611  &lt; 2e-16 ***\nDESTIN_GRID947  -1.5634349  0.0472502   -33.088  &lt; 2e-16 ***\nDESTIN_GRID948  -1.2005106  0.0472527   -25.406  &lt; 2e-16 ***\nDESTIN_GRID953   0.3331529  0.0471108     7.072 1.53e-12 ***\nDESTIN_GRID954  -0.0431705  0.0471313    -0.916 0.359686    \nDESTIN_GRID955  -1.2331373  0.0475464   -25.935  &lt; 2e-16 ***\nDESTIN_GRID956  -1.7814591  0.0481254   -37.017  &lt; 2e-16 ***\nDESTIN_GRID964  -4.2224094  0.0989363   -42.678  &lt; 2e-16 ***\nDESTIN_GRID966  -0.6693143  0.0470696   -14.220  &lt; 2e-16 ***\nDESTIN_GRID967  -5.5797912  0.0907047   -61.516  &lt; 2e-16 ***\nDESTIN_GRID972  -1.7929040  0.0487701   -36.762  &lt; 2e-16 ***\nDESTIN_GRID973  -0.1811720  0.0472601    -3.834 0.000126 ***\nDESTIN_GRID974  -0.9457844  0.0473514   -19.974  &lt; 2e-16 ***\nDESTIN_GRID975  -1.7821922  0.0479581   -37.161  &lt; 2e-16 ***\nDESTIN_GRID977  -0.6547666  0.0472219   -13.866  &lt; 2e-16 ***\nDESTIN_GRID983  -2.5168467  0.0732068   -34.380  &lt; 2e-16 ***\nDESTIN_GRID985  -1.4527640  0.0472873   -30.722  &lt; 2e-16 ***\nDESTIN_GRID986  -1.1583636  0.0472139   -24.534  &lt; 2e-16 ***\nDESTIN_GRID990  -3.3085221  0.0672159   -49.222  &lt; 2e-16 ***\nDESTIN_GRID991  -0.8895903  0.0488014   -18.229  &lt; 2e-16 ***\nDESTIN_GRID992  -0.5976266  0.0492178   -12.142  &lt; 2e-16 ***\nDESTIN_GRID993   0.0390768  0.0470605     0.830 0.406339    \nDESTIN_GRID994  -2.6929116  0.0516014   -52.187  &lt; 2e-16 ***\nDESTIN_GRID995  -1.3150427  0.0474876   -27.692  &lt; 2e-16 ***\nDESTIN_GRID1001  0.5852236  0.0477299    12.261  &lt; 2e-16 ***\nDESTIN_GRID1002 -4.4820300  0.0969343   -46.238  &lt; 2e-16 ***\nDESTIN_GRID1003 -1.1919174  0.0474870   -25.100  &lt; 2e-16 ***\nDESTIN_GRID1004  1.0964521  0.0469510    23.353  &lt; 2e-16 ***\nDESTIN_GRID1005 -4.1441609  0.0592499   -69.944  &lt; 2e-16 ***\nDESTIN_GRID1010 -0.8742748  0.0476454   -18.350  &lt; 2e-16 ***\nDESTIN_GRID1011 -0.3014168  0.0473765    -6.362 1.99e-10 ***\nDESTIN_GRID1012 -2.1021443  0.0500693   -41.985  &lt; 2e-16 ***\nDESTIN_GRID1013 -1.6908332  0.0479695   -35.248  &lt; 2e-16 ***\nDESTIN_GRID1014 -2.2828272  0.0497269   -45.907  &lt; 2e-16 ***\nDESTIN_GRID1023 -2.0169286  0.0475396   -42.426  &lt; 2e-16 ***\nDESTIN_GRID1024 -1.3600219  0.0472266   -28.798  &lt; 2e-16 ***\nDESTIN_GRID1025 -0.2134230  0.0473679    -4.506 6.62e-06 ***\nDESTIN_GRID1028  0.4516572  0.0471077     9.588  &lt; 2e-16 ***\nDESTIN_GRID1030 -1.9836586  0.0497546   -39.869  &lt; 2e-16 ***\nDESTIN_GRID1031 -1.1486279  0.0473724   -24.247  &lt; 2e-16 ***\nDESTIN_GRID1033 -1.2007976  0.0474732   -25.294  &lt; 2e-16 ***\nDESTIN_GRID1040 -2.3589005  0.0552398   -42.703  &lt; 2e-16 ***\nDESTIN_GRID1041 -2.4067295  0.0487208   -49.398  &lt; 2e-16 ***\nDESTIN_GRID1042 -1.9948817  0.0473652   -42.117  &lt; 2e-16 ***\nDESTIN_GRID1043 -1.2900725  0.0473445   -27.249  &lt; 2e-16 ***\nDESTIN_GRID1048 -1.5201846  0.0480057   -31.667  &lt; 2e-16 ***\nDESTIN_GRID1049 -1.4260520  0.0476766   -29.911  &lt; 2e-16 ***\nDESTIN_GRID1050  0.0673054  0.0470542     1.430 0.152607    \nDESTIN_GRID1061 -1.0398478  0.0472594   -22.003  &lt; 2e-16 ***\nDESTIN_GRID1062  0.2666834  0.0470002     5.674 1.39e-08 ***\nDESTIN_GRID1063 -0.2582622  0.0471848    -5.473 4.41e-08 ***\nDESTIN_GRID1064 -2.5777639  0.0626594   -41.139  &lt; 2e-16 ***\nDESTIN_GRID1066  0.6508229  0.0470122    13.844  &lt; 2e-16 ***\nDESTIN_GRID1067 -0.3664593  0.0471520    -7.772 7.73e-15 ***\nDESTIN_GRID1068 -0.3806620  0.0471252    -8.078 6.60e-16 ***\nDESTIN_GRID1069 -1.6150294  0.0477081   -33.852  &lt; 2e-16 ***\nDESTIN_GRID1071 -0.0927675  0.0471085    -1.969 0.048926 *  \nDESTIN_GRID1078 -2.3999813  0.0549479   -43.677  &lt; 2e-16 ***\nDESTIN_GRID1080 -1.1073673  0.0472069   -23.458  &lt; 2e-16 ***\nDESTIN_GRID1081 -0.9150489  0.0472084   -19.383  &lt; 2e-16 ***\nDESTIN_GRID1082 -0.3233555  0.0472922    -6.837 8.06e-12 ***\nDESTIN_GRID1086 -0.6983429  0.0473913   -14.736  &lt; 2e-16 ***\nDESTIN_GRID1087 -1.0042888  0.0474320   -21.173  &lt; 2e-16 ***\nDESTIN_GRID1089 -1.0792379  0.0475259   -22.708  &lt; 2e-16 ***\nDESTIN_GRID1090 -1.3202321  0.0476640   -27.699  &lt; 2e-16 ***\nDESTIN_GRID1097 -5.6904542  0.2814136   -20.221  &lt; 2e-16 ***\nDESTIN_GRID1100 -1.9797489  0.0476553   -41.543  &lt; 2e-16 ***\nDESTIN_GRID1101 -1.5481663  0.0481844   -32.130  &lt; 2e-16 ***\nDESTIN_GRID1102 -0.8461081  0.0480222   -17.619  &lt; 2e-16 ***\nDESTIN_GRID1104 -0.5147413  0.0472552   -10.893  &lt; 2e-16 ***\nDESTIN_GRID1105  0.0069369  0.0470640     0.147 0.882821    \nDESTIN_GRID1106 -1.2418889  0.0484744   -25.619  &lt; 2e-16 ***\nDESTIN_GRID1107 -1.6632189  0.0481486   -34.543  &lt; 2e-16 ***\nDESTIN_GRID1108 -1.1044718  0.0475197   -23.242  &lt; 2e-16 ***\nDESTIN_GRID1115 -3.6404574  0.0740707   -49.148  &lt; 2e-16 ***\nDESTIN_GRID1116 -1.7790220  0.0528617   -33.654  &lt; 2e-16 ***\nDESTIN_GRID1119 -1.1963036  0.0472763   -25.304  &lt; 2e-16 ***\nDESTIN_GRID1120 -1.2286653  0.0476224   -25.800  &lt; 2e-16 ***\nDESTIN_GRID1123 -1.8753415  0.0482671   -38.853  &lt; 2e-16 ***\nDESTIN_GRID1124 -1.4273468  0.0477142   -29.915  &lt; 2e-16 ***\nDESTIN_GRID1125 -0.3139204  0.0471551    -6.657 2.79e-11 ***\nDESTIN_GRID1128 -1.3798974  0.0476150   -28.980  &lt; 2e-16 ***\nDESTIN_GRID1138 -1.8969343  0.0476642   -39.798  &lt; 2e-16 ***\nDESTIN_GRID1139 -0.7533047  0.0473093   -15.923  &lt; 2e-16 ***\nDESTIN_GRID1140  0.1296807  0.0471995     2.748 0.006005 ** \nDESTIN_GRID1142 -2.0729345  0.0485214   -42.722  &lt; 2e-16 ***\nDESTIN_GRID1143  0.1498977  0.0470142     3.188 0.001431 ** \nDESTIN_GRID1144 -0.7287727  0.0474624   -15.355  &lt; 2e-16 ***\nDESTIN_GRID1145 -0.7316450  0.0474937   -15.405  &lt; 2e-16 ***\nDESTIN_GRID1146 -0.6699145  0.0473497   -14.148  &lt; 2e-16 ***\nDESTIN_GRID1147 -2.0436903  0.0495380   -41.255  &lt; 2e-16 ***\nDESTIN_GRID1152 -5.8411886  0.1206457   -48.416  &lt; 2e-16 ***\nDESTIN_GRID1153 -0.8546916  0.0474526   -18.011  &lt; 2e-16 ***\nDESTIN_GRID1157 -0.6202231  0.0471206   -13.162  &lt; 2e-16 ***\nDESTIN_GRID1158 -0.9758063  0.0473136   -20.624  &lt; 2e-16 ***\nDESTIN_GRID1161  0.6753855  0.0470057    14.368  &lt; 2e-16 ***\nDESTIN_GRID1162  0.2137249  0.0470429     4.543 5.54e-06 ***\nDESTIN_GRID1163 -0.0485899  0.0470963    -1.032 0.302206    \nDESTIN_GRID1164 -1.0289169  0.0478587   -21.499  &lt; 2e-16 ***\nDESTIN_GRID1167 -3.3678469  0.0599448   -56.183  &lt; 2e-16 ***\nDESTIN_GRID1171 -4.9583935  0.0879139   -56.401  &lt; 2e-16 ***\nDESTIN_GRID1172 -0.8562885  0.0476678   -17.964  &lt; 2e-16 ***\nDESTIN_GRID1173 -3.1612197  0.0518973   -60.913  &lt; 2e-16 ***\nDESTIN_GRID1176 -1.4897289  0.0474152   -31.419  &lt; 2e-16 ***\nDESTIN_GRID1177 -1.6742877  0.0477425   -35.069  &lt; 2e-16 ***\nDESTIN_GRID1180 -0.4614036  0.0472561    -9.764  &lt; 2e-16 ***\nDESTIN_GRID1181 -0.3083557  0.0470797    -6.550 5.77e-11 ***\nDESTIN_GRID1183 -1.7494492  0.0506451   -34.543  &lt; 2e-16 ***\nDESTIN_GRID1184 -0.4222581  0.0471900    -8.948  &lt; 2e-16 ***\nDESTIN_GRID1186 -5.5901790  0.1947196   -28.709  &lt; 2e-16 ***\nDESTIN_GRID1192 -2.8386752  0.0494844   -57.365  &lt; 2e-16 ***\nDESTIN_GRID1193 -2.8485887  0.0486963   -58.497  &lt; 2e-16 ***\nDESTIN_GRID1194 -2.9890939  0.0494795   -60.411  &lt; 2e-16 ***\nDESTIN_GRID1195 -0.0832394  0.0470475    -1.769 0.076850 .  \nDESTIN_GRID1196 -2.2153349  0.0487988   -45.397  &lt; 2e-16 ***\nDESTIN_GRID1198 -0.2218402  0.0494002    -4.491 7.10e-06 ***\nDESTIN_GRID1199 -2.3136096  0.0490868   -47.133  &lt; 2e-16 ***\nDESTIN_GRID1200 -0.6841346  0.0472185   -14.489  &lt; 2e-16 ***\nDESTIN_GRID1201 -0.4876433  0.0471725   -10.337  &lt; 2e-16 ***\nDESTIN_GRID1202 -0.6616839  0.0473132   -13.985  &lt; 2e-16 ***\nDESTIN_GRID1203 -0.8154768  0.0476569   -17.111  &lt; 2e-16 ***\nDESTIN_GRID1204  0.4075466  0.0471581     8.642  &lt; 2e-16 ***\nDESTIN_GRID1205 -5.7186966  0.2624311   -21.791  &lt; 2e-16 ***\nDESTIN_GRID1207 -2.2823001  0.0496015   -46.013  &lt; 2e-16 ***\nDESTIN_GRID1208 -1.8843979  0.0486746   -38.714  &lt; 2e-16 ***\nDESTIN_GRID1209 -0.2008775  0.0472203    -4.254 2.10e-05 ***\nDESTIN_GRID1210 -4.0259902  0.0729282   -55.205  &lt; 2e-16 ***\nDESTIN_GRID1211 -3.6738898  0.0553187   -66.413  &lt; 2e-16 ***\nDESTIN_GRID1212 -4.1297857  0.0539271   -76.581  &lt; 2e-16 ***\nDESTIN_GRID1213 -0.3918288  0.0470600    -8.326  &lt; 2e-16 ***\nDESTIN_GRID1214 -1.8025472  0.0477887   -37.719  &lt; 2e-16 ***\nDESTIN_GRID1215 -5.7504166  0.1070921   -53.696  &lt; 2e-16 ***\nDESTIN_GRID1218 -0.8555890  0.0475322   -18.000  &lt; 2e-16 ***\nDESTIN_GRID1219  0.5967505  0.0470285    12.689  &lt; 2e-16 ***\nDESTIN_GRID1220 -0.8582516  0.0473508   -18.125  &lt; 2e-16 ***\nDESTIN_GRID1221  0.0766818  0.0471655     1.626 0.103991    \nDESTIN_GRID1222 -1.5664555  0.0485243   -32.282  &lt; 2e-16 ***\nDESTIN_GRID1225 -0.9348929  0.0473741   -19.734  &lt; 2e-16 ***\nDESTIN_GRID1226 -2.1104714  0.0483880   -43.616  &lt; 2e-16 ***\nDESTIN_GRID1227 -1.9482727  0.0481756   -40.441  &lt; 2e-16 ***\nDESTIN_GRID1229 -2.5215027  0.0504368   -49.993  &lt; 2e-16 ***\nDESTIN_GRID1230 -0.4166005  0.0470570    -8.853  &lt; 2e-16 ***\nDESTIN_GRID1231 -1.8252965  0.0473672   -38.535  &lt; 2e-16 ***\nDESTIN_GRID1232 -1.9910901  0.0474805   -41.935  &lt; 2e-16 ***\nDESTIN_GRID1233 -1.6619229  0.0477241   -34.824  &lt; 2e-16 ***\nDESTIN_GRID1234 -3.1980097  0.0551825   -57.953  &lt; 2e-16 ***\nDESTIN_GRID1238 -1.7117100  0.0479297   -35.713  &lt; 2e-16 ***\nDESTIN_GRID1239 -1.4141039  0.0476597   -29.671  &lt; 2e-16 ***\nDESTIN_GRID1240  0.2868610  0.0470197     6.101 1.05e-09 ***\nDESTIN_GRID1241 -0.8299529  0.0474961   -17.474  &lt; 2e-16 ***\nDESTIN_GRID1242 -0.7854304  0.0473920   -16.573  &lt; 2e-16 ***\nDESTIN_GRID1243 -3.6561199  0.0570896   -64.042  &lt; 2e-16 ***\nDESTIN_GRID1244 -2.4562355  0.0490173   -50.110  &lt; 2e-16 ***\nDESTIN_GRID1245 -0.6189070  0.0474575   -13.041  &lt; 2e-16 ***\nDESTIN_GRID1246 -2.4070966  0.0498458   -48.291  &lt; 2e-16 ***\nDESTIN_GRID1249 -5.0720466  0.0787635   -64.396  &lt; 2e-16 ***\nDESTIN_GRID1250  0.2389840  0.0469849     5.086 3.65e-07 ***\nDESTIN_GRID1251  0.4126681  0.0469737     8.785  &lt; 2e-16 ***\nDESTIN_GRID1252 -0.3789017  0.0471275    -8.040 8.99e-16 ***\nDESTIN_GRID1253 -3.2412113  0.0508492   -63.742  &lt; 2e-16 ***\nDESTIN_GRID1256 -0.8188268  0.0473538   -17.292  &lt; 2e-16 ***\nDESTIN_GRID1257 -1.0777810  0.0474679   -22.705  &lt; 2e-16 ***\nDESTIN_GRID1258 -0.7411287  0.0473729   -15.645  &lt; 2e-16 ***\nDESTIN_GRID1259 -0.0593664  0.0471391    -1.259 0.207891    \nDESTIN_GRID1260 -0.8267174  0.0484962   -17.047  &lt; 2e-16 ***\nDESTIN_GRID1261 -1.3792032  0.0476508   -28.944  &lt; 2e-16 ***\nDESTIN_GRID1262 -0.9582572  0.0472863   -20.265  &lt; 2e-16 ***\nDESTIN_GRID1263 -1.3228146  0.0474104   -27.901  &lt; 2e-16 ***\nDESTIN_GRID1264 -0.6855175  0.0471851   -14.528  &lt; 2e-16 ***\nDESTIN_GRID1265 -1.5785805  0.0475042   -33.230  &lt; 2e-16 ***\nDESTIN_GRID1266 -1.9600278  0.0488981   -40.084  &lt; 2e-16 ***\nDESTIN_GRID1268 -2.5526157  0.0482098   -52.948  &lt; 2e-16 ***\nDESTIN_GRID1269 -0.7225954  0.0470307   -15.364  &lt; 2e-16 ***\nDESTIN_GRID1270 -1.4738153  0.0472257   -31.208  &lt; 2e-16 ***\nDESTIN_GRID1272 -1.9012092  0.0517919   -36.709  &lt; 2e-16 ***\nDESTIN_GRID1276 -0.2275011  0.0471335    -4.827 1.39e-06 ***\nDESTIN_GRID1277 -0.7021715  0.0474371   -14.802  &lt; 2e-16 ***\nDESTIN_GRID1278  0.0211971  0.0470586     0.450 0.652393    \nDESTIN_GRID1279 -0.4342476  0.0471893    -9.202  &lt; 2e-16 ***\nDESTIN_GRID1280 -0.8902868  0.0472410   -18.846  &lt; 2e-16 ***\nDESTIN_GRID1281 -0.6185713  0.0471929   -13.107  &lt; 2e-16 ***\nDESTIN_GRID1282 -1.0865262  0.0473710   -22.937  &lt; 2e-16 ***\nDESTIN_GRID1283 -1.1161319  0.0472327   -23.630  &lt; 2e-16 ***\nDESTIN_GRID1284 -1.0699376  0.0472307   -22.653  &lt; 2e-16 ***\nDESTIN_GRID1285 -1.4957753  0.0475248   -31.474  &lt; 2e-16 ***\nDESTIN_GRID1288 -1.8972970  0.0473189   -40.096  &lt; 2e-16 ***\nDESTIN_GRID1289 -1.3520213  0.0472029   -28.643  &lt; 2e-16 ***\nDESTIN_GRID1294 -0.0405641  0.0471534    -0.860 0.389647    \nDESTIN_GRID1295  0.4220282  0.0470219     8.975  &lt; 2e-16 ***\nDESTIN_GRID1296 -0.0379310  0.0470591    -0.806 0.420226    \nDESTIN_GRID1297 -0.9505723  0.0477757   -19.897  &lt; 2e-16 ***\nDESTIN_GRID1298  0.0616992  0.0470605     1.311 0.189837    \nDESTIN_GRID1299 -0.5270064  0.0471179   -11.185  &lt; 2e-16 ***\nDESTIN_GRID1300 -1.8844489  0.0480757   -39.198  &lt; 2e-16 ***\nDESTIN_GRID1301 -1.2145863  0.0473169   -25.669  &lt; 2e-16 ***\nDESTIN_GRID1302 -0.6939625  0.0470806   -14.740  &lt; 2e-16 ***\nDESTIN_GRID1303  0.1032902  0.0470201     2.197 0.028040 *  \nDESTIN_GRID1304 -0.5604551  0.0472898   -11.851  &lt; 2e-16 ***\nDESTIN_GRID1306 -3.5178017  0.0497311   -70.737  &lt; 2e-16 ***\nDESTIN_GRID1307 -1.7500029  0.0472806   -37.013  &lt; 2e-16 ***\nDESTIN_GRID1308 -0.7408847  0.0472961   -15.665  &lt; 2e-16 ***\nDESTIN_GRID1314  0.6629650  0.0469914    14.108  &lt; 2e-16 ***\nDESTIN_GRID1315 -0.1730636  0.0471462    -3.671 0.000242 ***\nDESTIN_GRID1316 -1.2710515  0.0482087   -26.366  &lt; 2e-16 ***\nDESTIN_GRID1317 -0.7438368  0.0474010   -15.692  &lt; 2e-16 ***\nDESTIN_GRID1318 -0.7228592  0.0472348   -15.304  &lt; 2e-16 ***\nDESTIN_GRID1319 -0.1399603  0.0471026    -2.971 0.002965 ** \nDESTIN_GRID1320  0.7734003  0.0469580    16.470  &lt; 2e-16 ***\nDESTIN_GRID1321 -1.9791827  0.0475800   -41.597  &lt; 2e-16 ***\nDESTIN_GRID1322 -0.7930483  0.0470921   -16.840  &lt; 2e-16 ***\nDESTIN_GRID1323 -0.9458472  0.0473483   -19.976  &lt; 2e-16 ***\nDESTIN_GRID1326 -1.8958650  0.0474432   -39.961  &lt; 2e-16 ***\nDESTIN_GRID1327 -2.6306605  0.0480698   -54.726  &lt; 2e-16 ***\nDESTIN_GRID1332 -0.3909089  0.0474084    -8.246  &lt; 2e-16 ***\nDESTIN_GRID1333  0.4828895  0.0470236    10.269  &lt; 2e-16 ***\nDESTIN_GRID1334  0.2567399  0.0470050     5.462 4.71e-08 ***\nDESTIN_GRID1335 -0.0303009  0.0470641    -0.644 0.519691    \nDESTIN_GRID1336 -1.0895544  0.0474119   -22.981  &lt; 2e-16 ***\nDESTIN_GRID1337  0.6798858  0.0469498    14.481  &lt; 2e-16 ***\nDESTIN_GRID1338 -1.0139685  0.0471799   -21.492  &lt; 2e-16 ***\nDESTIN_GRID1339 -1.8349259  0.0474709   -38.654  &lt; 2e-16 ***\nDESTIN_GRID1340  0.5218261  0.0469577    11.113  &lt; 2e-16 ***\nDESTIN_GRID1341 -0.9596472  0.0472542   -20.308  &lt; 2e-16 ***\nDESTIN_GRID1342  0.0225867  0.0471388     0.479 0.631829    \nDESTIN_GRID1345 -3.1039629  0.0485352   -63.953  &lt; 2e-16 ***\nDESTIN_GRID1352  0.2793911  0.0470706     5.936 2.93e-09 ***\nDESTIN_GRID1353 -0.6388532  0.0472460   -13.522  &lt; 2e-16 ***\nDESTIN_GRID1354  0.2306554  0.0470118     4.906 9.28e-07 ***\nDESTIN_GRID1355 -1.0908844  0.0474327   -22.999  &lt; 2e-16 ***\nDESTIN_GRID1356 -0.9295234  0.0472793   -19.660  &lt; 2e-16 ***\nDESTIN_GRID1357 -0.7813923  0.0471056   -16.588  &lt; 2e-16 ***\nDESTIN_GRID1358 -1.0801025  0.0476314   -22.676  &lt; 2e-16 ***\nDESTIN_GRID1359 -0.4999035  0.0470534   -10.624  &lt; 2e-16 ***\nDESTIN_GRID1360 -0.6016378  0.0470864   -12.777  &lt; 2e-16 ***\nDESTIN_GRID1364 -4.9471739  0.0786298   -62.917  &lt; 2e-16 ***\nDESTIN_GRID1371 -0.6323999  0.0488483   -12.946  &lt; 2e-16 ***\nDESTIN_GRID1372  0.3356346  0.0470067     7.140 9.32e-13 ***\nDESTIN_GRID1373 -0.6702978  0.0473188   -14.166  &lt; 2e-16 ***\nDESTIN_GRID1374 -1.4238381  0.0475249   -29.960  &lt; 2e-16 ***\nDESTIN_GRID1375 -1.3326117  0.0475777   -28.009  &lt; 2e-16 ***\nDESTIN_GRID1376 -1.5453380  0.0473791   -32.616  &lt; 2e-16 ***\nDESTIN_GRID1377 -1.5505200  0.0474623   -32.668  &lt; 2e-16 ***\nDESTIN_GRID1378 -0.7859286  0.0471339   -16.674  &lt; 2e-16 ***\nDESTIN_GRID1379  0.4822125  0.0470960    10.239  &lt; 2e-16 ***\nDESTIN_GRID1380 -1.8484994  0.0482757   -38.290  &lt; 2e-16 ***\nDESTIN_GRID1383 -4.1416944  0.0549244   -75.407  &lt; 2e-16 ***\nDESTIN_GRID1389 -0.9877575  0.0711189   -13.889  &lt; 2e-16 ***\nDESTIN_GRID1390 -1.8693878  0.0516259   -36.210  &lt; 2e-16 ***\nDESTIN_GRID1391 -0.1917814  0.0472336    -4.060 4.90e-05 ***\nDESTIN_GRID1392 -0.4471280  0.0471495    -9.483  &lt; 2e-16 ***\nDESTIN_GRID1393 -0.4668138  0.0470960    -9.912  &lt; 2e-16 ***\nDESTIN_GRID1394 -1.2806152  0.0472714   -27.091  &lt; 2e-16 ***\nDESTIN_GRID1395 -0.3608675  0.0474112    -7.611 2.71e-14 ***\nDESTIN_GRID1396 -1.4708319  0.0478342   -30.749  &lt; 2e-16 ***\nDESTIN_GRID1397 -1.6929186  0.0534924   -31.648  &lt; 2e-16 ***\nDESTIN_GRID1398 -1.4827803  0.0477294   -31.066  &lt; 2e-16 ***\nDESTIN_GRID1401 -2.2726057  0.0491771   -46.213  &lt; 2e-16 ***\nDESTIN_GRID1408 -1.3729721  0.0762300   -18.011  &lt; 2e-16 ***\nDESTIN_GRID1409 -1.3806477  0.0494386   -27.927  &lt; 2e-16 ***\nDESTIN_GRID1410 -0.4919630  0.0484712   -10.150  &lt; 2e-16 ***\nDESTIN_GRID1411  0.0712595  0.0470368     1.515 0.129779    \nDESTIN_GRID1412 -0.0042872  0.0470320    -0.091 0.927369    \nDESTIN_GRID1413 -0.8166979  0.0473084   -17.263  &lt; 2e-16 ***\nDESTIN_GRID1414 -2.9857216  0.0497558   -60.007  &lt; 2e-16 ***\nDESTIN_GRID1415 -2.0198534  0.0477480   -42.302  &lt; 2e-16 ***\nDESTIN_GRID1416 -1.7138429  0.0475852   -36.016  &lt; 2e-16 ***\nDESTIN_GRID1417 -1.0889079  0.0472889   -23.027  &lt; 2e-16 ***\nDESTIN_GRID1418 -2.8918759  0.0496518   -58.243  &lt; 2e-16 ***\nDESTIN_GRID1419 -2.7204976  0.0499917   -54.419  &lt; 2e-16 ***\nDESTIN_GRID1420 -1.8747612  0.0484181   -38.720  &lt; 2e-16 ***\nDESTIN_GRID1428 -2.2337571  0.1113641   -20.058  &lt; 2e-16 ***\nDESTIN_GRID1430 -2.6995120  0.0525095   -51.410  &lt; 2e-16 ***\nDESTIN_GRID1431 -0.4060679  0.0471116    -8.619  &lt; 2e-16 ***\nDESTIN_GRID1432 -0.2744692  0.0470433    -5.834 5.40e-09 ***\nDESTIN_GRID1433 -2.1873086  0.0509531   -42.928  &lt; 2e-16 ***\nDESTIN_GRID1434 -1.9887860  0.0483902   -41.099  &lt; 2e-16 ***\nDESTIN_GRID1435 -1.3580948  0.0474844   -28.601  &lt; 2e-16 ***\nDESTIN_GRID1436 -0.7503065  0.0471637   -15.909  &lt; 2e-16 ***\nDESTIN_GRID1439 -3.1089843  0.0516463   -60.198  &lt; 2e-16 ***\nDESTIN_GRID1440 -1.8795787  0.0487041   -38.592  &lt; 2e-16 ***\nDESTIN_GRID1448 -0.9502808  0.0490462   -19.375  &lt; 2e-16 ***\nDESTIN_GRID1449 -1.3568896  0.0474100   -28.620  &lt; 2e-16 ***\nDESTIN_GRID1450 -0.9912856  0.0473306   -20.944  &lt; 2e-16 ***\nDESTIN_GRID1451  0.0587634  0.0470455     1.249 0.211637    \nDESTIN_GRID1452 -2.1737463  0.0479761   -45.309  &lt; 2e-16 ***\nDESTIN_GRID1453 -1.1517244  0.0472219   -24.390  &lt; 2e-16 ***\nDESTIN_GRID1454 -1.9151769  0.0487320   -39.300  &lt; 2e-16 ***\nDESTIN_GRID1455 -0.6460499  0.0470795   -13.723  &lt; 2e-16 ***\nDESTIN_GRID1456 -1.3383030  0.0472977   -28.295  &lt; 2e-16 ***\nDESTIN_GRID1457 -0.6595163  0.0471621   -13.984  &lt; 2e-16 ***\nDESTIN_GRID1458 -2.8050201  0.0537890   -52.149  &lt; 2e-16 ***\nDESTIN_GRID1468 -0.7590828  0.0482793   -15.723  &lt; 2e-16 ***\nDESTIN_GRID1469 -0.3652322  0.0470697    -7.759 8.53e-15 ***\nDESTIN_GRID1470  0.2065616  0.0470347     4.392 1.12e-05 ***\nDESTIN_GRID1471 -0.7248992  0.0472125   -15.354  &lt; 2e-16 ***\nDESTIN_GRID1472  1.0012414  0.0469422    21.329  &lt; 2e-16 ***\nDESTIN_GRID1473 -2.1659051  0.0476893   -45.417  &lt; 2e-16 ***\nDESTIN_GRID1474 -0.0696287  0.0470202    -1.481 0.138653    \nDESTIN_GRID1475 -3.0535471  0.0489300   -62.406  &lt; 2e-16 ***\nDESTIN_GRID1476 -2.7118891  0.0482394   -56.217  &lt; 2e-16 ***\nDESTIN_GRID1477 -3.1677483  0.0505105   -62.715  &lt; 2e-16 ***\nDESTIN_GRID1486 -3.2185216  0.0567102   -56.754  &lt; 2e-16 ***\nDESTIN_GRID1487 -0.8609256  0.0472348   -18.226  &lt; 2e-16 ***\nDESTIN_GRID1488 -0.9662165  0.0475510   -20.320  &lt; 2e-16 ***\nDESTIN_GRID1489 -0.9952284  0.0472863   -21.047  &lt; 2e-16 ***\nDESTIN_GRID1490 -0.7957100  0.0475057   -16.750  &lt; 2e-16 ***\nDESTIN_GRID1491 -1.4400675  0.0472625   -30.470  &lt; 2e-16 ***\nDESTIN_GRID1492 -1.4362559  0.0472319   -30.409  &lt; 2e-16 ***\nDESTIN_GRID1493 -0.8165073  0.0470705   -17.346  &lt; 2e-16 ***\nDESTIN_GRID1494 -1.7425601  0.0474749   -36.705  &lt; 2e-16 ***\nDESTIN_GRID1506 -5.2639554  0.1254178   -41.971  &lt; 2e-16 ***\nDESTIN_GRID1507 -0.2253722  0.0470528    -4.790 1.67e-06 ***\nDESTIN_GRID1508 -0.2164737  0.0470521    -4.601 4.21e-06 ***\nDESTIN_GRID1509 -1.2786407  0.0494580   -25.853  &lt; 2e-16 ***\nDESTIN_GRID1510 -1.4447048  0.0473543   -30.508  &lt; 2e-16 ***\nDESTIN_GRID1512 -1.0557175  0.0471055   -22.412  &lt; 2e-16 ***\nDESTIN_GRID1513 -1.3966391  0.0480314   -29.078  &lt; 2e-16 ***\nDESTIN_GRID1514 -2.4364805  0.0483038   -50.441  &lt; 2e-16 ***\nDESTIN_GRID1524 -0.7233365  0.0478182   -15.127  &lt; 2e-16 ***\nDESTIN_GRID1525 -1.6543238  0.0476645   -34.708  &lt; 2e-16 ***\nDESTIN_GRID1526 -0.8879139  0.0472222   -18.803  &lt; 2e-16 ***\nDESTIN_GRID1527 -0.6444068  0.0473569   -13.607  &lt; 2e-16 ***\nDESTIN_GRID1528 -1.3645344  0.0473488   -28.819  &lt; 2e-16 ***\nDESTIN_GRID1529 -2.1510456  0.0478551   -44.949  &lt; 2e-16 ***\nDESTIN_GRID1530 -2.8251914  0.0485228   -58.224  &lt; 2e-16 ***\nDESTIN_GRID1531 -0.9941182  0.0471004   -21.106  &lt; 2e-16 ***\nDESTIN_GRID1532 -2.8544114  0.0487987   -58.494  &lt; 2e-16 ***\nDESTIN_GRID1544 -0.9983562  0.0474935   -21.021  &lt; 2e-16 ***\nDESTIN_GRID1545 -1.7214186  0.0475546   -36.199  &lt; 2e-16 ***\nDESTIN_GRID1546 -1.0989501  0.0472792   -23.244  &lt; 2e-16 ***\nDESTIN_GRID1547 -0.4387286  0.0471049    -9.314  &lt; 2e-16 ***\nDESTIN_GRID1548 -0.6716852  0.0471506   -14.246  &lt; 2e-16 ***\nDESTIN_GRID1549 -0.0548582  0.0470135    -1.167 0.243267    \nDESTIN_GRID1550 -0.9809795  0.0470827   -20.835  &lt; 2e-16 ***\nDESTIN_GRID1551 -3.3566041  0.0492633   -68.136  &lt; 2e-16 ***\nDESTIN_GRID1552 -2.0004515  0.0475860   -42.039  &lt; 2e-16 ***\nDESTIN_GRID1563 -0.4831707  0.0471892   -10.239  &lt; 2e-16 ***\nDESTIN_GRID1564 -0.4440437  0.0470912    -9.429  &lt; 2e-16 ***\nDESTIN_GRID1565 -0.3200622  0.0470680    -6.800 1.05e-11 ***\nDESTIN_GRID1566 -1.5406856  0.0476646   -32.323  &lt; 2e-16 ***\nDESTIN_GRID1567 -0.8756856  0.0471608   -18.568  &lt; 2e-16 ***\nDESTIN_GRID1568 -1.0904518  0.0471076   -23.148  &lt; 2e-16 ***\nDESTIN_GRID1569 -2.3025571  0.0475583   -48.416  &lt; 2e-16 ***\nDESTIN_GRID1570 -1.1643840  0.0471319   -24.705  &lt; 2e-16 ***\nDESTIN_GRID1571 -1.8510652  0.0489473   -37.818  &lt; 2e-16 ***\nDESTIN_GRID1582 -1.4672686  0.0476853   -30.770  &lt; 2e-16 ***\nDESTIN_GRID1583 -0.2500080  0.0470450    -5.314 1.07e-07 ***\nDESTIN_GRID1584 -0.3643067  0.0470700    -7.740 9.97e-15 ***\nDESTIN_GRID1585 -0.8242976  0.0472762   -17.436  &lt; 2e-16 ***\nDESTIN_GRID1587 -0.6781191  0.0470956   -14.399  &lt; 2e-16 ***\nDESTIN_GRID1588  0.2595774  0.0469615     5.527 3.25e-08 ***\nDESTIN_GRID1589 -0.5803252  0.0470199   -12.342  &lt; 2e-16 ***\nDESTIN_GRID1590 -1.6029380  0.0472116   -33.952  &lt; 2e-16 ***\nDESTIN_GRID1591 -3.9436507  0.0518438   -76.068  &lt; 2e-16 ***\nDESTIN_GRID1601 -0.9936426  0.0473125   -21.002  &lt; 2e-16 ***\nDESTIN_GRID1602 -0.9227705  0.0474556   -19.445  &lt; 2e-16 ***\nDESTIN_GRID1603 -0.2213405  0.0471360    -4.696 2.66e-06 ***\nDESTIN_GRID1604  0.7443753  0.0474014    15.704  &lt; 2e-16 ***\nDESTIN_GRID1606 -1.8291608  0.0473857   -38.602  &lt; 2e-16 ***\nDESTIN_GRID1607 -2.2821119  0.0475417   -48.002  &lt; 2e-16 ***\nDESTIN_GRID1608  0.0302606  0.0469719     0.644 0.519427    \nDESTIN_GRID1609 -2.1008809  0.0474440   -44.281  &lt; 2e-16 ***\nDESTIN_GRID1610 -3.0337702  0.0513668   -59.061  &lt; 2e-16 ***\nDESTIN_GRID1620 -0.1610875  0.0471397    -3.417 0.000633 ***\nDESTIN_GRID1621 -0.7679481  0.0472330   -16.259  &lt; 2e-16 ***\nDESTIN_GRID1622 -0.6704629  0.0474001   -14.145  &lt; 2e-16 ***\nDESTIN_GRID1623 -0.6537562  0.0472155   -13.846  &lt; 2e-16 ***\nDESTIN_GRID1624  1.0396685  0.0474554    21.908  &lt; 2e-16 ***\nDESTIN_GRID1625 -3.2696703  0.0515479   -63.430  &lt; 2e-16 ***\nDESTIN_GRID1626 -1.1998415  0.0471946   -25.423  &lt; 2e-16 ***\nDESTIN_GRID1627 -1.5572876  0.0472025   -32.992  &lt; 2e-16 ***\nDESTIN_GRID1628 -1.4885563  0.0471750   -31.554  &lt; 2e-16 ***\nDESTIN_GRID1629 -2.4702271  0.0477996   -51.679  &lt; 2e-16 ***\nDESTIN_GRID1630 -4.1301811  0.0691602   -59.719  &lt; 2e-16 ***\nDESTIN_GRID1639 -1.2011380  0.0474708   -25.303  &lt; 2e-16 ***\nDESTIN_GRID1640  0.1384359  0.0470020     2.945 0.003226 ** \nDESTIN_GRID1641  0.3078048  0.0469949     6.550 5.76e-11 ***\nDESTIN_GRID1645 -2.7577340  0.0483453   -57.042  &lt; 2e-16 ***\nDESTIN_GRID1646 -2.0012315  0.0472835   -42.324  &lt; 2e-16 ***\nDESTIN_GRID1647 -0.1553145  0.0469873    -3.305 0.000948 ***\nDESTIN_GRID1648 -4.8909341  0.0626646   -78.049  &lt; 2e-16 ***\nDESTIN_GRID1658  0.0985550  0.0470678     2.094 0.036269 *  \nDESTIN_GRID1659 -1.2836132  0.0473792   -27.092  &lt; 2e-16 ***\nDESTIN_GRID1660 -1.3750623  0.0473529   -29.039  &lt; 2e-16 ***\nDESTIN_GRID1661 -1.2714815  0.0474633   -26.789  &lt; 2e-16 ***\nDESTIN_GRID1663 -1.4332492  0.0488492   -29.340  &lt; 2e-16 ***\nDESTIN_GRID1665 -2.8032570  0.0482636   -58.082  &lt; 2e-16 ***\nDESTIN_GRID1666 -0.1287340  0.0469996    -2.739 0.006162 ** \nDESTIN_GRID1667 -3.6577452  0.0519826   -70.365  &lt; 2e-16 ***\nDESTIN_GRID1668 -1.3141428  0.0495952   -26.497  &lt; 2e-16 ***\nDESTIN_GRID1677 -0.9176456  0.0472393   -19.425  &lt; 2e-16 ***\nDESTIN_GRID1678 -0.6521563  0.0471574   -13.829  &lt; 2e-16 ***\nDESTIN_GRID1679 -0.2867217  0.0470999    -6.088 1.15e-09 ***\nDESTIN_GRID1682 -0.3750945  0.0476497    -7.872 3.49e-15 ***\nDESTIN_GRID1684 -2.0994139  0.0502161   -41.808  &lt; 2e-16 ***\nDESTIN_GRID1685 -1.8145863  0.0473223   -38.345  &lt; 2e-16 ***\nDESTIN_GRID1696 -1.2452027  0.0477959   -26.053  &lt; 2e-16 ***\nDESTIN_GRID1697 -2.9176200  0.0508349   -57.394  &lt; 2e-16 ***\nDESTIN_GRID1698 -1.6971683  0.0516862   -32.836  &lt; 2e-16 ***\nDESTIN_GRID1699 -0.4912126  0.0471351   -10.421  &lt; 2e-16 ***\nDESTIN_GRID1702 -1.2795241  0.0489460   -26.142  &lt; 2e-16 ***\nDESTIN_GRID1704 -1.7267918  0.0473155   -36.495  &lt; 2e-16 ***\nDESTIN_GRID1705 -2.6635232  0.0506945   -52.541  &lt; 2e-16 ***\nDESTIN_GRID1715 -0.6206580  0.0472005   -13.149  &lt; 2e-16 ***\nDESTIN_GRID1716 -1.5925153  0.0475323   -33.504  &lt; 2e-16 ***\nDESTIN_GRID1717 -2.2634758  0.0483064   -46.857  &lt; 2e-16 ***\nDESTIN_GRID1718 -2.6911390  0.0525923   -51.170  &lt; 2e-16 ***\nDESTIN_GRID1721 -1.7904867  0.0513340   -34.879  &lt; 2e-16 ***\nDESTIN_GRID1723 -3.1755684  0.0499253   -63.606  &lt; 2e-16 ***\nDESTIN_GRID1735 -1.6206008  0.0476904   -33.982  &lt; 2e-16 ***\nDESTIN_GRID1736 -0.4304773  0.0472976    -9.101  &lt; 2e-16 ***\nDESTIN_GRID1737 -0.3549174  0.0471081    -7.534 4.92e-14 ***\nDESTIN_GRID1740 -0.5090936  0.0479845   -10.610  &lt; 2e-16 ***\nDESTIN_GRID1742 -3.1260571  0.0504708   -61.938  &lt; 2e-16 ***\nDESTIN_GRID1753 -1.1055491  0.0474942   -23.278  &lt; 2e-16 ***\nDESTIN_GRID1754 -0.2867322  0.0470956    -6.088 1.14e-09 ***\nDESTIN_GRID1755 -1.3907301  0.0475723   -29.234  &lt; 2e-16 ***\nDESTIN_GRID1758 -2.0625023  0.0509667   -40.468  &lt; 2e-16 ***\nDESTIN_GRID1773 -1.4622187  0.0477701   -30.609  &lt; 2e-16 ***\nDESTIN_GRID1774  0.8895778  0.0469505    18.947  &lt; 2e-16 ***\nDESTIN_GRID1775 -1.7924354  0.0479335   -37.394  &lt; 2e-16 ***\nDESTIN_GRID1776 -0.9550159  0.0472885   -20.196  &lt; 2e-16 ***\nDESTIN_GRID1778 -0.3088215  0.0482448    -6.401 1.54e-10 ***\nDESTIN_GRID1791 -1.1317712  0.0476400   -23.757  &lt; 2e-16 ***\nDESTIN_GRID1792 -1.3140780  0.0473510   -27.752  &lt; 2e-16 ***\nDESTIN_GRID1793 -1.4154473  0.0474424   -29.835  &lt; 2e-16 ***\nDESTIN_GRID1794 -0.7351019  0.0474220   -15.501  &lt; 2e-16 ***\nDESTIN_GRID1795 -1.0466266  0.0472899   -22.132  &lt; 2e-16 ***\nDESTIN_GRID1796 -0.9347654  0.0473013   -19.762  &lt; 2e-16 ***\nDESTIN_GRID1797 -0.7253917  0.0472272   -15.360  &lt; 2e-16 ***\nDESTIN_GRID1811 -1.0350696  0.0473429   -21.863  &lt; 2e-16 ***\nDESTIN_GRID1812 -0.8763899  0.0471451   -18.589  &lt; 2e-16 ***\nDESTIN_GRID1813 -0.3442855  0.0470846    -7.312 2.63e-13 ***\nDESTIN_GRID1814 -0.1666488  0.0470753    -3.540 0.000400 ***\nDESTIN_GRID1815 -1.1395844  0.0473063   -24.089  &lt; 2e-16 ***\nDESTIN_GRID1816 -0.2428132  0.0471104    -5.154 2.55e-07 ***\nDESTIN_GRID1817 -3.5597546  0.0546400   -65.149  &lt; 2e-16 ***\nDESTIN_GRID1830 -0.4684873  0.0473191    -9.901  &lt; 2e-16 ***\nDESTIN_GRID1831 -0.5200074  0.0471215   -11.035  &lt; 2e-16 ***\nDESTIN_GRID1832 -0.2003007  0.0470484    -4.257 2.07e-05 ***\nDESTIN_GRID1833 -1.4925334  0.0473322   -31.533  &lt; 2e-16 ***\nDESTIN_GRID1834 -2.1257152  0.0482203   -44.083  &lt; 2e-16 ***\nDESTIN_GRID1835 -0.2452565  0.0470966    -5.208 1.91e-07 ***\nDESTIN_GRID1849 -1.8406628  0.0481163   -38.254  &lt; 2e-16 ***\nDESTIN_GRID1850 -1.1220234  0.0472892   -23.727  &lt; 2e-16 ***\nDESTIN_GRID1851 -1.6720794  0.0483966   -34.550  &lt; 2e-16 ***\nDESTIN_GRID1852 -0.1974576  0.0470232    -4.199 2.68e-05 ***\nDESTIN_GRID1853 -2.0398735  0.0477437   -42.726  &lt; 2e-16 ***\nDESTIN_GRID1854 -1.7753044  0.0476167   -37.283  &lt; 2e-16 ***\nDESTIN_GRID1855 -3.6275887  0.0542351   -66.886  &lt; 2e-16 ***\nDESTIN_GRID1868 -1.1871094  0.0474430   -25.022  &lt; 2e-16 ***\nDESTIN_GRID1869 -1.4650967  0.0475110   -30.837  &lt; 2e-16 ***\nDESTIN_GRID1870 -3.3717915  0.0563517   -59.835  &lt; 2e-16 ***\nDESTIN_GRID1871  1.3258607  0.0469408    28.245  &lt; 2e-16 ***\nDESTIN_GRID1872 -1.9958278  0.0485179   -41.136  &lt; 2e-16 ***\nDESTIN_GRID1873 -1.5474451  0.0475904   -32.516  &lt; 2e-16 ***\nDESTIN_GRID1887 -1.1357693  0.0475327   -23.895  &lt; 2e-16 ***\nDESTIN_GRID1888  0.3588790  0.0470345     7.630 2.35e-14 ***\nDESTIN_GRID1889  0.0745568  0.0470560     1.584 0.113096    \nDESTIN_GRID1890 -1.1670200  0.0472274   -24.711  &lt; 2e-16 ***\nDESTIN_GRID1891 -1.7359093  0.0477483   -36.355  &lt; 2e-16 ***\nDESTIN_GRID1892  0.9690590  0.0469616    20.635  &lt; 2e-16 ***\nDESTIN_GRID1893 -4.0953175  0.0775244   -52.826  &lt; 2e-16 ***\nDESTIN_GRID1905 -1.1704818  0.0889621   -13.157  &lt; 2e-16 ***\nDESTIN_GRID1906 -2.5705138  0.0492646   -52.178  &lt; 2e-16 ***\nDESTIN_GRID1907  0.2546640  0.0470369     5.414 6.16e-08 ***\nDESTIN_GRID1908 -0.1307645  0.0471168    -2.775 0.005515 ** \nDESTIN_GRID1909 -1.4751769  0.0473253   -31.171  &lt; 2e-16 ***\nDESTIN_GRID1910 -2.3383329  0.0483580   -48.355  &lt; 2e-16 ***\nDESTIN_GRID1911 -3.3922005  0.0572790   -59.222  &lt; 2e-16 ***\nDESTIN_GRID1926 -1.0198933  0.0477820   -21.345  &lt; 2e-16 ***\nDESTIN_GRID1927 -0.9552054  0.0479075   -19.939  &lt; 2e-16 ***\nDESTIN_GRID1928 -0.9582305  0.0471942   -20.304  &lt; 2e-16 ***\nDESTIN_GRID1929 -1.0476041  0.0474471   -22.079  &lt; 2e-16 ***\nDESTIN_GRID1930 -1.4644196  0.0474580   -30.857  &lt; 2e-16 ***\nDESTIN_GRID1944 -1.4641078  0.0489639   -29.902  &lt; 2e-16 ***\nDESTIN_GRID1945 -1.6197358  0.0481206   -33.660  &lt; 2e-16 ***\nDESTIN_GRID1946 -1.1981160  0.0475504   -25.197  &lt; 2e-16 ***\nDESTIN_GRID1947  0.3859770  0.0469929     8.214  &lt; 2e-16 ***\nDESTIN_GRID1948 -0.5903166  0.0471713   -12.514  &lt; 2e-16 ***\nDESTIN_GRID1949 -1.8491867  0.0482116   -38.356  &lt; 2e-16 ***\nDESTIN_GRID1965 -0.3231935  0.0471944    -6.848 7.48e-12 ***\nDESTIN_GRID1966 -2.0657593  0.0482208   -42.840  &lt; 2e-16 ***\nDESTIN_GRID1967 -1.6293329  0.0474642   -34.328  &lt; 2e-16 ***\nDESTIN_GRID1968 -1.0643559  0.0473897   -22.460  &lt; 2e-16 ***\nDESTIN_GRID1983 -0.0832107  0.0474741    -1.753 0.079643 .  \nDESTIN_GRID1984 -1.4255736  0.0480782   -29.651  &lt; 2e-16 ***\nDESTIN_GRID1985 -0.7398027  0.0472882   -15.645  &lt; 2e-16 ***\nDESTIN_GRID1986 -0.9025379  0.0472512   -19.101  &lt; 2e-16 ***\nDESTIN_GRID1987 -2.6492964  0.0579188   -45.742  &lt; 2e-16 ***\nDESTIN_GRID2002 -0.1358439  0.0488287    -2.782 0.005402 ** \nDESTIN_GRID2003 -0.4202283  0.0475962    -8.829  &lt; 2e-16 ***\nDESTIN_GRID2004  0.3026961  0.0474493     6.379 1.78e-10 ***\nDESTIN_GRID2005 -1.3703453  0.0478009   -28.668  &lt; 2e-16 ***\nDESTIN_GRID2006 -0.5231635  0.0472668   -11.068  &lt; 2e-16 ***\nDESTIN_GRID2021  0.2662095  0.0479279     5.554 2.79e-08 ***\nDESTIN_GRID2022  0.8169685  0.0476263    17.154  &lt; 2e-16 ***\nDESTIN_GRID2023 -0.5934643  0.0477806   -12.421  &lt; 2e-16 ***\nDESTIN_GRID2024 -1.9978372  0.0487901   -40.948  &lt; 2e-16 ***\nDESTIN_GRID2025 -0.5454084  0.0483356   -11.284  &lt; 2e-16 ***\nDESTIN_GRID2042 -0.5005153  0.0486197   -10.294  &lt; 2e-16 ***\nDESTIN_GRID2043 -2.7384049  0.0536114   -51.079  &lt; 2e-16 ***\nDESTIN_GRID2044 -0.8005119  0.0474733   -16.862  &lt; 2e-16 ***\nDESTIN_GRID2045  0.3092550  0.0480096     6.442 1.18e-10 ***\nDESTIN_GRID2061 -1.5150415  0.0530028   -28.584  &lt; 2e-16 ***\nDESTIN_GRID2062 -1.2372315  0.0494549   -25.017  &lt; 2e-16 ***\nDESTIN_GRID2063 -0.4965086  0.0474631   -10.461  &lt; 2e-16 ***\nDESTIN_GRID2064 -1.8464146  0.0567363   -32.544  &lt; 2e-16 ***\nDESTIN_GRID2079 -1.4368516  0.0495518   -28.997  &lt; 2e-16 ***\nDESTIN_GRID2082 -1.4019140  0.0509024   -27.541  &lt; 2e-16 ***\nDESTIN_GRID2083 -0.8523820  0.0479106   -17.791  &lt; 2e-16 ***\nDESTIN_GRID2098  0.5850983  0.0472126    12.393  &lt; 2e-16 ***\nDESTIN_GRID2099  0.5384433  0.0471752    11.414  &lt; 2e-16 ***\nDESTIN_GRID2102 -0.4806040  0.0478178   -10.051  &lt; 2e-16 ***\nDESTIN_GRID2115  0.0294987  0.0505036     0.584 0.559159    \nDESTIN_GRID2119  0.8028447  0.0471537    17.026  &lt; 2e-16 ***\nDESTIN_GRID2121 -1.2934985  0.0485765   -26.628  &lt; 2e-16 ***\nDESTIN_GRID2137 -0.4214778  0.0477093    -8.834  &lt; 2e-16 ***\nDESTIN_GRID2140 -2.4145943  0.0554783   -43.523  &lt; 2e-16 ***\nDESTIN_GRID2153 -1.3952009  0.0546267   -25.541  &lt; 2e-16 ***\nDESTIN_GRID2158  0.5621215  0.0473586    11.869  &lt; 2e-16 ***\nDESTIN_GRID2177  1.2038880  0.0471683    25.523  &lt; 2e-16 ***\nDESTIN_GRID2178 -1.8306640  0.0526859   -34.747  &lt; 2e-16 ***\nDESTIN_GRID2196  0.6471048  0.0482290    13.417  &lt; 2e-16 ***\nDESTIN_GRID2197  0.9575798  0.0473828    20.209  &lt; 2e-16 ***\nDESTIN_GRID2267  0.5468131  0.0507074    10.784  &lt; 2e-16 ***\nlog(dist)       -1.6045719  0.0002924 -5488.258  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 96655476  on 64935  degrees of freedom\nResidual deviance: 24302300  on 63307  degrees of freedom\nAIC: 24662144\n\nNumber of Fisher Scoring iterations: 7\n\n\nVariable distance is statistically significant with p-value &lt; 0.05 and a coefficient of -1.6\n\n\nShow the code\ndata.frame(\n  Coefficient = sort(dbcSIM$coefficients[1629]\n                     , decreasing = TRUE\n  )\n)\n\n\n          Coefficient\nlog(dist)   -1.604572"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#r-squared",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#r-squared",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "10.1 R-Squared",
    "text": "10.1 R-Squared\nCalculating R-Squared helps determine the proportion of variance in the dependent variable that can be explained by the independent variables. In other words, R-Squared shows how well the data fit the regression model (the goodness of fit).\nTo obtain R-Squared value, we will be using the following helper function:\n\nrsq &lt;- function(observed,estimated){\n  r &lt;- cor(observed,estimated)\n  R2 &lt;- r^2\n  R2\n}\n\n\nUnconstrained SIMOrigin-Constrained SIMDestination-Constrained SIMDoubly Constrained SIM\n\n\nAn R-squared value of 0.26 means that approximately 26% of the variance in the TRIPS dependent variable is explained by the independent variables in the model.\n\nrsq(uncSIM$data$TRIPS, uncSIM$fitted.values)\n\n[1] 0.2571275\n\n\n\n\nAn R-squared value of 0.41 means that approximately 41% of the variance in the TRIPS dependent variable is explained by the independent variables in the model.\n\nrsq(orcSIM$data$TRIPS, orcSIM$fitted.values)\n\n[1] 0.4082423\n\n\n\n\nAn R-squared value of 0.41 means that approximately 41% of the variance in the TRIPS dependent variable is accounted for by the explanatory variables in the model.\n\nrsq(decSIM$data$TRIPS, decSIM$fitted.values)\n\n[1] 0.4024544\n\n\n\n\nAn R-squared value of 0.58 means that approximately 58% of the variance in the TRIPS dependent variable is explained by the independent variables in the model.\n\nrsq(dbcSIM$data$TRIPS, dbcSIM$fitted.values)\n\n[1] 0.5766974\n\n\n\n\n\nTable below summarises of the R-Squared values yielded by the 4 different SIMs:\n\n\n\nModel\nR-Squared Value\n\n\n\n\nUnconstrained\n0.257\n\n\nOrigin-Constrained\n0.408\n\n\nDestination-Constrained\n0.402\n\n\nDoubly-Cconstrained\n0.577\n\n\n\nDoubly-constrained model yielded the highest R-Squared value amongst the 4 models calibrated."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#root-mean-squared-error",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#root-mean-squared-error",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "10.2 Root Mean Squared Error",
    "text": "10.2 Root Mean Squared Error\nRoot Mean Squared Error (RMSE) is a useful model performance measure to evaluate how closely a model’s predicted values match the actual values. We explore how to utilise the compare_performance() function from performance package to evaluate this measure.\nThe code chunk below serves a dual purpose:\n\nIt first creates a list named model_list.\nThen, it computes the Root Mean Squared Error (RMSE) for all the models in model_list using the compare_performance() function.\n\n\nmodel_list &lt;- list(\n  Unconstrained = uncSIM,\n  Origin_Constrained = orcSIM,\n  Desintation_Constrained = decSIM,\n  Doubly_Constrained = dbcSIM)\n\ncompare_performance(model_list,\n                    metrics = \"RMSE\")\n\n# Comparison of Model Performance Indices\n\nName                    | Model |     RMSE\n------------------------------------------\nUnconstrained           |   glm | 1542.581\nOrigin_Constrained      |   glm | 1377.536\nDesintation_Constrained |   glm | 1383.029\nDoubly_Constrained      |   glm | 1164.166\n\n\nSimilar to our R-Squared results, the results above reveal that doubly constrained SIM is the best model as it has the smallest RMSE value of 1164.166 amongst the 4 models calibrated."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#visualising-fitted-values",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#visualising-fitted-values",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "10.3 Visualising Fitted Values",
    "text": "10.3 Visualising Fitted Values\nPlotting observed versus fitted values allows us to visually assess how well the model captures the data. If the model is a good fit, the fitted values should closely follow the trend of the observed values. Such visualizations can help in identifying patterns or anomalies that might not be apparent from the model’s statistical output alone. In this section, we will visualise the observed values and the fitted values.\nThe code chunk below performs the following functions:\n\nIt first extracts the fitted values from each model\nAppends the fitted values into inter_zonal_flow data frame\nLastly, rename() is used to rename the field name\n\n\nUnconstrained SIMOrigin-Constrained SIMDestination-Constrained SIMDoubly Constrained SIM\n\n\n\n# Extracts fitted values from model\ndf &lt;- as.data.frame(uncSIM$fitted.values) %&gt;%\n    round(digits = 0)\n\n# Append fitted values to inter_zonal_flow\ninterzonal_flow  &lt;- interzonal_flow  %&gt;%\n    cbind(df) %&gt;%\n    rename(uncTRIPS = \"uncSIM$fitted.values\")\n\n\n\n\n# Extracts fitted values from model\ndf &lt;- as.data.frame(orcSIM$fitted.values) %&gt;%\n    round(digits = 0)\n\n# Append fitted values to inter_zonal_flow\ninterzonal_flow  &lt;- interzonal_flow  %&gt;%\n    cbind(df) %&gt;%\n    rename(orcTRIPS = \"orcSIM$fitted.values\")\n\n\n\n\n# Extracts fitted values from model\ndf &lt;- as.data.frame(decSIM$fitted.values) %&gt;%\n    round(digits = 0)\n\n# Append fitted values to inter_zonal_flow\ninterzonal_flow  &lt;- interzonal_flow  %&gt;%\n    cbind(df) %&gt;%\n    rename(decTRIPS = \"decSIM$fitted.values\")\n\n\n\n\n# Extracts fitted values from model\ndf &lt;- as.data.frame(dbcSIM$fitted.values) %&gt;%\n    round(digits = 0)\n\n# Append fitted values to inter_zonal_flow\ninterzonal_flow  &lt;- interzonal_flow  %&gt;%\n    cbind(df) %&gt;%\n    rename(dbcTRIPS = \"dbcSIM$fitted.values\")\n\n\n\n\nUsing ggplot() and ggarrange(), we will visualise the observed against fitted values of the 4 models in a single visual for better comparison.\n\n\nShow the code\nlibrary(plotly)\nunc_p &lt;- ggplot(data = interzonal_flow,\n                aes(x = uncTRIPS,\n                    y = TRIPS)) +\n  geom_point(shape = 16, size = 0.5) +\n  geom_smooth(method = lm) +\n  ggtitle(\"Unconstrained SIM\") +\n  theme(\nplot.title = element_text(size=8, face=\"bold\"),\naxis.title.x = element_text(size=8, face=\"bold\"),\naxis.title.y = element_text(size=8, face=\"bold\"),\naxis.text.x = element_text(size=6),\naxis.text.y = element_text(size=6)\n)\n\norc_p &lt;- ggplot(data = interzonal_flow,\n                aes(x = orcTRIPS,\n                    y = TRIPS)) +\n  geom_point(shape = 16, size = 0.5) +\n  geom_smooth(method = lm)  +\n  ggtitle(\"Origin-constrained SIM\") +\n  theme(\nplot.title = element_text(size=8, face=\"bold\"),\naxis.title.x = element_text(size=8, face=\"bold\"),\naxis.title.y = element_text(size=8, face=\"bold\"),\naxis.text.x = element_text(size=6),\naxis.text.y = element_text(size=6)\n)\n\ndec_p &lt;- ggplot(data = interzonal_flow,\n                aes(x = decTRIPS,\n                    y = TRIPS)) +\n  geom_point(shape = 16, size = 0.5) +\n  geom_smooth(method = lm) +\n  ggtitle(\"Destination-constrained SIM\") +\n  theme(\nplot.title = element_text(size=8, face=\"bold\"),\naxis.title.x = element_text(size=8, face=\"bold\"),\naxis.title.y = element_text(size=8, face=\"bold\"),\naxis.text.x = element_text(size=6),\naxis.text.y = element_text(size=6)\n)\n\ndbc_p &lt;- ggplot(data = interzonal_flow,\n                aes(x = dbcTRIPS,\n                    y = TRIPS)) +\n  geom_point(shape = 16, size = 0.5) +\n  geom_smooth(method = lm) +\n  ggtitle(\"Doubly-constrained SIM\") +\n  theme(\nplot.title = element_text(size=8, face=\"bold\"),\naxis.title.x = element_text(size=8, face=\"bold\"),\naxis.title.y = element_text(size=8, face=\"bold\"),\naxis.text.x = element_text(size=6),\naxis.text.y = element_text(size=6)\n)\n\nggarrange(unc_p, orc_p, dec_p, dbc_p,\n          ncol = 2,\n          nrow = 2)\n\n\n\n\n\nFrom the four plots above, it is evident that most data points do not align with the best fit line. The origin-constrained and doubly-constrained models appear to have a comparatively better fit, as more points cluster close to the line of perfect fit, suggesting that these models’ predictions are more aligned with the actual data. Conversely, the unconstrained and destination-constrained models display a broader scatter of points, further from the line, indicating a potential deficiency in capturing the underlying trend effectively. The relatively flat line observed for the unconstrained SIM implies limited predictive power, as there is minimal variation in the fitted values across the observed data range, thus failing to capture the data’s variability adequately.\nAdditionally, there are notable outliers on the top middle of the Origin-constrained and Doubly-constrained SIM models where the values are furthest from the best fit line. Such outliers can exert a disproportionate influence on the model, and therefore, their impact warrants careful evaluation."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#removing-outlier",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#removing-outlier",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "11.3 Removing Outlier",
    "text": "11.3 Removing Outlier\nTo analyse the impact of the outlier on our model fit, we remove the outlier using the filter() function and recalibrated the models using glm().\n\nintrazonal_flow2 &lt;- intrazonal_flow %&gt;%\n  filter(!TRIPS %in% c(62718))\n\nNote that the total observation count has reduced by 1, from 623 to 622.\n\nintra_uncSIM2 &lt;- glm(formula = TRIPS ~ \n                #log(ORI_TRAINEXITS) +\n                #log(ORI_BIZ) +\n                #log(ORI_FS) +\n                #log(ORI_RECS) +\n                #log(ORI_RETAIL) +\n                #log(ORI_SCHOOLS) +\n                log(ORI_HDBPOP) +\n                log(DEST_TRAINEXITS) +\n                log(DEST_BIZ) +\n                log(DEST_FS) +\n                log(DEST_RECS) +\n                log(DEST_RETAIL) +\n                log(DEST_SCHOOLS),\n                #log(DEST_HDBPOP) +\n                #log(dist),\n              family = poisson(link = \"log\"),\n              data = intrazonal_flow2,\n              na.action = na.exclude) # excludes any NAs in the data\n\nR-Squared\n\n\nShow the code\nrsq(intra_uncSIM2$data$TRIPS, intra_uncSIM2$fitted.values)\n\n\nThe table below compares the R-Squared values before and after the removal of the outlier.\n\n\n\n\n\n\n\n\nModel\nR-Squared Value\nR-Squared Value after removing outlier\n\n\n\n\nUnconstrained\n0.277\n0.377\n\n\n\nRMSE\n\n\nShow the code\nmodel_list_intra &lt;- list(\n  Unconstrained = intra_uncSIM,\n  Unconstrained_wo_Outliers = intra_uncSIM2)\n\n\ncompare_performance(model_list_intra,\n                    metrics = \"RMSE\")\n\n\n# Comparison of Model Performance Indices\n\nName                      | Model |     RMSE\n--------------------------------------------\nUnconstrained             |   glm | 3425.455\nUnconstrained_wo_Outliers |   glm | 2529.285\n\n\nWe observe a marked improvement in both R-Squared and RMSE values following the removal of outliers."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#section",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#section",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "10.4",
    "text": "10.4"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#extracting-inter-zonal-flow-data",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#extracting-inter-zonal-flow-data",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "8.3 Extracting Inter-Zonal Flow Data",
    "text": "8.3 Extracting Inter-Zonal Flow Data\nIn general, we will calibrate separate Spatial Interaction Models for inter- and intra-zonal flows. In our analysis, we will focus our attention on inter-zonal flows. Therefore, it is necessary to exclude intra-zonal flows from the flow_data.\nFirst, a new column called FlowNoIntra will be created by using the code chunk below.\n\nflowdata_final$FlowNoIntra &lt;- ifelse(\n  flowdata_final$ORIGIN_GRID == flowdata_final$DESTIN_GRID, \n  0, \n  flowdata_final$TRIPS)\n\nIn FlowNoIntra field, all intra-zonal flow will be given a value of 0, else the original flow values will be retained.\nNext, inter-zonal flow will be selected from flow_data and saved into a new output data.frame called inter_zonal_flow using the code chunk below.\n\ninterzonal_flow &lt;- flowdata_final %&gt;%\n  filter(FlowNoIntra &gt; 0)\n\nThere are 64,936 interzonal flows in our dataset."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#deviance-residuals-vs-fitted-values",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#deviance-residuals-vs-fitted-values",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "10.3.2 Deviance Residuals vs Fitted Values",
    "text": "10.3.2 Deviance Residuals vs Fitted Values\nResiduals represent the discrepancies between observed values and the predictions made by our model. Ideally, for a model that fits the data well, the residuals should be small and close to zero. Analysing the residuals of GLMs can yield crucial insights into the performance of the model. Deviance residuals, specifically, measure the degree to which probabilities estimated from our model diverge from the observed frequencies of success. Larger values suggest greater divergence, while smaller values indicate less divergence.\nThe code chunk below extracts residuals, using (residuals())[https://www.rdocumentation.org/packages/stats/versions/3.6.2/topics/residuals], and fitted values, using fitted(), from two models. Fitted values are the predictions made by the model. For each observation in the model’s dataset, it gives the expected value of the response variable, based on the model’s fitted parameters.\n\nres_dbcSIM &lt;- residuals(dbcSIM, type=\"deviance\")\nres_dbcSIM2 &lt;- residuals(dbcSIM2, type=\"deviance\")\n\nfitted_dbcSIM &lt;- fitted(dbcSIM)\nfitted_dbcSIM2 &lt;- fitted(dbcSIM2)\n\nBy employing ggplot(), we can compare the plots of residuals versus fitted values for the Doubly-Constrained model with and without outliers. The axis range for both plots are kept constant to visualise the difference between both plots.\n\n\nShow the code\n# Create data frames for plotting\ndf_dbcSIM &lt;- data.frame(Fitted = fitted_dbcSIM, Residuals = res_dbcSIM)\ndf_dbcSIM2 &lt;- data.frame(Fitted = fitted_dbcSIM2, Residuals = res_dbcSIM2)\n\n# Create individual ggplots\np_dbcSIM &lt;- ggplot(df_dbcSIM, aes(x = Fitted, y = Residuals)) +\n  geom_point(size = 0.5) +\n  geom_hline(yintercept = 0, color = \"red\", linetype = \"dashed\") +\n  labs(x = \"Fitted Values\", y = \"Deviance Residuals\", title = \"Doubly Constrained SIM\") +\n  theme(\n    plot.title = element_text(size=8, face=\"bold\"),\n    axis.title.x = element_text(size=8, face=\"bold\"),\n    axis.title.y = element_text(size=8, face=\"bold\"),\n    axis.text.x = element_text(size=6),\n    axis.text.y = element_text(size=6)\n    ) +\n  scale_x_continuous(limits = c(0, 60000)) +\n  scale_y_continuous(limits = c(-300, 450))  \n\np_dbcSIM2 &lt;- ggplot(df_dbcSIM2, aes(x = Fitted, y = Residuals)) +\n  geom_point(size = 0.5) +\n  geom_hline(yintercept = 0, color = \"red\", linetype = \"dashed\") +\n  labs(x = \"Fitted Values\", y = \"Deviance Residuals\", title = \"Doubly Constrained SIM w/o Outliers\") +\n  theme(\n    plot.title = element_text(size=8, face=\"bold\"),\n    axis.title.x = element_text(size=8, face=\"bold\"),\n    axis.title.y = element_text(size=8, face=\"bold\"),\n    axis.text.x = element_text(size=6),\n    axis.text.y = element_text(size=6)\n    ) +\n  scale_x_continuous(limits = c(0, 60000)) +\n  scale_y_continuous(limits = c(-300, 450)) \n\n# Arrange the plots in a 2x2 grid\nggarrange(p_dbcSIM, p_dbcSIM2, ncol = 2, nrow = 1)\n\n\n\n\n\nWith both plots, the vertical dispersion at lower fitted values suggests signs of overfitting to varying degrees, and to a lesser extent, underfitting. The removal of outliers leads to a decrease in the spread of residuals, particularly in the range of higher residuals. The concentration of residuals around the zero line seems tighter as well, which suggests an improved model fit."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#identifying-inter--intra-zonal-flows",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#identifying-inter--intra-zonal-flows",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "4.1 Identifying Inter- & Intra-Zonal Flows",
    "text": "4.1 Identifying Inter- & Intra-Zonal Flows\nIntrazonal travels are considered localised and short duration trips within a transportation analysis zone (i.e. within a hexagon). For our analysis, we will be separating them.\nTo do that, we create a new column in the od_data dataframe called Zone_Type using mutate() that labels each row as either “Intrazone” or “Interzone” based on whether the ORIGIN_GRID and DESTIN_GRID are the same or different.\n\nod_data &lt;- od_data %&gt;%\n  mutate(Zone_Type = ifelse(ORIGIN_GRID == DESTIN_GRID, \"intrazone\", \"interzone\"))\n\nThere are 623 combinations of intra-zonal travels and 64,936 combinations of inter-zonal travels during the weekday morning peak period based on our dataset.\n\ntable(od_data$Zone_Type)\n\n\ninterzone intrazone \n    64936       623"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#interzonal-od-flow-distribution",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#interzonal-od-flow-distribution",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "4.2 Interzonal OD Flow Distribution",
    "text": "4.2 Interzonal OD Flow Distribution\nIn the code chunk below, we use filter() to identify the inter-data before using summary() to evaulate the distribution of data.\n\n\nShow the code\nod_interzone &lt;- od_data %&gt;%\n  filter(Zone_Type == \"interzone\")\n\nquantile(od_interzone$MORNING_PEAK, \n         probs = seq(0, 1.0, by = .05))\n\n\n   0%    5%   10%   15%   20%   25%   30%   35%   40%   45%   50%   55%   60% \n    1     1     2     3     5     7    11    15    21    28    37    50    67 \n  65%   70%   75%   80%   85%   90%   95%  100% \n   90   124   174   252   388   658  1399 77433 \n\n\nFrom the summary statistics provided above, we observe that the minimum number of passenger trips for each interzonal combination of origin and destination bus stop is 1. The maximum number of trips recorded is 77,433 passengers, noted during the weekday morning peak period. Additionally, the 90th percentile for passenger trips stands at 174, indicating a highly right-skewed distribution."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#creating-interzonal-flow-lines",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#creating-interzonal-flow-lines",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "4.2 Creating Interzonal Flow Lines",
    "text": "4.2 Creating Interzonal Flow Lines\nDesire lines visually represent the connections between originating and destination hexagons using straight lines. The od2line() function of stplanr package is utilized to create these lines. The width of each desire line is proportional to number of passenger trips, i.e. thicker lines would represent higher ridership.\n\n# Creating centroids representing desire line start and end points\nflowLine &lt;- od2line(flow = od_interzone, \n                    zones = area_hexagon_grid,\n                    zone_code = \"grid_id\")\n\nSince there are 65,559 different flow lines resulting from combinations of origin to destination hexagons, an excess of intersecting lines can cause visual clutter and obscure analysis. Considering that the 90th percentile is 658, we will focus on inter-zonal flows with the top 10% of ridership.\n\n\nShow the code\ntmap_mode(\"view\")\ntmap_options(check.and.fix = TRUE)\n\n#tm_basemap(\"OneMapSG.Grey\") +\ntm_basemap(\"OpenStreetMap\") +\ntm_shape(mpsz) +\n  tm_polygons(col='#C2D3CC', border.alpha = 0.1, alpha = 0.3) +\ntm_shape(area_hexagon_grid) +\n  tm_fill(alpha=0.7, \n          palette=\"RdBu\") + \n  tm_borders(alpha = 0.5)+\nflowLine %&gt;%  \n  filter(MORNING_PEAK &gt;= 659) %&gt;% \ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.3,\n           lines.lwd = \"all\",\n           popup.vars = c(\"No. of Bus Stops at Origin: \" = \"ORIGIN_nBS\",\n                         \"Descriptions of Bus Stops at Origin: \" = \"ORIGIN_DESC\",\n                         \"No. of Bus Stops at Destination: \" = \"DESTIN_nBS\",\n                         \"Descriptions of Bus Stops at Destination: \" = \"DESTIN_DESC\",\n                         \"No. of Passenger Trips :\" = \"MORNING_PEAK\"))\n\n\n\n\n\n\n\nShow the code\n#tm_view(set.zoom.limits = c(11,14))\n\n\nThe map reveals that Yew Tee, Woodlands, and Yishun dominate inter-zonal bus ridership during weekday mornings, with notably wider desire lines. Key routes include travel within Yew Tee, between Woodlands Checkpoint and Woodlands MRT Station, as well as within Woodlands and Yishun. Interestingly, though broad, these desire lines are relatively short, often indicating bus travel to neighboring hexagons. This suggests a higher demand for feeder bus services in these areas during weekday mornings. Areas such as Boon Lay, Bedok, Choa Chu Kang, Clementi, Tampines, Pasir Ris, and Serangoon also display high concentrations and variations of desire lines with neighboring hexagons, indicating higher ridership within these areas.\nFurthermore, longer desire lines between the North and East (i.e., Woodlands and Changi) suggest passengers’ willingness to travel longer distances to their destinations.\nWhile OD flows provide valuable insights by quickly visualizing travel patterns, it is beneficial to complement them with other forms of analysis, such as spatial interaction models, for a more comprehensive understanding of the factors affecting urban commuting flow."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#extracting-inter--intra-zonal-flow-data",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#extracting-inter--intra-zonal-flow-data",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "8.3 Extracting Inter- & Intra-Zonal Flow Data",
    "text": "8.3 Extracting Inter- & Intra-Zonal Flow Data\nTo calibrate separate Spatial Interaction Models for inter- and intra-zonal flows, we can select the data required using the Zone_Type variable created previously.\nNext, inter-zonal flow will be selected from flow_data and saved into a new output data.frame called interzonal_flow using the code chunk below, and intra-zonal flow will be filtered for and saved in intrazonal_flow.\n\ninterzonal_flow &lt;- flowdata_final %&gt;%\n  filter(Zone_Type=='interzone')\n\nintrazonal_flow &lt;- flowdata_final %&gt;%\n  filter(Zone_Type=='intrazone')"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#removing-outliers",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#removing-outliers",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "10.3.1 Removing Outliers",
    "text": "10.3.1 Removing Outliers\nUpon further investigation, the outliers correspond to the observations detailed below.\n\n\nShow the code\ndatatable(interzonal_flow[interzonal_flow$TRIPS %in% c(77433, 77255, 76780), ])\n\n\n\n\n\n\n\nTo analyse the impact of the outliers on our model fit, we remove the outliers using the filter() function and recalibrated the models using glm().\n\ninterzonal_flow2 &lt;- interzonal_flow %&gt;%\n  filter(!TRIPS %in% c(77433, 77255, 76780))\n\n\nuncSIM2 &lt;- glm(formula = TRIPS ~ \n                log(ORI_TRAINEXITS) +\n                #log(ORI_BIZ) +\n                #log(ORI_FS) +\n                #log(ORI_RECS) +\n                #log(ORI_RETAIL) +\n                #log(ORI_SCHOOLS) +\n                log(ORI_HDBPOP) +\n                log(DEST_TRAINEXITS) +\n                log(DEST_BIZ) +\n                log(DEST_FS) +\n                log(DEST_RECS) +\n                log(DEST_RETAIL) +\n                log(DEST_SCHOOLS) +\n                #log(DEST_HDBPOP) +\n                log(dist),\n              family = poisson(link = \"log\"),\n              data = interzonal_flow2,\n              na.action = na.exclude) # excludes any NAs in the data\n\norcSIM2 &lt;- glm(formula = TRIPS ~ \n                ORIGIN_GRID +\n                #log(ORI_TRAINEXITS) +\n                #log(ORI_BIZ) +\n                #log(ORI_FS) +\n                #log(ORI_RECS) +\n                #log(ORI_RETAIL) +\n                #log(ORI_SCHOOLS) +\n                #log(ORI_HDBPOP) +\n                log(DEST_TRAINEXITS) +\n                log(DEST_BIZ) +\n                log(DEST_FS) +\n                log(DEST_RECS) +\n                log(DEST_RETAIL) +\n                log(DEST_SCHOOLS) +\n                #log(DEST_HDBPOP) +\n                log(dist) - 1,\n              family = poisson(link = \"log\"),\n              data = interzonal_flow2,\n              na.action = na.exclude) # excludes any NAs in the data\n\ndecSIM2 &lt;- glm(formula = TRIPS ~ \n                DESTIN_GRID +\n                log(ORI_TRAINEXITS) +\n                #log(ORI_BIZ) +\n                #log(ORI_FS) +\n                #log(ORI_RECS) +\n                #log(ORI_RETAIL) +\n                #log(ORI_SCHOOLS) +\n                log(ORI_HDBPOP) +\n                #log(DEST_TRAINEXITS) +\n                #log(DEST_BIZ) +\n                #log(DEST_FS) +\n                #log(DEST_RECS) +\n                #log(DEST_RETAIL) +\n                #log(DEST_SCHOOLS) +\n                #log(DEST_HDBPOP) +\n                log(dist) - 1,\n              family = poisson(link = \"log\"),\n              data = interzonal_flow2,\n              na.action = na.exclude) # excludes any NAs in the data\n\ndbcSIM2 &lt;- glm(formula = TRIPS ~ \n                ORIGIN_GRID +\n                DESTIN_GRID +\n                log(dist),\n              family = poisson(link = \"log\"),\n              data = interzonal_flow2,\n              na.action = na.exclude) # excludes any NAs in the data\n\nR-Squared\n\n\nShow the code\nrsq(uncSIM2$data$TRIPS, uncSIM2$fitted.values)\nrsq(orcSIM2$data$TRIPS, orcSIM2$fitted.values)\nrsq(decSIM2$data$TRIPS, decSIM2$fitted.values)\nrsq(dbcSIM2$data$TRIPS, dbcSIM2$fitted.values)\n\n\nThe table below compares the R-Squared values before and after the removal of the outliers.\n\n\n\n\n\n\n\n\nModel\nR-Squared Value\nR-Squared Value after removing outliers\n\n\n\n\nUnconstrained\n0.257\n0.267\n\n\nOrigin-Constrained\n0.408\n0.410\n\n\nDestination-Constrained\n0.402\n0.425\n\n\nDoubly-Constrained\n0.577\n0.580\n\n\n\nRMSE\n\n\nShow the code\nmodel_list2 &lt;- list(\n  Unconstrained = uncSIM,\n  Unconstrained_wo_Outliers = uncSIM2,\n  Origin_Constrained = orcSIM,\n  Origin_Constrained_wo_Outliers = orcSIM2,\n  Desintation_Constrained = decSIM,\n  Desintation_Constrained_wo_Outliers = decSIM2,\n  Doubly_Constrained = dbcSIM, \n  Doubly_Constrained_wo_Outliers = dbcSIM2)\n\ncompare_performance(model_list2,\n                    metrics = \"RMSE\")\n\n\n# Comparison of Model Performance Indices\n\nName                                | Model |     RMSE\n------------------------------------------------------\nUnconstrained                       |   glm | 1542.581\nUnconstrained_wo_Outliers           |   glm | 1465.486\nOrigin_Constrained                  |   glm | 1377.536\nOrigin_Constrained_wo_Outliers      |   glm | 1315.708\nDesintation_Constrained             |   glm | 1383.029\nDesintation_Constrained_wo_Outliers |   glm | 1298.150\nDoubly_Constrained                  |   glm | 1164.166\nDoubly_Constrained_wo_Outliers      |   glm | 1108.979\n\n\nWe observe a marked improvement in both R-Squared and RMSE values following the removal of outliers, with the Doubly-Constrained model still yielding the best results."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#unconstrained-sim-3",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#unconstrained-sim-3",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "11.1 Unconstrained SIM",
    "text": "11.1 Unconstrained SIM\nModel\nNote that compared to Unconstrained model used for interzonal travels, origin propulsiveness variable ORI_TRAINEXITS has been removed to prevent multicollinearly with DEST_TRAINEXITS.\nAdditionally, in the context of modeling intrazonal flows, where the origin and destination grids are the same, log(dist) has been excluded from the models. This is because the primary factor influencing intrazonal flows is likely not distance, but other area characteristics such as population density, the presence of businesses, and schools. Therefore, the emphasis should be placed more on these local factors rather than on the distance between points within the same zone.\n\nintra_uncSIM &lt;- glm(formula = TRIPS ~ \n                #log(ORI_TRAINEXITS) +\n                #log(ORI_BIZ) +\n                #log(ORI_FS) +\n                #log(ORI_RECS) +\n                #log(ORI_RETAIL) +\n                #log(ORI_SCHOOLS) +\n                log(ORI_HDBPOP) +\n                log(DEST_TRAINEXITS) +\n                log(DEST_BIZ) +\n                log(DEST_FS) +\n                log(DEST_RECS) +\n                log(DEST_RETAIL) +\n                log(DEST_SCHOOLS),\n                #log(DEST_HDBPOP) +\n                #log(dist),\n              family = poisson(link = \"log\"),\n              data = intrazonal_flow,\n              na.action = na.exclude) # excludes any NAs in the data\n\nCoefficients & p-Values\n\n\nShow the code\nsummary(intra_uncSIM)\n\n\n\nCall:\nglm(formula = TRIPS ~ log(ORI_HDBPOP) + log(DEST_TRAINEXITS) + \n    log(DEST_BIZ) + log(DEST_FS) + log(DEST_RECS) + log(DEST_RETAIL) + \n    log(DEST_SCHOOLS), family = poisson(link = \"log\"), data = intrazonal_flow, \n    na.action = na.exclude)\n\nCoefficients:\n                       Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)           5.5296299  0.0038964 1419.15   &lt;2e-16 ***\nlog(ORI_HDBPOP)       0.1721464  0.0004216  408.32   &lt;2e-16 ***\nlog(DEST_TRAINEXITS)  0.3796332  0.0016871  225.02   &lt;2e-16 ***\nlog(DEST_BIZ)        -0.0264961  0.0011284  -23.48   &lt;2e-16 ***\nlog(DEST_FS)          0.7188624  0.0019172  374.96   &lt;2e-16 ***\nlog(DEST_RECS)       -0.4656417  0.0017543 -265.43   &lt;2e-16 ***\nlog(DEST_RETAIL)     -0.0840799  0.0011742  -71.61   &lt;2e-16 ***\nlog(DEST_SCHOOLS)     0.1652208  0.0029321   56.35   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 2633018  on 622  degrees of freedom\nResidual deviance: 1331801  on 615  degrees of freedom\nAIC: 1336237\n\nNumber of Fisher Scoring iterations: 6\n\n\nThe p-values associated with each predictor variable is &lt; 0.05, this suggests that all the coefficients used in the model have a statistically significant relationship with the weekday morning peak period bus trips.\nFrom the results, we can also see that the top 2 coefficients with positive relationships are: number of financial services at destination (0.72) and number of train station exits at destination (0.380).\nThe top coefficient with inverse relationships is the number of leisure / recreational places at destination (-0.47).\n\n\nShow the code\ndata.frame(\n  Coefficient = sort(intra_uncSIM$coefficients, decreasing = TRUE)\n\n)\n\n\n                     Coefficient\n(Intercept)           5.52962994\nlog(DEST_FS)          0.71886238\nlog(DEST_TRAINEXITS)  0.37963325\nlog(ORI_HDBPOP)       0.17214637\nlog(DEST_SCHOOLS)     0.16522081\nlog(DEST_BIZ)        -0.02649608\nlog(DEST_RETAIL)     -0.08407990\nlog(DEST_RECS)       -0.46564173"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#model-performance",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#model-performance",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "11.2 Model Performance",
    "text": "11.2 Model Performance\n\nR-SquaredRoot Mean Squared ErrorVisualising Fitted Values\n\n\nAn R-squared value of 0.277 means that approximately 27.7% of the variance in the TRIPS dependent variable is explained by the independent variables in the model.\n\nrsq(intra_uncSIM$data$TRIPS, intra_uncSIM$fitted.values)\n\n[1] 0.2773752\n\n\n\n\nSince we only have one model for intrazonal flow, we can use rmse() directly to measure how far predicted values are from observed values.\n\nrmse(intra_uncSIM)\n\n[1] 3425.455\n\n\nA high RMSE suggests that the model may not be very accurate in its predictions. Let’s visualise the fitted values to see if we can identify any outliers causing the unpredcitability.\n\n\n\n\nShow the code\n# Extracts fitted values from model\ndf &lt;- as.data.frame(intra_uncSIM$fitted.values) %&gt;%\n    round(digits = 0)\n\n# Append fitted values to inter_zonal_flow\nintrazonal_flow  &lt;- intrazonal_flow  %&gt;%\n    cbind(df) %&gt;%\n    rename(uncTRIPS = \"intra_uncSIM$fitted.values\")\n\n\n\n\nShow the code\np_intra_uncSIM &lt;-\n  ggplot(data = intrazonal_flow,\n                aes(x = uncTRIPS,\n                    y = TRIPS)) +\n  geom_point(shape = 16, size = 0.5) +\n  geom_smooth(method = lm) +\n  ggtitle(\"Unconstrained SIM for Intrazonal Flow\") +\n  theme(\nplot.title = element_text(size=8, face=\"bold\"),\naxis.title.x = element_text(size=8, face=\"bold\"),\naxis.title.y = element_text(size=8, face=\"bold\"),\naxis.text.x = element_text(size=6),\naxis.text.y = element_text(size=6)\n)\n\nggplotly(p_intra_uncSIM)\n\n\n\n\n\n\nNotably, the point on the top of the graph where TRIPS = 62718 deviates from the best fit line most.\nThe outlier point corresponds to the intrazonal travel within the Admiralty/Woodlands area below:\n\n\nShow the code\ndatatable(intrazonal_flow[intrazonal_flow$TRIPS %in% c(62718), ])"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex2/THE2.html#deviance-residuals-vs-fitted-values-1",
    "href": "Take-Home_Ex/Take-Home_Ex2/THE2.html#deviance-residuals-vs-fitted-values-1",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "11.4 Deviance Residuals vs Fitted Values",
    "text": "11.4 Deviance Residuals vs Fitted Values\nSimilar to the steps performed for interzonal flows, we use residuals() and fitted() to obtain the deviance residuals and fitted values respectively.\n\nres_intra_uncSIM &lt;- residuals(intra_uncSIM, type=\"deviance\")\nres_intra_uncSIM2 &lt;- residuals(intra_uncSIM2, type=\"deviance\")\n\nfitted_intra_uncSIM &lt;- fitted(intra_uncSIM)\nfitted_intra_uncSIM2 &lt;- fitted(intra_uncSIM2)\n\nBy employing ggplot(), we can compare the plots of residuals versus fitted values for the Doubly-Constrained model with and without outliers. The axis range for both plots are kept constant to visualise the difference between both plots.\n\n\nShow the code\n# Create data frames for plotting\ndf_intra_unccSIM &lt;- data.frame(Fitted = fitted_intra_uncSIM, Residuals = res_intra_uncSIM)\ndf_intra_uncSIM2 &lt;- data.frame(Fitted = fitted_intra_uncSIM2, Residuals = res_intra_uncSIM2)\n\n# Create individual ggplots\ndr_intra_uncSIM &lt;- ggplot(df_intra_unccSIM, aes(x = Fitted, y = Residuals)) +\n  geom_point(size = 0.5) +\n  geom_hline(yintercept = 0, color = \"red\", linetype = \"dashed\") +\n  labs(x = \"Fitted Values\", y = \"Deviance Residuals\", title = \"Unconstrained SIM\") +\n  theme(\n    plot.title = element_text(size=8, face=\"bold\"),\n    axis.title.x = element_text(size=8, face=\"bold\"),\n    axis.title.y = element_text(size=8, face=\"bold\"),\n    axis.text.x = element_text(size=6),\n    axis.text.y = element_text(size=6)\n    ) +\n  scale_y_continuous(limits = c(-150, 500)) \n\ndr_intra_uncSIM2 &lt;- ggplot(df_intra_uncSIM2, aes(x = Fitted, y = Residuals)) +\n  geom_point(size = 0.5) +\n  geom_hline(yintercept = 0, color = \"red\", linetype = \"dashed\") +\n  labs(x = \"Fitted Values\", y = \"Deviance Residuals\", title = \"Unconstrained SIM w/o Outliers\") +\n  theme(\n    plot.title = element_text(size=8, face=\"bold\"),\n    axis.title.x = element_text(size=8, face=\"bold\"),\n    axis.title.y = element_text(size=8, face=\"bold\"),\n    axis.text.x = element_text(size=6),\n    axis.text.y = element_text(size=6)\n    ) +\n  scale_y_continuous(limits = c(-150, 500)) \n\n# Arrange the plots side by side\nggarrange(dr_intra_uncSIM, dr_intra_uncSIM2, ncol = 2, nrow = 1)\n\n\n\n\n\nIn general, most of the residuals for Unconstrained SIM are scattered around the zero line, which is desirable. Before removing the outlier, there was significantly higher deviance residuals, indicating large prediction errors for those observations. In the right plot, removal of the outlier led to a tighter clustering of residuals around the zero line, suggesting that the model fit has improved."
  }
]